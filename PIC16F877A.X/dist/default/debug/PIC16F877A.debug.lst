

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat Feb 10 22:16:24 2024

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	strings,global,class=STRING,delta=2,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    25                           	dabs	1,0x7E,2
    26     0000                     
    27                           ; Version 2.40
    28                           ; Generated 17/11/2021 GMT
    29                           ; 
    30                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution. Publication is not required when
    44                           ;        this file is used in an embedded application.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC16F877A Definitions
    60                           ; 
    61                           ; SFR Addresses
    62     0000                     	;# 
    63     0001                     	;# 
    64     0002                     	;# 
    65     0003                     	;# 
    66     0004                     	;# 
    67     0005                     	;# 
    68     0006                     	;# 
    69     0007                     	;# 
    70     0008                     	;# 
    71     0009                     	;# 
    72     000A                     	;# 
    73     000B                     	;# 
    74     000C                     	;# 
    75     000D                     	;# 
    76     000E                     	;# 
    77     000E                     	;# 
    78     000F                     	;# 
    79     0010                     	;# 
    80     0011                     	;# 
    81     0012                     	;# 
    82     0013                     	;# 
    83     0014                     	;# 
    84     0015                     	;# 
    85     0015                     	;# 
    86     0016                     	;# 
    87     0017                     	;# 
    88     0018                     	;# 
    89     0019                     	;# 
    90     001A                     	;# 
    91     001B                     	;# 
    92     001B                     	;# 
    93     001C                     	;# 
    94     001D                     	;# 
    95     001E                     	;# 
    96     001F                     	;# 
    97     0081                     	;# 
    98     0085                     	;# 
    99     0086                     	;# 
   100     0087                     	;# 
   101     0088                     	;# 
   102     0089                     	;# 
   103     008C                     	;# 
   104     008D                     	;# 
   105     008E                     	;# 
   106     0091                     	;# 
   107     0092                     	;# 
   108     0093                     	;# 
   109     0094                     	;# 
   110     0098                     	;# 
   111     0099                     	;# 
   112     009C                     	;# 
   113     009D                     	;# 
   114     009E                     	;# 
   115     009F                     	;# 
   116     010C                     	;# 
   117     010D                     	;# 
   118     010E                     	;# 
   119     010F                     	;# 
   120     018C                     	;# 
   121     018D                     	;# 
   122     0000                     	;# 
   123     0001                     	;# 
   124     0002                     	;# 
   125     0003                     	;# 
   126     0004                     	;# 
   127     0005                     	;# 
   128     0006                     	;# 
   129     0007                     	;# 
   130     0008                     	;# 
   131     0009                     	;# 
   132     000A                     	;# 
   133     000B                     	;# 
   134     000C                     	;# 
   135     000D                     	;# 
   136     000E                     	;# 
   137     000E                     	;# 
   138     000F                     	;# 
   139     0010                     	;# 
   140     0011                     	;# 
   141     0012                     	;# 
   142     0013                     	;# 
   143     0014                     	;# 
   144     0015                     	;# 
   145     0015                     	;# 
   146     0016                     	;# 
   147     0017                     	;# 
   148     0018                     	;# 
   149     0019                     	;# 
   150     001A                     	;# 
   151     001B                     	;# 
   152     001B                     	;# 
   153     001C                     	;# 
   154     001D                     	;# 
   155     001E                     	;# 
   156     001F                     	;# 
   157     0081                     	;# 
   158     0085                     	;# 
   159     0086                     	;# 
   160     0087                     	;# 
   161     0088                     	;# 
   162     0089                     	;# 
   163     008C                     	;# 
   164     008D                     	;# 
   165     008E                     	;# 
   166     0091                     	;# 
   167     0092                     	;# 
   168     0093                     	;# 
   169     0094                     	;# 
   170     0098                     	;# 
   171     0099                     	;# 
   172     009C                     	;# 
   173     009D                     	;# 
   174     009E                     	;# 
   175     009F                     	;# 
   176     010C                     	;# 
   177     010D                     	;# 
   178     010E                     	;# 
   179     010F                     	;# 
   180     018C                     	;# 
   181     018D                     	;# 
   182     0000                     	;# 
   183     0001                     	;# 
   184     0002                     	;# 
   185     0003                     	;# 
   186     0004                     	;# 
   187     0005                     	;# 
   188     0006                     	;# 
   189     0007                     	;# 
   190     0008                     	;# 
   191     0009                     	;# 
   192     000A                     	;# 
   193     000B                     	;# 
   194     000C                     	;# 
   195     000D                     	;# 
   196     000E                     	;# 
   197     000E                     	;# 
   198     000F                     	;# 
   199     0010                     	;# 
   200     0011                     	;# 
   201     0012                     	;# 
   202     0013                     	;# 
   203     0014                     	;# 
   204     0015                     	;# 
   205     0015                     	;# 
   206     0016                     	;# 
   207     0017                     	;# 
   208     0018                     	;# 
   209     0019                     	;# 
   210     001A                     	;# 
   211     001B                     	;# 
   212     001B                     	;# 
   213     001C                     	;# 
   214     001D                     	;# 
   215     001E                     	;# 
   216     001F                     	;# 
   217     0081                     	;# 
   218     0085                     	;# 
   219     0086                     	;# 
   220     0087                     	;# 
   221     0088                     	;# 
   222     0089                     	;# 
   223     008C                     	;# 
   224     008D                     	;# 
   225     008E                     	;# 
   226     0091                     	;# 
   227     0092                     	;# 
   228     0093                     	;# 
   229     0094                     	;# 
   230     0098                     	;# 
   231     0099                     	;# 
   232     009C                     	;# 
   233     009D                     	;# 
   234     009E                     	;# 
   235     009F                     	;# 
   236     010C                     	;# 
   237     010D                     	;# 
   238     010E                     	;# 
   239     010F                     	;# 
   240     018C                     	;# 
   241     018D                     	;# 
   242                           
   243                           	psect	idataBANK0
   244     05DD                     __pidataBANK0:
   245                           
   246                           ;initializer for __XTAL_FREQ
   247     05DD  3400               	retlw	0
   248     05DE  3412               	retlw	18
   249     05DF  347A               	retlw	122
   250     05E0  3400               	retlw	0
   251                           
   252                           	psect	nvCOMMON
   253     007D                     __pnvCOMMON:
   254     007D                     _LCD_RS:
   255     007D                     	ds	1
   256                           
   257                           	psect	nvBANK0
   258     0020                     __pnvBANK0:
   259     0020                     __port:
   260     0020                     	ds	2
   261     0022                     _LCD_D7:
   262     0022                     	ds	1
   263     0023                     _LCD_D6:
   264     0023                     	ds	1
   265     0024                     _LCD_D5:
   266     0024                     	ds	1
   267     0025                     _LCD_D4:
   268     0025                     	ds	1
   269     0026                     _LCD_EN:
   270     0026                     	ds	1
   271     0008                     _PORTD	set	8
   272     0088                     _TRISD	set	136
   273                           
   274                           	psect	strings
   275     0004                     __pstrings:
   276     0004                     stringtab:
   277     0004                     __stringtab:
   278     0004                     stringcode:	
   279                           ;	String table - string pointers are 1 byte each
   280                           
   281     0004                     stringdir:
   282     0004  3000               	movlw	high stringdir
   283     0005  008A               	movwf	10
   284     0006  0804               	movf	4,w
   285     0007  0A84               	incf	4,f
   286     0008  0782               	addwf	2,f
   287     0009                     __stringbase:
   288     0009  3400               	retlw	0
   289     000A                     __end_of__stringtab:
   290     000A                     STR_1:
   291     000A  3450               	retlw	80	;'P'
   292     000B  3449               	retlw	73	;'I'
   293     000C  3443               	retlw	67	;'C'
   294     000D  3431               	retlw	49	;'1'
   295     000E  3436               	retlw	54	;'6'
   296     000F  3446               	retlw	70	;'F'
   297     0010  3438               	retlw	56	;'8'
   298     0011  3437               	retlw	55	;'7'
   299     0012  3437               	retlw	55	;'7'
   300     0013  3441               	retlw	65	;'A'
   301     0014  3420               	retlw	32	;' '
   302     0015  342B               	retlw	43	;'+'
   303     0016  3420               	retlw	32	;' '
   304     0017  344C               	retlw	76	;'L'
   305     0018  3443               	retlw	67	;'C'
   306     0019  3444               	retlw	68	;'D'
   307     001A  3400               	retlw	0
   308     001B                     STR_2:
   309     001B  344D               	retlw	77	;'M'
   310     001C  3450               	retlw	80	;'P'
   311     001D  344C               	retlw	76	;'L'
   312     001E  3441               	retlw	65	;'A'
   313     001F  3442               	retlw	66	;'B'
   314     0020  3420               	retlw	32	;' '
   315     0021  3458               	retlw	88	;'X'
   316     0022  3443               	retlw	67	;'C'
   317     0023  3438               	retlw	56	;'8'
   318     0024  3400               	retlw	0
   319                           
   320                           	psect	cinit
   321     07E5                     start_initialization:	
   322                           ; #config settings
   323                           
   324     07E5                     __initialization:
   325                           
   326                           ; Initialize objects allocated to BANK0
   327     07E5  120A  118A  25DD  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   328     07EA  00A7               	movwf	__pdataBANK0& (0+127)
   329     07EB  120A  118A  25DE  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   330     07F0  00A8               	movwf	(__pdataBANK0+1)& (0+127)
   331     07F1  120A  118A  25DF  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   332     07F6  00A9               	movwf	(__pdataBANK0+2)& (0+127)
   333     07F7  120A  118A  25E0   	fcall	__pidataBANK0+3	;fetch initializer
   334     07FA  00AA               	movwf	(__pdataBANK0+3)& (0+127)
   335                           
   336                           ; Clear objects allocated to BANK0
   337     07FB  01AE               	clrf	__pbssBANK0& (0+127)
   338     07FC                     end_of_initialization:	
   339                           ;End of C runtime variable initialization code
   340                           
   341     07FC                     __end_of__initialization:
   342     07FC  0183               	clrf	3
   343     07FD  120A  118A  2F02   	ljmp	_main	;jump to C main() function
   344                           
   345                           	psect	bssBANK0
   346     002E                     __pbssBANK0:
   347     002E                     __displaycontrol:
   348     002E                     	ds	1
   349                           
   350                           	psect	dataBANK0
   351     0027                     __pdataBANK0:
   352     0027                     __XTAL_FREQ:
   353     0027                     	ds	4
   354                           
   355                           	psect	cstackCOMMON
   356     0071                     __pcstackCOMMON:
   357     0071                     ?_LCD:
   358     0071                     ?_LCD_PutS:	
   359                           ; 1 bytes @ 0x0
   360                           
   361     0071                     ?_WritePin:	
   362                           ; 1 bytes @ 0x0
   363                           
   364     0071                     ?_WriteNibble:	
   365                           ; 1 bytes @ 0x0
   366                           
   367     0071                     ?_WriteByte:	
   368                           ; 1 bytes @ 0x0
   369                           
   370     0071                     ?_LCD_Clear:	
   371                           ; 1 bytes @ 0x0
   372                           
   373     0071                     ?_EnablePulse:	
   374                           ; 1 bytes @ 0x0
   375                           
   376     0071                     ?_main:	
   377                           ; 1 bytes @ 0x0
   378                           
   379     0071                     LCD_Begin@cols:	
   380                           ; 1 bytes @ 0x0
   381                           
   382     0071                     WritePin@val:	
   383                           ; 1 bytes @ 0x0
   384                           
   385     0071                     LCD@_p:	
   386                           ; 1 bytes @ 0x0
   387                           
   388                           
   389                           ; 2 bytes @ 0x0
   390     0071                     	ds	1
   391     0072                     ??_WritePin:
   392                           
   393                           ; 1 bytes @ 0x1
   394     0072                     	ds	1
   395     0073                     LCD@rs:
   396                           
   397                           ; 1 bytes @ 0x2
   398     0073                     	ds	1
   399     0074                     LCD@en:
   400     0074                     WritePin@_pin:	
   401                           ; 1 bytes @ 0x3
   402                           
   403                           
   404                           ; 1 bytes @ 0x3
   405     0074                     	ds	1
   406     0075                     ??_EnablePulse:
   407     0075                     LCD@d4:	
   408                           ; 1 bytes @ 0x4
   409                           
   410                           
   411                           ; 1 bytes @ 0x4
   412     0075                     	ds	1
   413     0076                     ??_WriteNibble:
   414     0076                     LCD@d5:	
   415                           ; 1 bytes @ 0x5
   416                           
   417     0076                     WriteNibble@b:	
   418                           ; 1 bytes @ 0x5
   419                           
   420                           
   421                           ; 1 bytes @ 0x5
   422     0076                     	ds	1
   423     0077                     ??_WriteByte:
   424     0077                     LCD@d6:	
   425                           ; 1 bytes @ 0x6
   426                           
   427                           
   428                           ; 1 bytes @ 0x6
   429     0077                     	ds	1
   430     0078                     LCD@d7:
   431     0078                     WriteByte@b:	
   432                           ; 1 bytes @ 0x7
   433                           
   434                           
   435                           ; 1 bytes @ 0x7
   436     0078                     	ds	1
   437     0079                     ??_LCD:
   438     0079                     ?_LCD_Goto:	
   439                           ; 1 bytes @ 0x8
   440                           
   441     0079                     ??_LCD_PutS:	
   442                           ; 1 bytes @ 0x8
   443                           
   444     0079                     ??_LCD_Clear:	
   445                           ; 1 bytes @ 0x8
   446                           
   447     0079                     LCD_Goto@row:	
   448                           ; 1 bytes @ 0x8
   449                           
   450                           
   451                           ; 1 bytes @ 0x8
   452     0079                     	ds	1
   453     007A                     ??_LCD_Goto:
   454     007A                     LCD_PutS@i:	
   455                           ; 1 bytes @ 0x9
   456                           
   457                           
   458                           ; 1 bytes @ 0x9
   459     007A                     	ds	1
   460     007B                     ?_LCD_Begin:
   461     007B                     LCD_Begin@lines:	
   462                           ; 1 bytes @ 0xA
   463                           
   464     007B                     LCD_PutS@_str:	
   465                           ; 1 bytes @ 0xA
   466                           
   467                           
   468                           ; 1 bytes @ 0xA
   469     007B                     	ds	1
   470     007C                     LCD_Begin@_function_set:
   471     007C                     LCD_Goto@col:	
   472                           ; 1 bytes @ 0xB
   473                           
   474                           
   475                           ; 1 bytes @ 0xB
   476     007C                     	ds	1
   477     007D                     ??_main:
   478                           
   479                           	psect	cstackBANK0
   480     002B                     __pcstackBANK0:	
   481                           ; 1 bytes @ 0xC
   482                           
   483     002B                     ??_LCD_Begin:
   484                           
   485                           ; 1 bytes @ 0x0
   486     002B                     	ds	3
   487                           
   488                           	psect	maintext
   489     0702                     __pmaintext:	
   490 ;;
   491 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   492 ;;
   493 ;; *************** function _main *****************
   494 ;; Defined at:
   495 ;;		line 22 in file "main.c"
   496 ;; Parameters:    Size  Location     Type
   497 ;;		None
   498 ;; Auto vars:     Size  Location     Type
   499 ;;		None
   500 ;; Return value:  Size  Location     Type
   501 ;;                  1    wreg      void 
   502 ;; Registers used:
   503 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   504 ;; Tracked objects:
   505 ;;		On entry : B00/0
   506 ;;		On exit  : 0/0
   507 ;;		Unchanged: 0/0
   508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   509 ;;      Params:         0       0       0       0       0
   510 ;;      Locals:         0       0       0       0       0
   511 ;;      Temps:          0       0       0       0       0
   512 ;;      Totals:         0       0       0       0       0
   513 ;;Total ram usage:        0 bytes
   514 ;; Hardware stack levels required when called: 6
   515 ;; This function calls:
   516 ;;		_LCD
   517 ;;		_LCD_Begin
   518 ;;		_LCD_Goto
   519 ;;		_LCD_PutS
   520 ;; This function is called by:
   521 ;;		Startup code after reset
   522 ;; This function uses a non-reentrant model
   523 ;;
   524                           
   525     0702                     _main:	
   526                           ;psect for function _main
   527                           
   528                           
   529                           ;main.c: 24:     TRISD = 0;
   530                           
   531                           ;incstack = 0
   532                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   533     0702  1683               	bsf	3,5	;RP0=1, select bank1
   534     0703  1303               	bcf	3,6	;RP1=0, select bank1
   535     0704  0188               	clrf	8	;volatile
   536                           
   537                           ;main.c: 27:     LCD(&PORTD, 0, 1, 2, 3, 4, 5);
   538     0705  3008               	movlw	8
   539     0706  00F1               	movwf	LCD@_p
   540     0707  3000               	movlw	0
   541     0708  00F2               	movwf	LCD@_p+1
   542     0709  01F3               	clrf	LCD@rs
   543     070A  01F4               	clrf	LCD@en
   544     070B  0AF4               	incf	LCD@en,f
   545     070C  3002               	movlw	2
   546     070D  00F5               	movwf	LCD@d4
   547     070E  3003               	movlw	3
   548     070F  00F6               	movwf	LCD@d5
   549     0710  3004               	movlw	4
   550     0711  00F7               	movwf	LCD@d6
   551     0712  3005               	movlw	5
   552     0713  00F8               	movwf	LCD@d7
   553     0714  120A  118A  25E1  120A  118A  	fcall	_LCD
   554                           
   555                           ;main.c: 30:     LCD_Begin(16, 2);
   556     0719  3002               	movlw	2
   557     071A  00FB               	movwf	LCD_Begin@lines
   558     071B  3010               	movlw	16
   559     071C  120A  118A  273E  120A  118A  	fcall	_LCD_Begin
   560                           
   561                           ;main.c: 33:     LCD_Goto(1, 1);
   562     0721  01F9               	clrf	LCD_Goto@row
   563     0722  0AF9               	incf	LCD_Goto@row,f
   564     0723  3001               	movlw	1
   565     0724  120A  118A  26CA  120A  118A  	fcall	_LCD_Goto
   566                           
   567                           ;main.c: 34:     LCD_PutS("PIC16F877A + LCD");
   568     0729  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   569     072A  120A  118A  2643  120A  118A  	fcall	_LCD_PutS
   570                           
   571                           ;main.c: 35:     LCD_Goto(1, 2);
   572     072F  3002               	movlw	2
   573     0730  00F9               	movwf	LCD_Goto@row
   574     0731  3001               	movlw	1
   575     0732  120A  118A  26CA  120A  118A  	fcall	_LCD_Goto
   576                           
   577                           ;main.c: 36:     LCD_PutS("MPLAB XC8");
   578     0737  3012               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   579     0738  120A  118A  2643  120A  118A  	fcall	_LCD_PutS
   580     073D                     l19:	
   581                           ;main.c: 38:     while (1) ;
   582                           
   583     073D  2F3D               	goto	l19
   584     073E                     __end_of_main:
   585                           
   586                           	psect	text1
   587     0643                     __ptext1:	
   588 ;; *************** function _LCD_PutS *****************
   589 ;; Defined at:
   590 ;;		line 102 in file "../lcd.c"
   591 ;; Parameters:    Size  Location     Type
   592 ;;  _str            1    wreg     PTR unsigned char 
   593 ;;		 -> STR_2(10), STR_1(17), 
   594 ;; Auto vars:     Size  Location     Type
   595 ;;  _str            1   10[COMMON] PTR unsigned char 
   596 ;;		 -> STR_2(10), STR_1(17), 
   597 ;;  i               1    9[COMMON] unsigned char 
   598 ;; Return value:  Size  Location     Type
   599 ;;                  1    wreg      void 
   600 ;; Registers used:
   601 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   602 ;; Tracked objects:
   603 ;;		On entry : 0/0
   604 ;;		On exit  : 0/0
   605 ;;		Unchanged: 0/0
   606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   607 ;;      Params:         0       0       0       0       0
   608 ;;      Locals:         2       0       0       0       0
   609 ;;      Temps:          1       0       0       0       0
   610 ;;      Totals:         3       0       0       0       0
   611 ;;Total ram usage:        3 bytes
   612 ;; Hardware stack levels used: 1
   613 ;; Hardware stack levels required when called: 4
   614 ;; This function calls:
   615 ;;		_WriteByte
   616 ;;		_WritePin
   617 ;; This function is called by:
   618 ;;		_main
   619 ;; This function uses a non-reentrant model
   620 ;;
   621                           
   622     0643                     _LCD_PutS:	
   623                           ;psect for function _LCD_PutS
   624                           
   625                           
   626                           ;incstack = 0
   627                           ; Regs used in _LCD_PutS: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   628                           ;LCD_PutS@_str stored from wreg
   629     0643  00FB               	movwf	LCD_PutS@_str
   630                           
   631                           ;../lcd.c: 102: void LCD_PutS(char* _str);../lcd.c: 103: {;../lcd.c: 104:   WritePin(LCD
      +                          _RS, 1);
   632     0644  01F1               	clrf	WritePin@val
   633     0645  0AF1               	incf	WritePin@val,f
   634     0646  087D               	movf	_LCD_RS,w
   635     0647  120A  118A  266A  120A  118A  	fcall	_WritePin
   636                           
   637                           ;../lcd.c: 105:   uint8_t i = 0;
   638     064C  01FA               	clrf	LCD_PutS@i
   639     064D                     l1376:	
   640                           ;../lcd.c: 106:   while(_str[i] != '\0')
   641                           
   642                           
   643                           ;../lcd.c: 106:   while(_str[i] != '\0')
   644     064D  087A               	movf	LCD_PutS@i,w
   645     064E  077B               	addwf	LCD_PutS@_str,w
   646     064F  0084               	movwf	4
   647     0650  120A  118A  2004  120A  118A  	fcall	stringdir
   648     0655  3A00               	xorlw	0
   649     0656  1903               	btfsc	3,2
   650     0657  0008               	return
   651                           
   652                           ;../lcd.c: 107:       WriteByte( _str[i++] );
   653     0658  087A               	movf	LCD_PutS@i,w
   654     0659  077B               	addwf	LCD_PutS@_str,w
   655     065A  0084               	movwf	4
   656     065B  120A  118A  2004  120A  118A  	fcall	stringdir
   657     0660  120A  118A  25F4  120A  118A  	fcall	_WriteByte
   658     0665  3001               	movlw	1
   659     0666  00F9               	movwf	??_LCD_PutS
   660     0667  0879               	movf	??_LCD_PutS,w
   661     0668  07FA               	addwf	LCD_PutS@i,f
   662     0669  2E4D               	goto	l1376
   663     066A                     __end_of_LCD_PutS:
   664                           
   665                           	psect	text2
   666     06CA                     __ptext2:	
   667 ;; *************** function _LCD_Goto *****************
   668 ;; Defined at:
   669 ;;		line 75 in file "../lcd.c"
   670 ;; Parameters:    Size  Location     Type
   671 ;;  col             1    wreg     unsigned char 
   672 ;;  row             1    8[COMMON] unsigned char 
   673 ;; Auto vars:     Size  Location     Type
   674 ;;  col             1   11[COMMON] unsigned char 
   675 ;; Return value:  Size  Location     Type
   676 ;;                  1    wreg      void 
   677 ;; Registers used:
   678 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   679 ;; Tracked objects:
   680 ;;		On entry : 0/0
   681 ;;		On exit  : 0/0
   682 ;;		Unchanged: 0/0
   683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   684 ;;      Params:         1       0       0       0       0
   685 ;;      Locals:         1       0       0       0       0
   686 ;;      Temps:          2       0       0       0       0
   687 ;;      Totals:         4       0       0       0       0
   688 ;;Total ram usage:        4 bytes
   689 ;; Hardware stack levels used: 1
   690 ;; Hardware stack levels required when called: 4
   691 ;; This function calls:
   692 ;;		_WriteByte
   693 ;;		_WritePin
   694 ;; This function is called by:
   695 ;;		_main
   696 ;; This function uses a non-reentrant model
   697 ;;
   698                           
   699     06CA                     _LCD_Goto:	
   700                           ;psect for function _LCD_Goto
   701                           
   702                           
   703                           ;incstack = 0
   704                           ; Regs used in _LCD_Goto: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   705                           ;LCD_Goto@col stored from wreg
   706     06CA  00FC               	movwf	LCD_Goto@col
   707                           
   708                           ;../lcd.c: 75: void LCD_Goto(uint8_t col, uint8_t row);../lcd.c: 76: {;../lcd.c: 77:    
      +                           WritePin(LCD_RS, 0);
   709     06CB  01F1               	clrf	WritePin@val
   710     06CC  087D               	movf	_LCD_RS,w
   711     06CD  120A  118A  266A  120A  118A  	fcall	_WritePin
   712                           
   713                           ;../lcd.c: 78:     switch (row)
   714     06D2  2EEB               	goto	l1362
   715     06D3                     l1352:
   716     06D3  087C               	movf	LCD_Goto@col,w
   717     06D4  3E7F               	addlw	127
   718     06D5  120A  118A  25F4   	fcall	_WriteByte
   719     06D8  0008               	return
   720     06D9                     l1354:
   721     06D9  087C               	movf	LCD_Goto@col,w
   722     06DA  3EBF               	addlw	191
   723     06DB  120A  118A  25F4   	fcall	_WriteByte
   724     06DE  0008               	return
   725     06DF                     l1356:
   726     06DF  087C               	movf	LCD_Goto@col,w
   727     06E0  3E93               	addlw	147
   728     06E1  120A  118A  25F4   	fcall	_WriteByte
   729     06E4  0008               	return
   730     06E5                     l1358:
   731     06E5  087C               	movf	LCD_Goto@col,w
   732     06E6  3ED3               	addlw	211
   733     06E7  120A  118A  25F4   	fcall	_WriteByte
   734     06EA  0008               	return
   735     06EB                     l1362:
   736     06EB  0879               	movf	LCD_Goto@row,w
   737     06EC  00FA               	movwf	??_LCD_Goto
   738     06ED  01FB               	clrf	??_LCD_Goto+1
   739                           
   740                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   741                           ; Switch size 1, requested type "simple"
   742                           ; Number of cases is 1, Range of values is 0 to 0
   743                           ; switch strategies available:
   744                           ; Name         Instructions Cycles
   745                           ; simple_byte            4     3 (average)
   746                           ; direct_byte           11     8 (fixed)
   747                           ; jumptable            260     6 (fixed)
   748                           ;	Chosen strategy is simple_byte
   749     06EE  087B               	movf	??_LCD_Goto+1,w
   750     06EF  3A00               	xorlw	0	; case 0
   751     06F0  1903               	skipnz
   752     06F1  2EF3               	goto	l1832
   753     06F2  2F01               	goto	l68
   754     06F3                     l1832:
   755                           
   756                           ; Switch size 1, requested type "simple"
   757                           ; Number of cases is 4, Range of values is 1 to 4
   758                           ; switch strategies available:
   759                           ; Name         Instructions Cycles
   760                           ; simple_byte           13     7 (average)
   761                           ; direct_byte           23    11 (fixed)
   762                           ; jumptable            263     9 (fixed)
   763                           ;	Chosen strategy is simple_byte
   764     06F3  087A               	movf	??_LCD_Goto,w
   765     06F4  3A01               	xorlw	1	; case 1
   766     06F5  1903               	skipnz
   767     06F6  2ED3               	goto	l1352
   768     06F7  3A03               	xorlw	3	; case 2
   769     06F8  1903               	skipnz
   770     06F9  2ED9               	goto	l1354
   771     06FA  3A01               	xorlw	1	; case 3
   772     06FB  1903               	skipnz
   773     06FC  2EDF               	goto	l1356
   774     06FD  3A07               	xorlw	7	; case 4
   775     06FE  1903               	skipnz
   776     06FF  2EE5               	goto	l1358
   777     0700  2F01               	goto	l68
   778     0701                     l68:
   779     0701  0008               	return
   780     0702                     __end_of_LCD_Goto:
   781                           
   782                           	psect	text3
   783     073E                     __ptext3:	
   784 ;; *************** function _LCD_Begin *****************
   785 ;; Defined at:
   786 ;;		line 32 in file "../lcd.c"
   787 ;; Parameters:    Size  Location     Type
   788 ;;  cols            1    wreg     unsigned char 
   789 ;;  lines           1   10[COMMON] unsigned char 
   790 ;; Auto vars:     Size  Location     Type
   791 ;;  cols            1    0[COMMON] unsigned char 
   792 ;;  _function_se    1   11[COMMON] unsigned char 
   793 ;; Return value:  Size  Location     Type
   794 ;;                  1    wreg      void 
   795 ;; Registers used:
   796 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   797 ;; Tracked objects:
   798 ;;		On entry : 0/0
   799 ;;		On exit  : 0/0
   800 ;;		Unchanged: 0/0
   801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   802 ;;      Params:         1       0       0       0       0
   803 ;;      Locals:         1       0       0       0       0
   804 ;;      Temps:          0       3       0       0       0
   805 ;;      Totals:         2       3       0       0       0
   806 ;;Total ram usage:        5 bytes
   807 ;; Hardware stack levels used: 1
   808 ;; Hardware stack levels required when called: 5
   809 ;; This function calls:
   810 ;;		_LCD_Clear
   811 ;;		_WriteByte
   812 ;;		_WriteNibble
   813 ;;		_WritePin
   814 ;; This function is called by:
   815 ;;		_main
   816 ;; This function uses a non-reentrant model
   817 ;;
   818                           
   819     073E                     _LCD_Begin:	
   820                           ;psect for function _LCD_Begin
   821                           
   822                           
   823                           ;../lcd.c: 32: void LCD_Begin(uint8_t cols, uint8_t lines);../lcd.c: 33: {;../lcd.c: 34:
      +                               uint8_t _function_set = 0x20;
   824                           
   825                           ;incstack = 0
   826                           ; Regs used in _LCD_Begin: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   827     073E  3020               	movlw	32
   828     073F  00FC               	movwf	LCD_Begin@_function_set
   829                           
   830                           ;../lcd.c: 36:     WritePin(LCD_RS, 0);
   831     0740  01F1               	clrf	WritePin@val
   832     0741  087D               	movf	_LCD_RS,w
   833     0742  120A  118A  266A  120A  118A  	fcall	_WritePin
   834                           
   835                           ;../lcd.c: 37:     WritePin(LCD_EN, 0);
   836     0747  01F1               	clrf	WritePin@val
   837     0748  1283               	bcf	3,5	;RP0=0, select bank0
   838     0749  1303               	bcf	3,6	;RP1=0, select bank0
   839     074A  0826               	movf	_LCD_EN,w
   840     074B  120A  118A  266A  120A  118A  	fcall	_WritePin
   841                           
   842                           ;../lcd.c: 38:     WritePin(LCD_D4, 0);
   843     0750  01F1               	clrf	WritePin@val
   844     0751  1283               	bcf	3,5	;RP0=0, select bank0
   845     0752  1303               	bcf	3,6	;RP1=0, select bank0
   846     0753  0825               	movf	_LCD_D4,w
   847     0754  120A  118A  266A  120A  118A  	fcall	_WritePin
   848                           
   849                           ;../lcd.c: 39:     WritePin(LCD_D5, 0);
   850     0759  01F1               	clrf	WritePin@val
   851     075A  1283               	bcf	3,5	;RP0=0, select bank0
   852     075B  1303               	bcf	3,6	;RP1=0, select bank0
   853     075C  0824               	movf	_LCD_D5,w
   854     075D  120A  118A  266A  120A  118A  	fcall	_WritePin
   855                           
   856                           ;../lcd.c: 40:     WritePin(LCD_D6, 0);
   857     0762  01F1               	clrf	WritePin@val
   858     0763  1283               	bcf	3,5	;RP0=0, select bank0
   859     0764  1303               	bcf	3,6	;RP1=0, select bank0
   860     0765  0823               	movf	_LCD_D6,w
   861     0766  120A  118A  266A  120A  118A  	fcall	_WritePin
   862                           
   863                           ;../lcd.c: 41:     WritePin(LCD_D7, 0);
   864     076B  01F1               	clrf	WritePin@val
   865     076C  1283               	bcf	3,5	;RP0=0, select bank0
   866     076D  1303               	bcf	3,6	;RP1=0, select bank0
   867     076E  0822               	movf	_LCD_D7,w
   868     076F  120A  118A  266A  120A  118A  	fcall	_WritePin
   869                           
   870                           ;../lcd.c: 43:     _delay((unsigned long)((2000)*(_XTAL_FREQ/4000.0)));
   871     0774  3015               	movlw	21
   872     0775  1283               	bcf	3,5	;RP0=0, select bank0
   873     0776  1303               	bcf	3,6	;RP1=0, select bank0
   874     0777  00AD               	movwf	??_LCD_Begin+2
   875     0778  304B               	movlw	75
   876     0779  00AC               	movwf	??_LCD_Begin+1
   877     077A  30BD               	movlw	189
   878     077B  00AB               	movwf	??_LCD_Begin
   879     077C                     u2057:
   880     077C  0BAB               	decfsz	??_LCD_Begin,f
   881     077D  2F7C               	goto	u2057
   882     077E  0BAC               	decfsz	??_LCD_Begin+1,f
   883     077F  2F7C               	goto	u2057
   884     0780  0BAD               	decfsz	??_LCD_Begin+2,f
   885     0781  2F7C               	goto	u2057
   886     0782  2F83               	nop2
   887                           
   888                           ;../lcd.c: 45:     if (lines > 1) {
   889     0783  3002               	movlw	2
   890     0784  027B               	subwf	LCD_Begin@lines,w
   891     0785  1803               	btfsc	3,0
   892                           
   893                           ;../lcd.c: 46:         _function_set |= 0x08;
   894     0786  15FC               	bsf	LCD_Begin@_function_set,3
   895                           
   896                           ;../lcd.c: 52:     WriteNibble(0x03);
   897     0787  3003               	movlw	3
   898     0788  120A  118A  2699  120A  118A  	fcall	_WriteNibble
   899                           
   900                           ;../lcd.c: 53:     _delay((unsigned long)((5)*(_XTAL_FREQ/4000.0)));
   901     078D  300D               	movlw	13
   902     078E  1283               	bcf	3,5	;RP0=0, select bank0
   903     078F  1303               	bcf	3,6	;RP1=0, select bank0
   904     0790  00AC               	movwf	??_LCD_Begin+1
   905     0791  30FB               	movlw	251
   906     0792  00AB               	movwf	??_LCD_Begin
   907     0793                     u2067:
   908     0793  0BAB               	decfsz	??_LCD_Begin,f
   909     0794  2F93               	goto	u2067
   910     0795  0BAC               	decfsz	??_LCD_Begin+1,f
   911     0796  2F93               	goto	u2067
   912                           
   913                           ;../lcd.c: 54:     WriteNibble(0x03);
   914     0797  3003               	movlw	3
   915     0798  120A  118A  2699  120A  118A  	fcall	_WriteNibble
   916                           
   917                           ;../lcd.c: 55:     _delay((unsigned long)((200)*(_XTAL_FREQ/4000000.0)));
   918     079D  3084               	movlw	132
   919     079E  1283               	bcf	3,5	;RP0=0, select bank0
   920     079F  1303               	bcf	3,6	;RP1=0, select bank0
   921     07A0  00AB               	movwf	??_LCD_Begin
   922     07A1                     u2077:
   923     07A1  0BAB               	decfsz	??_LCD_Begin,f
   924     07A2  2FA1               	goto	u2077
   925     07A3  0000               	nop
   926                           
   927                           ;../lcd.c: 56:     WriteNibble(0x03);
   928     07A4  3003               	movlw	3
   929     07A5  120A  118A  2699  120A  118A  	fcall	_WriteNibble
   930                           
   931                           ;../lcd.c: 57:     _delay((unsigned long)((100)*(_XTAL_FREQ/4000000.0)));
   932     07AA  3041               	movlw	65
   933     07AB  1283               	bcf	3,5	;RP0=0, select bank0
   934     07AC  1303               	bcf	3,6	;RP1=0, select bank0
   935     07AD  00AB               	movwf	??_LCD_Begin
   936     07AE                     u2087:
   937     07AE  0BAB               	decfsz	??_LCD_Begin,f
   938     07AF  2FAE               	goto	u2087
   939     07B0  2FB1               	nop2
   940                           
   941                           ;../lcd.c: 58:     WriteNibble(0x02);
   942     07B1  3002               	movlw	2
   943     07B2  120A  118A  2699  120A  118A  	fcall	_WriteNibble
   944                           
   945                           ;../lcd.c: 59:     _delay((unsigned long)((100)*(_XTAL_FREQ/4000000.0)));
   946     07B7  3041               	movlw	65
   947     07B8  1283               	bcf	3,5	;RP0=0, select bank0
   948     07B9  1303               	bcf	3,6	;RP1=0, select bank0
   949     07BA  00AB               	movwf	??_LCD_Begin
   950     07BB                     u2097:
   951     07BB  0BAB               	decfsz	??_LCD_Begin,f
   952     07BC  2FBB               	goto	u2097
   953     07BD  2FBE               	nop2
   954                           
   955                           ;../lcd.c: 61:     WriteByte( _function_set );
   956     07BE  087C               	movf	LCD_Begin@_function_set,w
   957     07BF  120A  118A  25F4  120A  118A  	fcall	_WriteByte
   958                           
   959                           ;../lcd.c: 64:     WriteByte( 0x08 | 0x04 );
   960     07C4  300C               	movlw	12
   961     07C5  120A  118A  25F4  120A  118A  	fcall	_WriteByte
   962                           
   963                           ;../lcd.c: 67:     LCD_Clear();
   964     07CA  120A  118A  2608  120A  118A  	fcall	_LCD_Clear
   965                           
   966                           ;../lcd.c: 69:     WriteByte( 0x04 | 0x02 );
   967     07CF  3006               	movlw	6
   968     07D0  120A  118A  25F4  120A  118A  	fcall	_WriteByte
   969                           
   970                           ;../lcd.c: 70:     _delay((unsigned long)((2)*(_XTAL_FREQ/4000.0)));
   971     07D5  3006               	movlw	6
   972     07D6  1283               	bcf	3,5	;RP0=0, select bank0
   973     07D7  1303               	bcf	3,6	;RP1=0, select bank0
   974     07D8  00AC               	movwf	??_LCD_Begin+1
   975     07D9  302F               	movlw	47
   976     07DA  00AB               	movwf	??_LCD_Begin
   977     07DB                     u2107:
   978     07DB  0BAB               	decfsz	??_LCD_Begin,f
   979     07DC  2FDB               	goto	u2107
   980     07DD  0BAC               	decfsz	??_LCD_Begin+1,f
   981     07DE  2FDB               	goto	u2107
   982     07DF  2FE0               	nop2
   983                           
   984                           ;../lcd.c: 71:     _displaycontrol = 0x08 | 0x04;
   985     07E0  300C               	movlw	12
   986     07E1  1283               	bcf	3,5	;RP0=0, select bank0
   987     07E2  1303               	bcf	3,6	;RP1=0, select bank0
   988     07E3  00AE               	movwf	__displaycontrol
   989     07E4  0008               	return
   990     07E5                     __end_of_LCD_Begin:
   991                           
   992                           	psect	text4
   993     0608                     __ptext4:	
   994 ;; *************** function _LCD_Clear *****************
   995 ;; Defined at:
   996 ;;		line 88 in file "../lcd.c"
   997 ;; Parameters:    Size  Location     Type
   998 ;;		None
   999 ;; Auto vars:     Size  Location     Type
  1000 ;;		None
  1001 ;; Return value:  Size  Location     Type
  1002 ;;                  1    wreg      void 
  1003 ;; Registers used:
  1004 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1005 ;; Tracked objects:
  1006 ;;		On entry : 0/0
  1007 ;;		On exit  : 0/0
  1008 ;;		Unchanged: 0/0
  1009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1010 ;;      Params:         0       0       0       0       0
  1011 ;;      Locals:         0       0       0       0       0
  1012 ;;      Temps:          2       0       0       0       0
  1013 ;;      Totals:         2       0       0       0       0
  1014 ;;Total ram usage:        2 bytes
  1015 ;; Hardware stack levels used: 1
  1016 ;; Hardware stack levels required when called: 4
  1017 ;; This function calls:
  1018 ;;		_WriteByte
  1019 ;;		_WritePin
  1020 ;; This function is called by:
  1021 ;;		_LCD_Begin
  1022 ;; This function uses a non-reentrant model
  1023 ;;
  1024                           
  1025     0608                     _LCD_Clear:	
  1026                           ;psect for function _LCD_Clear
  1027                           
  1028                           
  1029                           ;../lcd.c: 90:     WritePin(LCD_RS, 0);
  1030                           
  1031                           ;incstack = 0
  1032                           ; Regs used in _LCD_Clear: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1033     0608  01F1               	clrf	WritePin@val
  1034     0609  087D               	movf	_LCD_RS,w
  1035     060A  120A  118A  266A  120A  118A  	fcall	_WritePin
  1036                           
  1037                           ;../lcd.c: 91:     WriteByte( 0x01 );
  1038     060F  3001               	movlw	1
  1039     0610  120A  118A  25F4  120A  118A  	fcall	_WriteByte
  1040                           
  1041                           ;../lcd.c: 92:     _delay((unsigned long)((2)*(_XTAL_FREQ/4000.0)));
  1042     0615  3006               	movlw	6
  1043     0616  00FA               	movwf	??_LCD_Clear+1
  1044     0617  3030               	movlw	48
  1045     0618  00F9               	movwf	??_LCD_Clear
  1046     0619                     u2117:
  1047     0619  0BF9               	decfsz	??_LCD_Clear,f
  1048     061A  2E19               	goto	u2117
  1049     061B  0BFA               	decfsz	??_LCD_Clear+1,f
  1050     061C  2E19               	goto	u2117
  1051     061D  0000               	nop
  1052     061E  0008               	return
  1053     061F                     __end_of_LCD_Clear:
  1054                           
  1055                           	psect	text5
  1056     05F4                     __ptext5:	
  1057 ;; *************** function _WriteByte *****************
  1058 ;; Defined at:
  1059 ;;		line 202 in file "../lcd.c"
  1060 ;; Parameters:    Size  Location     Type
  1061 ;;  b               1    wreg     unsigned char 
  1062 ;; Auto vars:     Size  Location     Type
  1063 ;;  b               1    7[COMMON] unsigned char 
  1064 ;; Return value:  Size  Location     Type
  1065 ;;                  1    wreg      void 
  1066 ;; Registers used:
  1067 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1068 ;; Tracked objects:
  1069 ;;		On entry : 0/0
  1070 ;;		On exit  : 0/0
  1071 ;;		Unchanged: 0/0
  1072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1073 ;;      Params:         0       0       0       0       0
  1074 ;;      Locals:         1       0       0       0       0
  1075 ;;      Temps:          1       0       0       0       0
  1076 ;;      Totals:         2       0       0       0       0
  1077 ;;Total ram usage:        2 bytes
  1078 ;; Hardware stack levels used: 1
  1079 ;; Hardware stack levels required when called: 3
  1080 ;; This function calls:
  1081 ;;		_WriteNibble
  1082 ;; This function is called by:
  1083 ;;		_LCD_Begin
  1084 ;;		_LCD_Goto
  1085 ;;		_LCD_Clear
  1086 ;;		_LCD_PutS
  1087 ;;		_LCD_PutC
  1088 ;;		_LCD_Display
  1089 ;;		_LCD_CursorUnderline
  1090 ;;		_LCD_CursorBlink
  1091 ;;		_LCD_ShiftLeft
  1092 ;;		_LCD_ShiftRight
  1093 ;;		_LCD_MoveCursorLeft
  1094 ;;		_LCD_MoveCursorRight
  1095 ;;		_LCD_ReturnHome
  1096 ;; This function uses a non-reentrant model
  1097 ;;
  1098                           
  1099     05F4                     _WriteByte:	
  1100                           ;psect for function _WriteByte
  1101                           
  1102                           
  1103                           ;incstack = 0
  1104                           ; Regs used in _WriteByte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1105                           ;WriteByte@b stored from wreg
  1106     05F4  00F8               	movwf	WriteByte@b
  1107                           
  1108                           ;../lcd.c: 202: void WriteByte(uint8_t b);../lcd.c: 203: {;../lcd.c: 204:     WriteNibbl
      +                          e( b >> 4);
  1109     05F5  0878               	movf	WriteByte@b,w
  1110     05F6  00F7               	movwf	??_WriteByte
  1111     05F7  3004               	movlw	4
  1112     05F8                     u1065:
  1113     05F8  1003               	clrc
  1114     05F9  0CF7               	rrf	??_WriteByte,f
  1115     05FA  3EFF               	addlw	-1
  1116     05FB  1D03               	skipz
  1117     05FC  2DF8               	goto	u1065
  1118     05FD  0877               	movf	??_WriteByte,w
  1119     05FE  120A  118A  2699  120A  118A  	fcall	_WriteNibble
  1120                           
  1121                           ;../lcd.c: 205:     WriteNibble(b);
  1122     0603  0878               	movf	WriteByte@b,w
  1123     0604  120A  118A  2699   	fcall	_WriteNibble
  1124     0607  0008               	return
  1125     0608                     __end_of_WriteByte:
  1126                           
  1127                           	psect	text6
  1128     0699                     __ptext6:	
  1129 ;; *************** function _WriteNibble *****************
  1130 ;; Defined at:
  1131 ;;		line 190 in file "../lcd.c"
  1132 ;; Parameters:    Size  Location     Type
  1133 ;;  b               1    wreg     unsigned char 
  1134 ;; Auto vars:     Size  Location     Type
  1135 ;;  b               1    5[COMMON] unsigned char 
  1136 ;; Return value:  Size  Location     Type
  1137 ;;                  1    wreg      void 
  1138 ;; Registers used:
  1139 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1140 ;; Tracked objects:
  1141 ;;		On entry : 0/0
  1142 ;;		On exit  : 0/0
  1143 ;;		Unchanged: 0/0
  1144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1145 ;;      Params:         0       0       0       0       0
  1146 ;;      Locals:         1       0       0       0       0
  1147 ;;      Temps:          0       0       0       0       0
  1148 ;;      Totals:         1       0       0       0       0
  1149 ;;Total ram usage:        1 bytes
  1150 ;; Hardware stack levels used: 1
  1151 ;; Hardware stack levels required when called: 2
  1152 ;; This function calls:
  1153 ;;		_EnablePulse
  1154 ;;		_WritePin
  1155 ;; This function is called by:
  1156 ;;		_LCD_Begin
  1157 ;;		_WriteByte
  1158 ;; This function uses a non-reentrant model
  1159 ;;
  1160                           
  1161     0699                     _WriteNibble:	
  1162                           ;psect for function _WriteNibble
  1163                           
  1164                           
  1165                           ;incstack = 0
  1166                           ; Regs used in _WriteNibble: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1167                           ;WriteNibble@b stored from wreg
  1168     0699  00F6               	movwf	WriteNibble@b
  1169                           
  1170                           ;../lcd.c: 190: void WriteNibble(uint8_t b);../lcd.c: 191: {;../lcd.c: 192:     WritePin
      +                          ( LCD_D4, (b & 0x01) );
  1171     069A  0876               	movf	WriteNibble@b,w
  1172     069B  3901               	andlw	1
  1173     069C  00F1               	movwf	WritePin@val
  1174     069D  1283               	bcf	3,5	;RP0=0, select bank0
  1175     069E  1303               	bcf	3,6	;RP1=0, select bank0
  1176     069F  0825               	movf	_LCD_D4,w
  1177     06A0  120A  118A  266A  120A  118A  	fcall	_WritePin
  1178                           
  1179                           ;../lcd.c: 193:     WritePin( LCD_D5, (b & 0x02) );
  1180     06A5  0876               	movf	WriteNibble@b,w
  1181     06A6  3902               	andlw	2
  1182     06A7  00F1               	movwf	WritePin@val
  1183     06A8  1283               	bcf	3,5	;RP0=0, select bank0
  1184     06A9  1303               	bcf	3,6	;RP1=0, select bank0
  1185     06AA  0824               	movf	_LCD_D5,w
  1186     06AB  120A  118A  266A  120A  118A  	fcall	_WritePin
  1187                           
  1188                           ;../lcd.c: 194:     WritePin( LCD_D6, (b & 0x04) );
  1189     06B0  0876               	movf	WriteNibble@b,w
  1190     06B1  3904               	andlw	4
  1191     06B2  00F1               	movwf	WritePin@val
  1192     06B3  1283               	bcf	3,5	;RP0=0, select bank0
  1193     06B4  1303               	bcf	3,6	;RP1=0, select bank0
  1194     06B5  0823               	movf	_LCD_D6,w
  1195     06B6  120A  118A  266A  120A  118A  	fcall	_WritePin
  1196                           
  1197                           ;../lcd.c: 195:     WritePin( LCD_D7, (b & 0x08) );
  1198     06BB  0876               	movf	WriteNibble@b,w
  1199     06BC  3908               	andlw	8
  1200     06BD  00F1               	movwf	WritePin@val
  1201     06BE  1283               	bcf	3,5	;RP0=0, select bank0
  1202     06BF  1303               	bcf	3,6	;RP1=0, select bank0
  1203     06C0  0822               	movf	_LCD_D7,w
  1204     06C1  120A  118A  266A  120A  118A  	fcall	_WritePin
  1205                           
  1206                           ;../lcd.c: 198:     EnablePulse();
  1207     06C6  120A  118A  261F   	fcall	_EnablePulse
  1208     06C9  0008               	return
  1209     06CA                     __end_of_WriteNibble:
  1210                           
  1211                           	psect	text7
  1212     061F                     __ptext7:	
  1213 ;; *************** function _EnablePulse *****************
  1214 ;; Defined at:
  1215 ;;		line 209 in file "../lcd.c"
  1216 ;; Parameters:    Size  Location     Type
  1217 ;;		None
  1218 ;; Auto vars:     Size  Location     Type
  1219 ;;		None
  1220 ;; Return value:  Size  Location     Type
  1221 ;;                  1    wreg      void 
  1222 ;; Registers used:
  1223 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1224 ;; Tracked objects:
  1225 ;;		On entry : 0/0
  1226 ;;		On exit  : 0/0
  1227 ;;		Unchanged: 0/0
  1228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1229 ;;      Params:         0       0       0       0       0
  1230 ;;      Locals:         0       0       0       0       0
  1231 ;;      Temps:          1       0       0       0       0
  1232 ;;      Totals:         1       0       0       0       0
  1233 ;;Total ram usage:        1 bytes
  1234 ;; Hardware stack levels used: 1
  1235 ;; Hardware stack levels required when called: 1
  1236 ;; This function calls:
  1237 ;;		_WritePin
  1238 ;; This function is called by:
  1239 ;;		_WriteNibble
  1240 ;; This function uses a non-reentrant model
  1241 ;;
  1242                           
  1243     061F                     _EnablePulse:	
  1244                           ;psect for function _EnablePulse
  1245                           
  1246                           
  1247                           ;../lcd.c: 211:     WritePin(LCD_EN, 0);
  1248                           
  1249                           ;incstack = 0
  1250                           ; Regs used in _EnablePulse: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1251     061F  01F1               	clrf	WritePin@val
  1252     0620  1283               	bcf	3,5	;RP0=0, select bank0
  1253     0621  1303               	bcf	3,6	;RP1=0, select bank0
  1254     0622  0826               	movf	_LCD_EN,w
  1255     0623  120A  118A  266A  120A  118A  	fcall	_WritePin
  1256                           
  1257                           ;../lcd.c: 212:     _delay((unsigned long)((1)*(_XTAL_FREQ/4000000.0)));
  1258     0628  2E29               	nop2	;2 cycle nop
  1259                           
  1260                           ;../lcd.c: 213:     WritePin(LCD_EN, 1);
  1261     0629  01F1               	clrf	WritePin@val
  1262     062A  0AF1               	incf	WritePin@val,f
  1263     062B  1283               	bcf	3,5	;RP0=0, select bank0
  1264     062C  1303               	bcf	3,6	;RP1=0, select bank0
  1265     062D  0826               	movf	_LCD_EN,w
  1266     062E  120A  118A  266A  120A  118A  	fcall	_WritePin
  1267                           
  1268                           ;../lcd.c: 214:     _delay((unsigned long)((1)*(_XTAL_FREQ/4000000.0)));
  1269     0633  2E34               	nop2	;2 cycle nop
  1270                           
  1271                           ;../lcd.c: 215:     WritePin(LCD_EN, 0);
  1272     0634  01F1               	clrf	WritePin@val
  1273     0635  1283               	bcf	3,5	;RP0=0, select bank0
  1274     0636  1303               	bcf	3,6	;RP1=0, select bank0
  1275     0637  0826               	movf	_LCD_EN,w
  1276     0638  120A  118A  266A  120A  118A  	fcall	_WritePin
  1277                           
  1278                           ;../lcd.c: 216:     _delay((unsigned long)((100)*(_XTAL_FREQ/4000000.0)));
  1279     063D  3042               	movlw	66
  1280     063E  00F5               	movwf	??_EnablePulse
  1281     063F                     u2127:
  1282     063F  0BF5               	decfsz	??_EnablePulse,f
  1283     0640  2E3F               	goto	u2127
  1284     0641  0000               	nop
  1285     0642  0008               	return
  1286     0643                     __end_of_EnablePulse:
  1287                           
  1288                           	psect	text8
  1289     066A                     __ptext8:	
  1290 ;; *************** function _WritePin *****************
  1291 ;; Defined at:
  1292 ;;		line 220 in file "../lcd.c"
  1293 ;; Parameters:    Size  Location     Type
  1294 ;;  _pin            1    wreg     unsigned char 
  1295 ;;  val             1    0[COMMON] unsigned char 
  1296 ;; Auto vars:     Size  Location     Type
  1297 ;;  _pin            1    3[COMMON] unsigned char 
  1298 ;; Return value:  Size  Location     Type
  1299 ;;                  1    wreg      void 
  1300 ;; Registers used:
  1301 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1302 ;; Tracked objects:
  1303 ;;		On entry : 0/0
  1304 ;;		On exit  : 0/0
  1305 ;;		Unchanged: 0/0
  1306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1307 ;;      Params:         1       0       0       0       0
  1308 ;;      Locals:         1       0       0       0       0
  1309 ;;      Temps:          2       0       0       0       0
  1310 ;;      Totals:         4       0       0       0       0
  1311 ;;Total ram usage:        4 bytes
  1312 ;; Hardware stack levels used: 1
  1313 ;; This function calls:
  1314 ;;		Nothing
  1315 ;; This function is called by:
  1316 ;;		_LCD_Begin
  1317 ;;		_LCD_Goto
  1318 ;;		_LCD_Clear
  1319 ;;		_LCD_PutS
  1320 ;;		_WriteNibble
  1321 ;;		_EnablePulse
  1322 ;;		_LCD_PutC
  1323 ;;		_LCD_Display
  1324 ;;		_LCD_CursorUnderline
  1325 ;;		_LCD_CursorBlink
  1326 ;;		_LCD_ShiftLeft
  1327 ;;		_LCD_ShiftRight
  1328 ;;		_LCD_MoveCursorLeft
  1329 ;;		_LCD_MoveCursorRight
  1330 ;;		_LCD_ReturnHome
  1331 ;; This function uses a non-reentrant model
  1332 ;;
  1333                           
  1334     066A                     _WritePin:	
  1335                           ;psect for function _WritePin
  1336                           
  1337                           
  1338                           ;incstack = 0
  1339                           ; Regs used in _WritePin: [wreg-fsr0h+status,2+status,0]
  1340                           ;WritePin@_pin stored from wreg
  1341     066A  00F4               	movwf	WritePin@_pin
  1342                           
  1343                           ;../lcd.c: 220: void WritePin(uint8_t _pin, uint8_t val);../lcd.c: 221: {;../lcd.c: 222:
      +                               if (val)
  1344     066B  0871               	movf	WritePin@val,w
  1345     066C  1903               	btfsc	3,2
  1346     066D  2E83               	goto	l1278
  1347                           
  1348                           ;../lcd.c: 223:         *_port |= (1 << _pin);
  1349     066E  3001               	movlw	1
  1350     066F  00F2               	movwf	??_WritePin
  1351     0670  0A74               	incf	WritePin@_pin,w
  1352     0671  2E74               	goto	u1044
  1353     0672                     u1045:
  1354     0672  1003               	clrc
  1355     0673  0DF2               	rlf	??_WritePin,f
  1356     0674                     u1044:
  1357     0674  3EFF               	addlw	-1
  1358     0675  1D03               	skipz
  1359     0676  2E72               	goto	u1045
  1360     0677  0872               	movf	??_WritePin,w
  1361     0678  00F3               	movwf	??_WritePin+1
  1362     0679  1283               	bcf	3,5	;RP0=0, select bank0
  1363     067A  1303               	bcf	3,6	;RP1=0, select bank0
  1364     067B  0820               	movf	__port,w
  1365     067C  0084               	movwf	4
  1366     067D  1783               	bsf	3,7
  1367     067E  1C21               	btfss	__port+1,0
  1368     067F  1383               	bcf	3,7
  1369     0680  0873               	movf	??_WritePin+1,w
  1370     0681  0480               	iorwf	0,f
  1371     0682  0008               	return
  1372     0683                     l1278:
  1373                           
  1374                           ;../lcd.c: 225:         *_port &= ~(1 << _pin);
  1375     0683  3001               	movlw	1
  1376     0684  00F2               	movwf	??_WritePin
  1377     0685  0A74               	incf	WritePin@_pin,w
  1378     0686  2E89               	goto	u1054
  1379     0687                     u1055:
  1380     0687  1003               	clrc
  1381     0688  0DF2               	rlf	??_WritePin,f
  1382     0689                     u1054:
  1383     0689  3EFF               	addlw	-1
  1384     068A  1D03               	skipz
  1385     068B  2E87               	goto	u1055
  1386     068C  0872               	movf	??_WritePin,w
  1387     068D  3AFF               	xorlw	255
  1388     068E  00F3               	movwf	??_WritePin+1
  1389     068F  1283               	bcf	3,5	;RP0=0, select bank0
  1390     0690  1303               	bcf	3,6	;RP1=0, select bank0
  1391     0691  0820               	movf	__port,w
  1392     0692  0084               	movwf	4
  1393     0693  1783               	bsf	3,7
  1394     0694  1C21               	btfss	__port+1,0
  1395     0695  1383               	bcf	3,7
  1396     0696  0873               	movf	??_WritePin+1,w
  1397     0697  0580               	andwf	0,f
  1398     0698  0008               	return
  1399     0699                     __end_of_WritePin:
  1400                           
  1401                           	psect	text9
  1402     05E1                     __ptext9:	
  1403 ;; *************** function _LCD *****************
  1404 ;; Defined at:
  1405 ;;		line 19 in file "../lcd.c"
  1406 ;; Parameters:    Size  Location     Type
  1407 ;;  _p              2    0[COMMON] PTR volatile unsigned ch
  1408 ;;		 -> PORTD(1), 
  1409 ;;  rs              1    2[COMMON] unsigned char 
  1410 ;;  en              1    3[COMMON] unsigned char 
  1411 ;;  d4              1    4[COMMON] unsigned char 
  1412 ;;  d5              1    5[COMMON] unsigned char 
  1413 ;;  d6              1    6[COMMON] unsigned char 
  1414 ;;  d7              1    7[COMMON] unsigned char 
  1415 ;; Auto vars:     Size  Location     Type
  1416 ;;		None
  1417 ;; Return value:  Size  Location     Type
  1418 ;;                  1    wreg      void 
  1419 ;; Registers used:
  1420 ;;		wreg, status,2, status,0
  1421 ;; Tracked objects:
  1422 ;;		On entry : 0/0
  1423 ;;		On exit  : 0/0
  1424 ;;		Unchanged: 0/0
  1425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1426 ;;      Params:         8       0       0       0       0
  1427 ;;      Locals:         0       0       0       0       0
  1428 ;;      Temps:          0       0       0       0       0
  1429 ;;      Totals:         8       0       0       0       0
  1430 ;;Total ram usage:        8 bytes
  1431 ;; Hardware stack levels used: 1
  1432 ;; This function calls:
  1433 ;;		Nothing
  1434 ;; This function is called by:
  1435 ;;		_main
  1436 ;; This function uses a non-reentrant model
  1437 ;;
  1438                           
  1439     05E1                     _LCD:	
  1440                           ;psect for function _LCD
  1441                           
  1442                           
  1443                           ;../lcd.c: 19: void LCD(volatile unsigned char *_p, uint8_t rs, uint8_t en, uint8_t d4,;
      +                          ../lcd.c: 20:         uint8_t d5, uint8_t d6, uint8_t d7);../lcd.c: 21: {;../lcd.c: 22: 
      +                              _port = _p;
  1444                           
  1445                           ;incstack = 0
  1446                           ; Regs used in _LCD: [wreg+status,2+status,0]
  1447     05E1  0871               	movf	LCD@_p,w
  1448     05E2  1283               	bcf	3,5	;RP0=0, select bank0
  1449     05E3  1303               	bcf	3,6	;RP1=0, select bank0
  1450     05E4  00A0               	movwf	__port
  1451     05E5  0872               	movf	LCD@_p+1,w
  1452     05E6  00A1               	movwf	__port+1
  1453                           
  1454                           ;../lcd.c: 23:     LCD_RS = rs;
  1455     05E7  0873               	movf	LCD@rs,w
  1456     05E8  00FD               	movwf	_LCD_RS
  1457                           
  1458                           ;../lcd.c: 24:     LCD_EN = en;
  1459     05E9  0874               	movf	LCD@en,w
  1460     05EA  00A6               	movwf	_LCD_EN
  1461                           
  1462                           ;../lcd.c: 25:     LCD_D4 = d4;
  1463     05EB  0875               	movf	LCD@d4,w
  1464     05EC  00A5               	movwf	_LCD_D4
  1465                           
  1466                           ;../lcd.c: 26:     LCD_D5 = d5;
  1467     05ED  0876               	movf	LCD@d5,w
  1468     05EE  00A4               	movwf	_LCD_D5
  1469                           
  1470                           ;../lcd.c: 27:     LCD_D6 = d6;
  1471     05EF  0877               	movf	LCD@d6,w
  1472     05F0  00A3               	movwf	_LCD_D6
  1473                           
  1474                           ;../lcd.c: 28:     LCD_D7 = d7;
  1475     05F1  0878               	movf	LCD@d7,w
  1476     05F2  00A2               	movwf	_LCD_D7
  1477     05F3  0008               	return
  1478     05F4                     __end_of_LCD:
  1479     007E                     btemp	set	126	;btemp
  1480     007E                     wtemp0	set	126
  1481                           
  1482                           	psect	idloc
  1483                           
  1484                           ;Config register IDLOC0 @ 0x2000
  1485                           ;	unspecified, using default values
  1486     2000                     	org	8192
  1487     2000  3FFF               	dw	16383
  1488                           
  1489                           ;Config register IDLOC1 @ 0x2001
  1490                           ;	unspecified, using default values
  1491     2001                     	org	8193
  1492     2001  3FFF               	dw	16383
  1493                           
  1494                           ;Config register IDLOC2 @ 0x2002
  1495                           ;	unspecified, using default values
  1496     2002                     	org	8194
  1497     2002  3FFF               	dw	16383
  1498                           
  1499                           ;Config register IDLOC3 @ 0x2003
  1500                           ;	unspecified, using default values
  1501     2003                     	org	8195
  1502     2003  3FFF               	dw	16383
  1503                           
  1504                           	psect	config
  1505                           
  1506                           ;Config register CONFIG @ 0x2007
  1507                           ;	Oscillator Selection bits
  1508                           ;	FOSC = HS, HS oscillator
  1509                           ;	Watchdog Timer Enable bit
  1510                           ;	WDTE = OFF, WDT disabled
  1511                           ;	Power-up Timer Enable bit
  1512                           ;	PWRTE = ON, PWRT enabled
  1513                           ;	Brown-out Reset Enable bit
  1514                           ;	BOREN = OFF, BOR disabled
  1515                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1516                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1517                           ;	Data EEPROM Memory Code Protection bit
  1518                           ;	CPD = OFF, Data EEPROM code protection off
  1519                           ;	Flash Program Memory Write Enable bits
  1520                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1521                           ;	In-Circuit Debugger Mode bit
  1522                           ;	DEBUG = OFF, In-Circuit Debugger disabled, RB6 and RB7 are general purpose I/O pins
  1523                           ;	Flash Program Memory Code Protection bit
  1524                           ;	CP = OFF, Code protection off
  1525     2007                     	org	8199
  1526     2007  3F32               	dw	16178

Data Sizes:
    Strings     27
    Constant    0
    Data        4
    BSS         1
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           13     12      13
    BANK0            80      3      15
    BANK1            80      0       0
    BANK3            85      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_PutS@_str	PTR unsigned char  size(1) Largest target is 17
		 -> STR_2(CODE[10]), STR_1(CODE[17]), 

    LCD@_p	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), 

    _port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> NULL(NULL[0]), PORTD(SFR0[1]), 


Critical Paths under _main in COMMON

    _main->_LCD_Begin
    _main->_LCD_Goto
    _LCD_PutS->_WriteByte
    _LCD_Goto->_WriteByte
    _LCD_Begin->_LCD_Clear
    _LCD_Clear->_WriteByte
    _WriteByte->_WriteNibble
    _WriteNibble->_EnablePulse
    _EnablePulse->_WritePin

Critical Paths under _main in BANK0

    _main->_LCD_Begin

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   29366
                                _LCD
                          _LCD_Begin
                           _LCD_Goto
                           _LCD_PutS
 ---------------------------------------------------------------------------------
 (1) _LCD_PutS                                             3     3      0    6186
                                              8 COMMON     3     3      0
                          _WriteByte
                           _WritePin
 ---------------------------------------------------------------------------------
 (1) _LCD_Goto                                             4     3      1    6292
                                              8 COMMON     4     3      1
                          _WriteByte
                           _WritePin
 ---------------------------------------------------------------------------------
 (1) _LCD_Begin                                            6     5      1   16202
                                             10 COMMON     2     1      1
                                              0 BANK0      3     3      0
                          _LCD_Clear
                          _WriteByte
                        _WriteNibble
                           _WritePin
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            2     2      0    6030
                                              8 COMMON     2     2      0
                          _WriteByte
                           _WritePin
 ---------------------------------------------------------------------------------
 (2) _WriteByte                                            2     2      0    4064
                                              6 COMMON     2     2      0
                        _WriteNibble
 ---------------------------------------------------------------------------------
 (3) _WriteNibble                                          1     1      0    4020
                                              5 COMMON     1     1      0
                        _EnablePulse
                           _WritePin
 ---------------------------------------------------------------------------------
 (4) _EnablePulse                                          1     1      0    1966
                                              4 COMMON     1     1      0
                           _WritePin
 ---------------------------------------------------------------------------------
 (2) _WritePin                                             4     3      1    1966
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _LCD                                                  8     0      8     686
                                              0 COMMON     8     0      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD
   _LCD_Begin
     _LCD_Clear
       _WriteByte
         _WriteNibble
           _EnablePulse
             _WritePin
           _WritePin
       _WritePin
     _WriteByte
     _WriteNibble
     _WritePin
   _LCD_Goto
     _WriteByte
     _WritePin
   _LCD_PutS
     _WriteByte
     _WritePin

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               55      0       0       9        0.0%
BITBANK3            55      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      3       F       5       18.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               D      C       D       1      100.0%
BITCOMMON            D      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1C      12        0.0%
ABS                  0      0      1C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat Feb 10 22:16:24 2024

                      pc 0002                       l19 073D                       l68 0701  
                     fsr 0004                      _LCD 05E1                      fsr0 0004  
                    indf 0000      __end_of_EnablePulse 0643                     ?_LCD 0071  
                   l1352 06D3                     l1354 06D9                     l1362 06EB  
                   l1356 06DF                     l1278 0683                     l1358 06E5  
                   l1376 064D                     l1832 06F3                     STR_1 000A  
                   STR_2 001B                     u1044 0674                     u1045 0672  
                   u1054 0689                     u1055 0687                     u1065 05F8  
                   u2107 07DB                     u2117 0619                     u2127 063F  
                   u2057 077C                     u2067 0793                     u2077 07A1  
                   u2087 07AE                     u2097 07BB                     _main 0702  
                   btemp 007E                     start 0001              LCD_Goto@col 007C  
            LCD_Goto@row 0079                    ??_LCD 0079                    LCD@d4 0075  
                  LCD@d5 0076                    LCD@d6 0077                    LCD@d7 0078  
                  LCD@_p 0071                    LCD@en 0074                    LCD@rs 0073  
       __end_of_LCD_Goto 0702         __end_of_LCD_PutS 066A                    ?_main 0071  
                  _PORTD 0008                    _TRISD 0088                    __port 0020  
                  pclath 000A               __XTAL_FREQ 0027                    status 0003  
                  wtemp0 007E          __initialization 07E5             __end_of_main 073E  
            _EnablePulse 061F                   ??_main 007D        __end_of_LCD_Begin 07E5  
      __end_of_LCD_Clear 061F            LCD_Begin@cols 0071             LCD_PutS@_str 007B  
                 _LCD_D4 0025                   _LCD_D5 0024                   _LCD_D6 0023  
                 _LCD_D7 0022         __end_of_WritePin 0699                   _LCD_EN 0026  
                 _LCD_RS 007D  __end_of__initialization 07FC                ?_LCD_Goto 0079  
              ?_LCD_PutS 0071           __pcstackCOMMON 0071                LCD_PutS@i 007A  
           __pidataBANK0 05DD               __pbssBANK0 002E           LCD_Begin@lines 007B  
           WriteNibble@b 0076               ??_LCD_Goto 007A             WritePin@_pin 0074  
             ??_LCD_PutS 0079               __pnvCOMMON 007D               WriteByte@b 0078  
             __pmaintext 0702            ??_WriteNibble 0076                ?_WritePin 0071  
      __end_of_WriteByte 0608               __stringtab 0004             ?_EnablePulse 0071  
             ??_WritePin 0072                  __ptext1 0643                  __ptext2 06CA  
                __ptext3 073E                  __ptext4 0608                  __ptext5 05F4  
                __ptext6 0699                  __ptext7 061F                  __ptext8 066A  
                __ptext9 05E1      __end_of_WriteNibble 06CA          __displaycontrol 002E  
              _LCD_Begin 073E                _LCD_Clear 0608     end_of_initialization 07FC  
             ?_LCD_Begin 007B               ?_LCD_Clear 0071              _WriteNibble 0699  
    start_initialization 07E5              __end_of_LCD 05F4              __pdataBANK0 0027  
              ___latbits 0002            __pcstackBANK0 002B              ??_LCD_Begin 002B  
            ??_LCD_Clear 0079                _WriteByte 05F4                __pnvBANK0 0020  
            WritePin@val 0071                __pstrings 0004               ?_WriteByte 0071  
               _LCD_Goto 06CA                 _LCD_PutS 0643   LCD_Begin@_function_set 007C  
            __stringbase 0009             ?_WriteNibble 0071       __end_of__stringtab 000A  
               _WritePin 066A              ??_WriteByte 0077                stringcode 0004  
          ??_EnablePulse 0075                 stringdir 0004                 stringtab 0004  
