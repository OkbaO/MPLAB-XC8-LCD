

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Feb 15 16:26:52 2024

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	strings,global,class=STRING,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    24                           	dabs	1,0x7E,2
    25     0000                     
    26                           ; Version 2.40
    27                           ; Generated 17/11/2021 GMT
    28                           ; 
    29                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution. Publication is not required when
    43                           ;        this file is used in an embedded application.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC16F877A Definitions
    59                           ; 
    60                           ; SFR Addresses
    61     0000                     	;# 
    62     0001                     	;# 
    63     0002                     	;# 
    64     0003                     	;# 
    65     0004                     	;# 
    66     0005                     	;# 
    67     0006                     	;# 
    68     0007                     	;# 
    69     0008                     	;# 
    70     0009                     	;# 
    71     000A                     	;# 
    72     000B                     	;# 
    73     000C                     	;# 
    74     000D                     	;# 
    75     000E                     	;# 
    76     000E                     	;# 
    77     000F                     	;# 
    78     0010                     	;# 
    79     0011                     	;# 
    80     0012                     	;# 
    81     0013                     	;# 
    82     0014                     	;# 
    83     0015                     	;# 
    84     0015                     	;# 
    85     0016                     	;# 
    86     0017                     	;# 
    87     0018                     	;# 
    88     0019                     	;# 
    89     001A                     	;# 
    90     001B                     	;# 
    91     001B                     	;# 
    92     001C                     	;# 
    93     001D                     	;# 
    94     001E                     	;# 
    95     001F                     	;# 
    96     0081                     	;# 
    97     0085                     	;# 
    98     0086                     	;# 
    99     0087                     	;# 
   100     0088                     	;# 
   101     0089                     	;# 
   102     008C                     	;# 
   103     008D                     	;# 
   104     008E                     	;# 
   105     0091                     	;# 
   106     0092                     	;# 
   107     0093                     	;# 
   108     0094                     	;# 
   109     0098                     	;# 
   110     0099                     	;# 
   111     009C                     	;# 
   112     009D                     	;# 
   113     009E                     	;# 
   114     009F                     	;# 
   115     010C                     	;# 
   116     010D                     	;# 
   117     010E                     	;# 
   118     010F                     	;# 
   119     018C                     	;# 
   120     018D                     	;# 
   121     0000                     	;# 
   122     0001                     	;# 
   123     0002                     	;# 
   124     0003                     	;# 
   125     0004                     	;# 
   126     0005                     	;# 
   127     0006                     	;# 
   128     0007                     	;# 
   129     0008                     	;# 
   130     0009                     	;# 
   131     000A                     	;# 
   132     000B                     	;# 
   133     000C                     	;# 
   134     000D                     	;# 
   135     000E                     	;# 
   136     000E                     	;# 
   137     000F                     	;# 
   138     0010                     	;# 
   139     0011                     	;# 
   140     0012                     	;# 
   141     0013                     	;# 
   142     0014                     	;# 
   143     0015                     	;# 
   144     0015                     	;# 
   145     0016                     	;# 
   146     0017                     	;# 
   147     0018                     	;# 
   148     0019                     	;# 
   149     001A                     	;# 
   150     001B                     	;# 
   151     001B                     	;# 
   152     001C                     	;# 
   153     001D                     	;# 
   154     001E                     	;# 
   155     001F                     	;# 
   156     0081                     	;# 
   157     0085                     	;# 
   158     0086                     	;# 
   159     0087                     	;# 
   160     0088                     	;# 
   161     0089                     	;# 
   162     008C                     	;# 
   163     008D                     	;# 
   164     008E                     	;# 
   165     0091                     	;# 
   166     0092                     	;# 
   167     0093                     	;# 
   168     0094                     	;# 
   169     0098                     	;# 
   170     0099                     	;# 
   171     009C                     	;# 
   172     009D                     	;# 
   173     009E                     	;# 
   174     009F                     	;# 
   175     010C                     	;# 
   176     010D                     	;# 
   177     010E                     	;# 
   178     010F                     	;# 
   179     018C                     	;# 
   180     018D                     	;# 
   181     0000                     	;# 
   182     0001                     	;# 
   183     0002                     	;# 
   184     0003                     	;# 
   185     0004                     	;# 
   186     0005                     	;# 
   187     0006                     	;# 
   188     0007                     	;# 
   189     0008                     	;# 
   190     0009                     	;# 
   191     000A                     	;# 
   192     000B                     	;# 
   193     000C                     	;# 
   194     000D                     	;# 
   195     000E                     	;# 
   196     000E                     	;# 
   197     000F                     	;# 
   198     0010                     	;# 
   199     0011                     	;# 
   200     0012                     	;# 
   201     0013                     	;# 
   202     0014                     	;# 
   203     0015                     	;# 
   204     0015                     	;# 
   205     0016                     	;# 
   206     0017                     	;# 
   207     0018                     	;# 
   208     0019                     	;# 
   209     001A                     	;# 
   210     001B                     	;# 
   211     001B                     	;# 
   212     001C                     	;# 
   213     001D                     	;# 
   214     001E                     	;# 
   215     001F                     	;# 
   216     0081                     	;# 
   217     0085                     	;# 
   218     0086                     	;# 
   219     0087                     	;# 
   220     0088                     	;# 
   221     0089                     	;# 
   222     008C                     	;# 
   223     008D                     	;# 
   224     008E                     	;# 
   225     0091                     	;# 
   226     0092                     	;# 
   227     0093                     	;# 
   228     0094                     	;# 
   229     0098                     	;# 
   230     0099                     	;# 
   231     009C                     	;# 
   232     009D                     	;# 
   233     009E                     	;# 
   234     009F                     	;# 
   235     010C                     	;# 
   236     010D                     	;# 
   237     010E                     	;# 
   238     010F                     	;# 
   239     018C                     	;# 
   240     018D                     	;# 
   241                           
   242                           	psect	idataBANK0
   243     05D9                     __pidataBANK0:
   244                           
   245                           ;initializer for __XTAL_FREQ
   246     05D9  3400               	retlw	0
   247     05DA  3412               	retlw	18
   248     05DB  347A               	retlw	122
   249     05DC  3400               	retlw	0
   250                           
   251                           	psect	nvBANK0
   252     0020                     __pnvBANK0:
   253     0020                     __port:
   254     0020                     	ds	2
   255     0022                     _LCD_D7:
   256     0022                     	ds	1
   257     0023                     _LCD_D6:
   258     0023                     	ds	1
   259     0024                     _LCD_D5:
   260     0024                     	ds	1
   261     0025                     _LCD_D4:
   262     0025                     	ds	1
   263     0026                     _LCD_EN:
   264     0026                     	ds	1
   265     0027                     _LCD_RS:
   266     0027                     	ds	1
   267     0008                     _PORTD	set	8
   268     0088                     _TRISD	set	136
   269                           
   270                           	psect	strings
   271     0003                     __pstrings:
   272     0003                     stringtab:
   273     0003                     __stringtab:
   274     0003                     stringcode:	
   275                           ;	String table - string pointers are 1 byte each
   276                           
   277     0003                     stringdir:
   278     0003  3000               	movlw	high stringdir
   279     0004  008A               	movwf	10
   280     0005  0804               	movf	4,w
   281     0006  0A84               	incf	4,f
   282     0007  0782               	addwf	2,f
   283     0008                     __stringbase:
   284     0008  3400               	retlw	0
   285     0009                     __end_of__stringtab:
   286     0009                     STR_1:
   287     0009  3450               	retlw	80	;'P'
   288     000A  3449               	retlw	73	;'I'
   289     000B  3443               	retlw	67	;'C'
   290     000C  3431               	retlw	49	;'1'
   291     000D  3436               	retlw	54	;'6'
   292     000E  3446               	retlw	70	;'F'
   293     000F  3438               	retlw	56	;'8'
   294     0010  3437               	retlw	55	;'7'
   295     0011  3437               	retlw	55	;'7'
   296     0012  3441               	retlw	65	;'A'
   297     0013  3420               	retlw	32	;' '
   298     0014  342B               	retlw	43	;'+'
   299     0015  3420               	retlw	32	;' '
   300     0016  344C               	retlw	76	;'L'
   301     0017  3443               	retlw	67	;'C'
   302     0018  3444               	retlw	68	;'D'
   303     0019  3400               	retlw	0
   304     001A                     STR_2:
   305     001A  344D               	retlw	77	;'M'
   306     001B  3450               	retlw	80	;'P'
   307     001C  344C               	retlw	76	;'L'
   308     001D  3441               	retlw	65	;'A'
   309     001E  3442               	retlw	66	;'B'
   310     001F  3420               	retlw	32	;' '
   311     0020  3458               	retlw	88	;'X'
   312     0021  3443               	retlw	67	;'C'
   313     0022  3438               	retlw	56	;'8'
   314     0023  3400               	retlw	0
   315                           
   316                           	psect	cinit
   317     07E5                     start_initialization:	
   318                           ; #config settings
   319                           
   320     07E5                     __initialization:
   321                           
   322                           ; Initialize objects allocated to BANK0
   323     07E5  120A  118A  25D9  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   324     07EA  00A8               	movwf	__pdataBANK0& (0+127)
   325     07EB  120A  118A  25DA  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   326     07F0  00A9               	movwf	(__pdataBANK0+1)& (0+127)
   327     07F1  120A  118A  25DB  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   328     07F6  00AA               	movwf	(__pdataBANK0+2)& (0+127)
   329     07F7  120A  118A  25DC   	fcall	__pidataBANK0+3	;fetch initializer
   330     07FA  00AB               	movwf	(__pdataBANK0+3)& (0+127)
   331                           
   332                           ; Clear objects allocated to BANK0
   333     07FB  01AC               	clrf	__pbssBANK0& (0+127)
   334     07FC                     end_of_initialization:	
   335                           ;End of C runtime variable initialization code
   336                           
   337     07FC                     __end_of__initialization:
   338     07FC  0183               	clrf	3
   339     07FD  120A  118A  2F04   	ljmp	_main	;jump to C main() function
   340                           
   341                           	psect	bssBANK0
   342     002C                     __pbssBANK0:
   343     002C                     __displaycontrol:
   344     002C                     	ds	1
   345                           
   346                           	psect	dataBANK0
   347     0028                     __pdataBANK0:
   348     0028                     __XTAL_FREQ:
   349     0028                     	ds	4
   350                           
   351                           	psect	cstackCOMMON
   352     0070                     __pcstackCOMMON:
   353     0070                     ?_LCD:
   354     0070                     ?_LCD_PutS:	
   355                           ; 1 bytes @ 0x0
   356                           
   357     0070                     ?_WritePin:	
   358                           ; 1 bytes @ 0x0
   359                           
   360     0070                     ?_WriteNibble:	
   361                           ; 1 bytes @ 0x0
   362                           
   363     0070                     ?_WriteByte:	
   364                           ; 1 bytes @ 0x0
   365                           
   366     0070                     ?_LCD_Clear:	
   367                           ; 1 bytes @ 0x0
   368                           
   369     0070                     ?_EnablePulse:	
   370                           ; 1 bytes @ 0x0
   371                           
   372     0070                     ?_main:	
   373                           ; 1 bytes @ 0x0
   374                           
   375     0070                     LCD_Begin@cols:	
   376                           ; 1 bytes @ 0x0
   377                           
   378     0070                     WritePin@val:	
   379                           ; 1 bytes @ 0x0
   380                           
   381     0070                     LCD@_p:	
   382                           ; 1 bytes @ 0x0
   383                           
   384                           
   385                           ; 2 bytes @ 0x0
   386     0070                     	ds	1
   387     0071                     ??_WritePin:
   388                           
   389                           ; 1 bytes @ 0x1
   390     0071                     	ds	1
   391     0072                     LCD@rs:
   392                           
   393                           ; 1 bytes @ 0x2
   394     0072                     	ds	1
   395     0073                     LCD@en:
   396     0073                     WritePin@_pin:	
   397                           ; 1 bytes @ 0x3
   398                           
   399                           
   400                           ; 1 bytes @ 0x3
   401     0073                     	ds	1
   402     0074                     ??_EnablePulse:
   403     0074                     LCD@d4:	
   404                           ; 1 bytes @ 0x4
   405                           
   406                           
   407                           ; 1 bytes @ 0x4
   408     0074                     	ds	1
   409     0075                     ??_WriteNibble:
   410     0075                     LCD@d5:	
   411                           ; 1 bytes @ 0x5
   412                           
   413     0075                     WriteNibble@b:	
   414                           ; 1 bytes @ 0x5
   415                           
   416                           
   417                           ; 1 bytes @ 0x5
   418     0075                     	ds	1
   419     0076                     ??_WriteByte:
   420     0076                     LCD@d6:	
   421                           ; 1 bytes @ 0x6
   422                           
   423                           
   424                           ; 1 bytes @ 0x6
   425     0076                     	ds	1
   426     0077                     LCD@d7:
   427     0077                     WriteByte@b:	
   428                           ; 1 bytes @ 0x7
   429                           
   430                           
   431                           ; 1 bytes @ 0x7
   432     0077                     	ds	1
   433     0078                     ??_LCD:
   434     0078                     ?_LCD_Goto:	
   435                           ; 1 bytes @ 0x8
   436                           
   437     0078                     ??_LCD_PutS:	
   438                           ; 1 bytes @ 0x8
   439                           
   440     0078                     ??_LCD_Clear:	
   441                           ; 1 bytes @ 0x8
   442                           
   443     0078                     LCD_Goto@row:	
   444                           ; 1 bytes @ 0x8
   445                           
   446                           
   447                           ; 1 bytes @ 0x8
   448     0078                     	ds	1
   449     0079                     ??_LCD_Goto:
   450     0079                     LCD_PutS@i:	
   451                           ; 1 bytes @ 0x9
   452                           
   453                           
   454                           ; 1 bytes @ 0x9
   455     0079                     	ds	1
   456     007A                     ?_LCD_Begin:
   457     007A                     LCD_Begin@lines:	
   458                           ; 1 bytes @ 0xA
   459                           
   460     007A                     LCD_PutS@_str:	
   461                           ; 1 bytes @ 0xA
   462                           
   463                           
   464                           ; 1 bytes @ 0xA
   465     007A                     	ds	1
   466     007B                     ??_LCD_Begin:
   467     007B                     LCD_Goto@col:	
   468                           ; 1 bytes @ 0xB
   469                           
   470                           
   471                           ; 1 bytes @ 0xB
   472     007B                     	ds	3
   473     007E                     ??_main:
   474                           
   475                           	psect	cstackBANK0
   476     002D                     __pcstackBANK0:	
   477                           ; 1 bytes @ 0xE
   478                           
   479     002D                     LCD_Begin@_function_set:
   480                           
   481                           ; 1 bytes @ 0x0
   482     002D                     	ds	1
   483                           
   484                           	psect	maintext
   485     0704                     __pmaintext:	
   486 ;;
   487 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   488 ;;
   489 ;; *************** function _main *****************
   490 ;; Defined at:
   491 ;;		line 22 in file "main.c"
   492 ;; Parameters:    Size  Location     Type
   493 ;;		None
   494 ;; Auto vars:     Size  Location     Type
   495 ;;		None
   496 ;; Return value:  Size  Location     Type
   497 ;;                  1    wreg      void 
   498 ;; Registers used:
   499 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   500 ;; Tracked objects:
   501 ;;		On entry : B00/0
   502 ;;		On exit  : 0/0
   503 ;;		Unchanged: 0/0
   504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   505 ;;      Params:         0       0       0       0       0
   506 ;;      Locals:         0       0       0       0       0
   507 ;;      Temps:          0       0       0       0       0
   508 ;;      Totals:         0       0       0       0       0
   509 ;;Total ram usage:        0 bytes
   510 ;; Hardware stack levels required when called: 6
   511 ;; This function calls:
   512 ;;		_LCD
   513 ;;		_LCD_Begin
   514 ;;		_LCD_Goto
   515 ;;		_LCD_PutS
   516 ;; This function is called by:
   517 ;;		Startup code after reset
   518 ;; This function uses a non-reentrant model
   519 ;;
   520                           
   521     0704                     _main:	
   522                           ;psect for function _main
   523                           
   524                           
   525                           ;main.c: 24:     PORTD = 0;
   526                           
   527                           ;incstack = 0
   528                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   529     0704  1283               	bcf	3,5	;RP0=0, select bank0
   530     0705  1303               	bcf	3,6	;RP1=0, select bank0
   531     0706  0188               	clrf	8	;volatile
   532                           
   533                           ;main.c: 25:     TRISD = 0;
   534     0707  1683               	bsf	3,5	;RP0=1, select bank1
   535     0708  1303               	bcf	3,6	;RP1=0, select bank1
   536     0709  0188               	clrf	8	;volatile
   537                           
   538                           ;main.c: 28:     LCD(&PORTD, 0, 1, 2, 3, 4, 5);
   539     070A  3008               	movlw	8
   540     070B  00F0               	movwf	LCD@_p
   541     070C  3000               	movlw	0
   542     070D  00F1               	movwf	LCD@_p+1
   543     070E  01F2               	clrf	LCD@rs
   544     070F  01F3               	clrf	LCD@en
   545     0710  0AF3               	incf	LCD@en,f
   546     0711  3002               	movlw	2
   547     0712  00F4               	movwf	LCD@d4
   548     0713  3003               	movlw	3
   549     0714  00F5               	movwf	LCD@d5
   550     0715  3004               	movlw	4
   551     0716  00F6               	movwf	LCD@d6
   552     0717  3005               	movlw	5
   553     0718  00F7               	movwf	LCD@d7
   554     0719  120A  118A  25DD  120A  118A  	fcall	_LCD
   555                           
   556                           ;main.c: 31:     LCD_Begin(16, 2);
   557     071E  3002               	movlw	2
   558     071F  00FA               	movwf	LCD_Begin@lines
   559     0720  3010               	movlw	16
   560     0721  120A  118A  2743  120A  118A  	fcall	_LCD_Begin
   561                           
   562                           ;main.c: 34:     LCD_Goto(1, 1);
   563     0726  01F8               	clrf	LCD_Goto@row
   564     0727  0AF8               	incf	LCD_Goto@row,f
   565     0728  3001               	movlw	1
   566     0729  120A  118A  26CA  120A  118A  	fcall	_LCD_Goto
   567                           
   568                           ;main.c: 35:     LCD_PutS("PIC16F877A + LCD");
   569     072E  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   570     072F  120A  118A  2641  120A  118A  	fcall	_LCD_PutS
   571                           
   572                           ;main.c: 36:     LCD_Goto(1, 2);
   573     0734  3002               	movlw	2
   574     0735  00F8               	movwf	LCD_Goto@row
   575     0736  3001               	movlw	1
   576     0737  120A  118A  26CA  120A  118A  	fcall	_LCD_Goto
   577                           
   578                           ;main.c: 37:     LCD_PutS("MPLAB XC8");
   579     073C  3012               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   580     073D  120A  118A  2641  120A  118A  	fcall	_LCD_PutS
   581     0742                     l19:	
   582                           ;main.c: 39:     while (1) ;
   583                           
   584     0742  2F42               	goto	l19
   585     0743                     __end_of_main:
   586                           
   587                           	psect	text1
   588     0641                     __ptext1:	
   589 ;; *************** function _LCD_PutS *****************
   590 ;; Defined at:
   591 ;;		line 102 in file "../lcd.c"
   592 ;; Parameters:    Size  Location     Type
   593 ;;  _str            1    wreg     PTR unsigned char 
   594 ;;		 -> STR_2(10), STR_1(17), 
   595 ;; Auto vars:     Size  Location     Type
   596 ;;  _str            1   10[COMMON] PTR unsigned char 
   597 ;;		 -> STR_2(10), STR_1(17), 
   598 ;;  i               1    9[COMMON] unsigned char 
   599 ;; Return value:  Size  Location     Type
   600 ;;                  1    wreg      void 
   601 ;; Registers used:
   602 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   603 ;; Tracked objects:
   604 ;;		On entry : 0/0
   605 ;;		On exit  : 0/0
   606 ;;		Unchanged: 0/0
   607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   608 ;;      Params:         0       0       0       0       0
   609 ;;      Locals:         2       0       0       0       0
   610 ;;      Temps:          1       0       0       0       0
   611 ;;      Totals:         3       0       0       0       0
   612 ;;Total ram usage:        3 bytes
   613 ;; Hardware stack levels used: 1
   614 ;; Hardware stack levels required when called: 4
   615 ;; This function calls:
   616 ;;		_WriteByte
   617 ;;		_WritePin
   618 ;; This function is called by:
   619 ;;		_main
   620 ;; This function uses a non-reentrant model
   621 ;;
   622                           
   623     0641                     _LCD_PutS:	
   624                           ;psect for function _LCD_PutS
   625                           
   626                           
   627                           ;incstack = 0
   628                           ; Regs used in _LCD_PutS: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   629                           ;LCD_PutS@_str stored from wreg
   630     0641  00FA               	movwf	LCD_PutS@_str
   631                           
   632                           ;../lcd.c: 102: void LCD_PutS(char* _str);../lcd.c: 103: {;../lcd.c: 104:   WritePin(LCD
      +                          _RS, 1);
   633     0642  01F0               	clrf	WritePin@val
   634     0643  0AF0               	incf	WritePin@val,f
   635     0644  1283               	bcf	3,5	;RP0=0, select bank0
   636     0645  1303               	bcf	3,6	;RP1=0, select bank0
   637     0646  0827               	movf	_LCD_RS,w
   638     0647  120A  118A  266A  120A  118A  	fcall	_WritePin
   639                           
   640                           ;../lcd.c: 105:   uint8_t i = 0;
   641     064C  01F9               	clrf	LCD_PutS@i
   642     064D                     l1376:	
   643                           ;../lcd.c: 106:   while(_str[i] != '\0')
   644                           
   645                           
   646                           ;../lcd.c: 106:   while(_str[i] != '\0')
   647     064D  0879               	movf	LCD_PutS@i,w
   648     064E  077A               	addwf	LCD_PutS@_str,w
   649     064F  0084               	movwf	4
   650     0650  120A  118A  2003  120A  118A  	fcall	stringdir
   651     0655  3A00               	xorlw	0
   652     0656  1903               	btfsc	3,2
   653     0657  0008               	return
   654                           
   655                           ;../lcd.c: 107:       WriteByte( _str[i++] );
   656     0658  0879               	movf	LCD_PutS@i,w
   657     0659  077A               	addwf	LCD_PutS@_str,w
   658     065A  0084               	movwf	4
   659     065B  120A  118A  2003  120A  118A  	fcall	stringdir
   660     0660  120A  118A  25F0  120A  118A  	fcall	_WriteByte
   661     0665  3001               	movlw	1
   662     0666  00F8               	movwf	??_LCD_PutS
   663     0667  0878               	movf	??_LCD_PutS,w
   664     0668  07F9               	addwf	LCD_PutS@i,f
   665     0669  2E4D               	goto	l1376
   666     066A                     __end_of_LCD_PutS:
   667                           
   668                           	psect	text2
   669     06CA                     __ptext2:	
   670 ;; *************** function _LCD_Goto *****************
   671 ;; Defined at:
   672 ;;		line 75 in file "../lcd.c"
   673 ;; Parameters:    Size  Location     Type
   674 ;;  col             1    wreg     unsigned char 
   675 ;;  row             1    8[COMMON] unsigned char 
   676 ;; Auto vars:     Size  Location     Type
   677 ;;  col             1   11[COMMON] unsigned char 
   678 ;; Return value:  Size  Location     Type
   679 ;;                  1    wreg      void 
   680 ;; Registers used:
   681 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   682 ;; Tracked objects:
   683 ;;		On entry : 0/0
   684 ;;		On exit  : 0/0
   685 ;;		Unchanged: 0/0
   686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   687 ;;      Params:         1       0       0       0       0
   688 ;;      Locals:         1       0       0       0       0
   689 ;;      Temps:          2       0       0       0       0
   690 ;;      Totals:         4       0       0       0       0
   691 ;;Total ram usage:        4 bytes
   692 ;; Hardware stack levels used: 1
   693 ;; Hardware stack levels required when called: 4
   694 ;; This function calls:
   695 ;;		_WriteByte
   696 ;;		_WritePin
   697 ;; This function is called by:
   698 ;;		_main
   699 ;; This function uses a non-reentrant model
   700 ;;
   701                           
   702     06CA                     _LCD_Goto:	
   703                           ;psect for function _LCD_Goto
   704                           
   705                           
   706                           ;incstack = 0
   707                           ; Regs used in _LCD_Goto: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   708                           ;LCD_Goto@col stored from wreg
   709     06CA  00FB               	movwf	LCD_Goto@col
   710                           
   711                           ;../lcd.c: 75: void LCD_Goto(uint8_t col, uint8_t row);../lcd.c: 76: {;../lcd.c: 77:    
      +                           WritePin(LCD_RS, 0);
   712     06CB  01F0               	clrf	WritePin@val
   713     06CC  1283               	bcf	3,5	;RP0=0, select bank0
   714     06CD  1303               	bcf	3,6	;RP1=0, select bank0
   715     06CE  0827               	movf	_LCD_RS,w
   716     06CF  120A  118A  266A  120A  118A  	fcall	_WritePin
   717                           
   718                           ;../lcd.c: 78:     switch (row)
   719     06D4  2EED               	goto	l1362
   720     06D5                     l1352:
   721     06D5  087B               	movf	LCD_Goto@col,w
   722     06D6  3E7F               	addlw	127
   723     06D7  120A  118A  25F0   	fcall	_WriteByte
   724     06DA  0008               	return
   725     06DB                     l1354:
   726     06DB  087B               	movf	LCD_Goto@col,w
   727     06DC  3EBF               	addlw	191
   728     06DD  120A  118A  25F0   	fcall	_WriteByte
   729     06E0  0008               	return
   730     06E1                     l1356:
   731     06E1  087B               	movf	LCD_Goto@col,w
   732     06E2  3E93               	addlw	147
   733     06E3  120A  118A  25F0   	fcall	_WriteByte
   734     06E6  0008               	return
   735     06E7                     l1358:
   736     06E7  087B               	movf	LCD_Goto@col,w
   737     06E8  3ED3               	addlw	211
   738     06E9  120A  118A  25F0   	fcall	_WriteByte
   739     06EC  0008               	return
   740     06ED                     l1362:
   741     06ED  0878               	movf	LCD_Goto@row,w
   742     06EE  00F9               	movwf	??_LCD_Goto
   743     06EF  01FA               	clrf	??_LCD_Goto+1
   744                           
   745                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   746                           ; Switch size 1, requested type "simple"
   747                           ; Number of cases is 1, Range of values is 0 to 0
   748                           ; switch strategies available:
   749                           ; Name         Instructions Cycles
   750                           ; simple_byte            4     3 (average)
   751                           ; direct_byte           11     8 (fixed)
   752                           ; jumptable            260     6 (fixed)
   753                           ;	Chosen strategy is simple_byte
   754     06F0  087A               	movf	??_LCD_Goto+1,w
   755     06F1  3A00               	xorlw	0	; case 0
   756     06F2  1903               	skipnz
   757     06F3  2EF5               	goto	l1832
   758     06F4  2F03               	goto	l68
   759     06F5                     l1832:
   760                           
   761                           ; Switch size 1, requested type "simple"
   762                           ; Number of cases is 4, Range of values is 1 to 4
   763                           ; switch strategies available:
   764                           ; Name         Instructions Cycles
   765                           ; simple_byte           13     7 (average)
   766                           ; direct_byte           23    11 (fixed)
   767                           ; jumptable            263     9 (fixed)
   768                           ;	Chosen strategy is simple_byte
   769     06F5  0879               	movf	??_LCD_Goto,w
   770     06F6  3A01               	xorlw	1	; case 1
   771     06F7  1903               	skipnz
   772     06F8  2ED5               	goto	l1352
   773     06F9  3A03               	xorlw	3	; case 2
   774     06FA  1903               	skipnz
   775     06FB  2EDB               	goto	l1354
   776     06FC  3A01               	xorlw	1	; case 3
   777     06FD  1903               	skipnz
   778     06FE  2EE1               	goto	l1356
   779     06FF  3A07               	xorlw	7	; case 4
   780     0700  1903               	skipnz
   781     0701  2EE7               	goto	l1358
   782     0702  2F03               	goto	l68
   783     0703                     l68:
   784     0703  0008               	return
   785     0704                     __end_of_LCD_Goto:
   786                           
   787                           	psect	text3
   788     0743                     __ptext3:	
   789 ;; *************** function _LCD_Begin *****************
   790 ;; Defined at:
   791 ;;		line 32 in file "../lcd.c"
   792 ;; Parameters:    Size  Location     Type
   793 ;;  cols            1    wreg     unsigned char 
   794 ;;  lines           1   10[COMMON] unsigned char 
   795 ;; Auto vars:     Size  Location     Type
   796 ;;  cols            1    0[COMMON] unsigned char 
   797 ;;  _function_se    1    0[BANK0 ] unsigned char 
   798 ;; Return value:  Size  Location     Type
   799 ;;                  1    wreg      void 
   800 ;; Registers used:
   801 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   802 ;; Tracked objects:
   803 ;;		On entry : 0/0
   804 ;;		On exit  : 0/0
   805 ;;		Unchanged: 0/0
   806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   807 ;;      Params:         1       0       0       0       0
   808 ;;      Locals:         0       1       0       0       0
   809 ;;      Temps:          3       0       0       0       0
   810 ;;      Totals:         4       1       0       0       0
   811 ;;Total ram usage:        5 bytes
   812 ;; Hardware stack levels used: 1
   813 ;; Hardware stack levels required when called: 5
   814 ;; This function calls:
   815 ;;		_LCD_Clear
   816 ;;		_WriteByte
   817 ;;		_WriteNibble
   818 ;;		_WritePin
   819 ;; This function is called by:
   820 ;;		_main
   821 ;; This function uses a non-reentrant model
   822 ;;
   823                           
   824     0743                     _LCD_Begin:	
   825                           ;psect for function _LCD_Begin
   826                           
   827                           
   828                           ;../lcd.c: 32: void LCD_Begin(uint8_t cols, uint8_t lines);../lcd.c: 33: {;../lcd.c: 34:
      +                               uint8_t _function_set = 0x20;
   829                           
   830                           ;incstack = 0
   831                           ; Regs used in _LCD_Begin: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   832     0743  3020               	movlw	32
   833     0744  1283               	bcf	3,5	;RP0=0, select bank0
   834     0745  1303               	bcf	3,6	;RP1=0, select bank0
   835     0746  00AD               	movwf	LCD_Begin@_function_set
   836                           
   837                           ;../lcd.c: 36:     WritePin(LCD_RS, 0);
   838     0747  01F0               	clrf	WritePin@val
   839     0748  0827               	movf	_LCD_RS,w
   840     0749  120A  118A  266A  120A  118A  	fcall	_WritePin
   841                           
   842                           ;../lcd.c: 37:     WritePin(LCD_EN, 0);
   843     074E  01F0               	clrf	WritePin@val
   844     074F  1283               	bcf	3,5	;RP0=0, select bank0
   845     0750  1303               	bcf	3,6	;RP1=0, select bank0
   846     0751  0826               	movf	_LCD_EN,w
   847     0752  120A  118A  266A  120A  118A  	fcall	_WritePin
   848                           
   849                           ;../lcd.c: 38:     WritePin(LCD_D4, 0);
   850     0757  01F0               	clrf	WritePin@val
   851     0758  1283               	bcf	3,5	;RP0=0, select bank0
   852     0759  1303               	bcf	3,6	;RP1=0, select bank0
   853     075A  0825               	movf	_LCD_D4,w
   854     075B  120A  118A  266A  120A  118A  	fcall	_WritePin
   855                           
   856                           ;../lcd.c: 39:     WritePin(LCD_D5, 0);
   857     0760  01F0               	clrf	WritePin@val
   858     0761  1283               	bcf	3,5	;RP0=0, select bank0
   859     0762  1303               	bcf	3,6	;RP1=0, select bank0
   860     0763  0824               	movf	_LCD_D5,w
   861     0764  120A  118A  266A  120A  118A  	fcall	_WritePin
   862                           
   863                           ;../lcd.c: 40:     WritePin(LCD_D6, 0);
   864     0769  01F0               	clrf	WritePin@val
   865     076A  1283               	bcf	3,5	;RP0=0, select bank0
   866     076B  1303               	bcf	3,6	;RP1=0, select bank0
   867     076C  0823               	movf	_LCD_D6,w
   868     076D  120A  118A  266A  120A  118A  	fcall	_WritePin
   869                           
   870                           ;../lcd.c: 41:     WritePin(LCD_D7, 0);
   871     0772  01F0               	clrf	WritePin@val
   872     0773  1283               	bcf	3,5	;RP0=0, select bank0
   873     0774  1303               	bcf	3,6	;RP1=0, select bank0
   874     0775  0822               	movf	_LCD_D7,w
   875     0776  120A  118A  266A  120A  118A  	fcall	_WritePin
   876                           
   877                           ;../lcd.c: 43:     _delay((unsigned long)((2000)*(_XTAL_FREQ/4000.0)));
   878     077B  3015               	movlw	21
   879     077C  00FD               	movwf	??_LCD_Begin+2
   880     077D  304B               	movlw	75
   881     077E  00FC               	movwf	??_LCD_Begin+1
   882     077F  30BE               	movlw	190
   883     0780  00FB               	movwf	??_LCD_Begin
   884     0781                     u2057:
   885     0781  0BFB               	decfsz	??_LCD_Begin,f
   886     0782  2F81               	goto	u2057
   887     0783  0BFC               	decfsz	??_LCD_Begin+1,f
   888     0784  2F81               	goto	u2057
   889     0785  0BFD               	decfsz	??_LCD_Begin+2,f
   890     0786  2F81               	goto	u2057
   891     0787  0000               	nop
   892                           
   893                           ;../lcd.c: 45:     if (lines > 1) {
   894     0788  3002               	movlw	2
   895     0789  027A               	subwf	LCD_Begin@lines,w
   896     078A  1C03               	skipc
   897     078B  2F8F               	goto	l1326
   898                           
   899                           ;../lcd.c: 46:         _function_set |= 0x08;
   900     078C  1283               	bcf	3,5	;RP0=0, select bank0
   901     078D  1303               	bcf	3,6	;RP1=0, select bank0
   902     078E  15AD               	bsf	LCD_Begin@_function_set,3
   903     078F                     l1326:
   904                           
   905                           ;../lcd.c: 52:     WriteNibble(0x03);
   906     078F  3003               	movlw	3
   907     0790  120A  118A  2699  120A  118A  	fcall	_WriteNibble
   908                           
   909                           ;../lcd.c: 53:     _delay((unsigned long)((5)*(_XTAL_FREQ/4000.0)));
   910     0795  300D               	movlw	13
   911     0796  00FC               	movwf	??_LCD_Begin+1
   912     0797  30FB               	movlw	251
   913     0798  00FB               	movwf	??_LCD_Begin
   914     0799                     u2067:
   915     0799  0BFB               	decfsz	??_LCD_Begin,f
   916     079A  2F99               	goto	u2067
   917     079B  0BFC               	decfsz	??_LCD_Begin+1,f
   918     079C  2F99               	goto	u2067
   919     079D  2F9E               	nop2
   920                           
   921                           ;../lcd.c: 54:     WriteNibble(0x03);
   922     079E  3003               	movlw	3
   923     079F  120A  118A  2699  120A  118A  	fcall	_WriteNibble
   924                           
   925                           ;../lcd.c: 55:     _delay((unsigned long)((200)*(_XTAL_FREQ/4000000.0)));
   926     07A4  3085               	movlw	133
   927     07A5  00FB               	movwf	??_LCD_Begin
   928     07A6                     u2077:
   929     07A6  0BFB               	decfsz	??_LCD_Begin,f
   930     07A7  2FA6               	goto	u2077
   931                           
   932                           ;../lcd.c: 56:     WriteNibble(0x03);
   933     07A8  3003               	movlw	3
   934     07A9  120A  118A  2699  120A  118A  	fcall	_WriteNibble
   935                           
   936                           ;../lcd.c: 57:     _delay((unsigned long)((100)*(_XTAL_FREQ/4000000.0)));
   937     07AE  3042               	movlw	66
   938     07AF  00FB               	movwf	??_LCD_Begin
   939     07B0                     u2087:
   940     07B0  0BFB               	decfsz	??_LCD_Begin,f
   941     07B1  2FB0               	goto	u2087
   942     07B2  0000               	nop
   943                           
   944                           ;../lcd.c: 58:     WriteNibble(0x02);
   945     07B3  3002               	movlw	2
   946     07B4  120A  118A  2699  120A  118A  	fcall	_WriteNibble
   947                           
   948                           ;../lcd.c: 59:     _delay((unsigned long)((100)*(_XTAL_FREQ/4000000.0)));
   949     07B9  3042               	movlw	66
   950     07BA  00FB               	movwf	??_LCD_Begin
   951     07BB                     u2097:
   952     07BB  0BFB               	decfsz	??_LCD_Begin,f
   953     07BC  2FBB               	goto	u2097
   954     07BD  0000               	nop
   955                           
   956                           ;../lcd.c: 61:     WriteByte( _function_set );
   957     07BE  1283               	bcf	3,5	;RP0=0, select bank0
   958     07BF  1303               	bcf	3,6	;RP1=0, select bank0
   959     07C0  082D               	movf	LCD_Begin@_function_set,w
   960     07C1  120A  118A  25F0  120A  118A  	fcall	_WriteByte
   961                           
   962                           ;../lcd.c: 64:     WriteByte( 0x08 | 0x04 );
   963     07C6  300C               	movlw	12
   964     07C7  120A  118A  25F0  120A  118A  	fcall	_WriteByte
   965                           
   966                           ;../lcd.c: 67:     LCD_Clear();
   967     07CC  120A  118A  2604  120A  118A  	fcall	_LCD_Clear
   968                           
   969                           ;../lcd.c: 69:     WriteByte( 0x04 | 0x02 );
   970     07D1  3006               	movlw	6
   971     07D2  120A  118A  25F0  120A  118A  	fcall	_WriteByte
   972                           
   973                           ;../lcd.c: 70:     _delay((unsigned long)((2)*(_XTAL_FREQ/4000.0)));
   974     07D7  3006               	movlw	6
   975     07D8  00FC               	movwf	??_LCD_Begin+1
   976     07D9  3030               	movlw	48
   977     07DA  00FB               	movwf	??_LCD_Begin
   978     07DB                     u2107:
   979     07DB  0BFB               	decfsz	??_LCD_Begin,f
   980     07DC  2FDB               	goto	u2107
   981     07DD  0BFC               	decfsz	??_LCD_Begin+1,f
   982     07DE  2FDB               	goto	u2107
   983     07DF  0000               	nop
   984                           
   985                           ;../lcd.c: 71:     _displaycontrol = 0x08 | 0x04;
   986     07E0  300C               	movlw	12
   987     07E1  1283               	bcf	3,5	;RP0=0, select bank0
   988     07E2  1303               	bcf	3,6	;RP1=0, select bank0
   989     07E3  00AC               	movwf	__displaycontrol
   990     07E4  0008               	return
   991     07E5                     __end_of_LCD_Begin:
   992                           
   993                           	psect	text4
   994     0604                     __ptext4:	
   995 ;; *************** function _LCD_Clear *****************
   996 ;; Defined at:
   997 ;;		line 88 in file "../lcd.c"
   998 ;; Parameters:    Size  Location     Type
   999 ;;		None
  1000 ;; Auto vars:     Size  Location     Type
  1001 ;;		None
  1002 ;; Return value:  Size  Location     Type
  1003 ;;                  1    wreg      void 
  1004 ;; Registers used:
  1005 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1006 ;; Tracked objects:
  1007 ;;		On entry : 0/0
  1008 ;;		On exit  : 0/0
  1009 ;;		Unchanged: 0/0
  1010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1011 ;;      Params:         0       0       0       0       0
  1012 ;;      Locals:         0       0       0       0       0
  1013 ;;      Temps:          2       0       0       0       0
  1014 ;;      Totals:         2       0       0       0       0
  1015 ;;Total ram usage:        2 bytes
  1016 ;; Hardware stack levels used: 1
  1017 ;; Hardware stack levels required when called: 4
  1018 ;; This function calls:
  1019 ;;		_WriteByte
  1020 ;;		_WritePin
  1021 ;; This function is called by:
  1022 ;;		_LCD_Begin
  1023 ;; This function uses a non-reentrant model
  1024 ;;
  1025                           
  1026     0604                     _LCD_Clear:	
  1027                           ;psect for function _LCD_Clear
  1028                           
  1029                           
  1030                           ;../lcd.c: 90:     WritePin(LCD_RS, 0);
  1031                           
  1032                           ;incstack = 0
  1033                           ; Regs used in _LCD_Clear: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1034     0604  01F0               	clrf	WritePin@val
  1035     0605  1283               	bcf	3,5	;RP0=0, select bank0
  1036     0606  1303               	bcf	3,6	;RP1=0, select bank0
  1037     0607  0827               	movf	_LCD_RS,w
  1038     0608  120A  118A  266A  120A  118A  	fcall	_WritePin
  1039                           
  1040                           ;../lcd.c: 91:     WriteByte( 0x01 );
  1041     060D  3001               	movlw	1
  1042     060E  120A  118A  25F0  120A  118A  	fcall	_WriteByte
  1043                           
  1044                           ;../lcd.c: 92:     _delay((unsigned long)((2)*(_XTAL_FREQ/4000.0)));
  1045     0613  3006               	movlw	6
  1046     0614  00F9               	movwf	??_LCD_Clear+1
  1047     0615  3030               	movlw	48
  1048     0616  00F8               	movwf	??_LCD_Clear
  1049     0617                     u2117:
  1050     0617  0BF8               	decfsz	??_LCD_Clear,f
  1051     0618  2E17               	goto	u2117
  1052     0619  0BF9               	decfsz	??_LCD_Clear+1,f
  1053     061A  2E17               	goto	u2117
  1054     061B  0000               	nop
  1055     061C  0008               	return
  1056     061D                     __end_of_LCD_Clear:
  1057                           
  1058                           	psect	text5
  1059     05F0                     __ptext5:	
  1060 ;; *************** function _WriteByte *****************
  1061 ;; Defined at:
  1062 ;;		line 202 in file "../lcd.c"
  1063 ;; Parameters:    Size  Location     Type
  1064 ;;  b               1    wreg     unsigned char 
  1065 ;; Auto vars:     Size  Location     Type
  1066 ;;  b               1    7[COMMON] unsigned char 
  1067 ;; Return value:  Size  Location     Type
  1068 ;;                  1    wreg      void 
  1069 ;; Registers used:
  1070 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1071 ;; Tracked objects:
  1072 ;;		On entry : 0/0
  1073 ;;		On exit  : 0/0
  1074 ;;		Unchanged: 0/0
  1075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1076 ;;      Params:         0       0       0       0       0
  1077 ;;      Locals:         1       0       0       0       0
  1078 ;;      Temps:          1       0       0       0       0
  1079 ;;      Totals:         2       0       0       0       0
  1080 ;;Total ram usage:        2 bytes
  1081 ;; Hardware stack levels used: 1
  1082 ;; Hardware stack levels required when called: 3
  1083 ;; This function calls:
  1084 ;;		_WriteNibble
  1085 ;; This function is called by:
  1086 ;;		_LCD_Begin
  1087 ;;		_LCD_Goto
  1088 ;;		_LCD_Clear
  1089 ;;		_LCD_PutS
  1090 ;;		_LCD_PutC
  1091 ;;		_LCD_Display
  1092 ;;		_LCD_CursorUnderline
  1093 ;;		_LCD_CursorBlink
  1094 ;;		_LCD_ShiftLeft
  1095 ;;		_LCD_ShiftRight
  1096 ;;		_LCD_MoveCursorLeft
  1097 ;;		_LCD_MoveCursorRight
  1098 ;;		_LCD_ReturnHome
  1099 ;; This function uses a non-reentrant model
  1100 ;;
  1101                           
  1102     05F0                     _WriteByte:	
  1103                           ;psect for function _WriteByte
  1104                           
  1105                           
  1106                           ;incstack = 0
  1107                           ; Regs used in _WriteByte: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1108                           ;WriteByte@b stored from wreg
  1109     05F0  00F7               	movwf	WriteByte@b
  1110                           
  1111                           ;../lcd.c: 202: void WriteByte(uint8_t b);../lcd.c: 203: {;../lcd.c: 204:     WriteNibbl
      +                          e( b >> 4);
  1112     05F1  0877               	movf	WriteByte@b,w
  1113     05F2  00F6               	movwf	??_WriteByte
  1114     05F3  3004               	movlw	4
  1115     05F4                     u1065:
  1116     05F4  1003               	clrc
  1117     05F5  0CF6               	rrf	??_WriteByte,f
  1118     05F6  3EFF               	addlw	-1
  1119     05F7  1D03               	skipz
  1120     05F8  2DF4               	goto	u1065
  1121     05F9  0876               	movf	??_WriteByte,w
  1122     05FA  120A  118A  2699  120A  118A  	fcall	_WriteNibble
  1123                           
  1124                           ;../lcd.c: 205:     WriteNibble(b);
  1125     05FF  0877               	movf	WriteByte@b,w
  1126     0600  120A  118A  2699   	fcall	_WriteNibble
  1127     0603  0008               	return
  1128     0604                     __end_of_WriteByte:
  1129                           
  1130                           	psect	text6
  1131     0699                     __ptext6:	
  1132 ;; *************** function _WriteNibble *****************
  1133 ;; Defined at:
  1134 ;;		line 190 in file "../lcd.c"
  1135 ;; Parameters:    Size  Location     Type
  1136 ;;  b               1    wreg     unsigned char 
  1137 ;; Auto vars:     Size  Location     Type
  1138 ;;  b               1    5[COMMON] unsigned char 
  1139 ;; Return value:  Size  Location     Type
  1140 ;;                  1    wreg      void 
  1141 ;; Registers used:
  1142 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1143 ;; Tracked objects:
  1144 ;;		On entry : 0/0
  1145 ;;		On exit  : 0/0
  1146 ;;		Unchanged: 0/0
  1147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1148 ;;      Params:         0       0       0       0       0
  1149 ;;      Locals:         1       0       0       0       0
  1150 ;;      Temps:          0       0       0       0       0
  1151 ;;      Totals:         1       0       0       0       0
  1152 ;;Total ram usage:        1 bytes
  1153 ;; Hardware stack levels used: 1
  1154 ;; Hardware stack levels required when called: 2
  1155 ;; This function calls:
  1156 ;;		_EnablePulse
  1157 ;;		_WritePin
  1158 ;; This function is called by:
  1159 ;;		_LCD_Begin
  1160 ;;		_WriteByte
  1161 ;; This function uses a non-reentrant model
  1162 ;;
  1163                           
  1164     0699                     _WriteNibble:	
  1165                           ;psect for function _WriteNibble
  1166                           
  1167                           
  1168                           ;incstack = 0
  1169                           ; Regs used in _WriteNibble: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1170                           ;WriteNibble@b stored from wreg
  1171     0699  00F5               	movwf	WriteNibble@b
  1172                           
  1173                           ;../lcd.c: 190: void WriteNibble(uint8_t b);../lcd.c: 191: {;../lcd.c: 192:     WritePin
      +                          ( LCD_D4, (b & 0x01) );
  1174     069A  0875               	movf	WriteNibble@b,w
  1175     069B  3901               	andlw	1
  1176     069C  00F0               	movwf	WritePin@val
  1177     069D  1283               	bcf	3,5	;RP0=0, select bank0
  1178     069E  1303               	bcf	3,6	;RP1=0, select bank0
  1179     069F  0825               	movf	_LCD_D4,w
  1180     06A0  120A  118A  266A  120A  118A  	fcall	_WritePin
  1181                           
  1182                           ;../lcd.c: 193:     WritePin( LCD_D5, (b & 0x02) );
  1183     06A5  0875               	movf	WriteNibble@b,w
  1184     06A6  3902               	andlw	2
  1185     06A7  00F0               	movwf	WritePin@val
  1186     06A8  1283               	bcf	3,5	;RP0=0, select bank0
  1187     06A9  1303               	bcf	3,6	;RP1=0, select bank0
  1188     06AA  0824               	movf	_LCD_D5,w
  1189     06AB  120A  118A  266A  120A  118A  	fcall	_WritePin
  1190                           
  1191                           ;../lcd.c: 194:     WritePin( LCD_D6, (b & 0x04) );
  1192     06B0  0875               	movf	WriteNibble@b,w
  1193     06B1  3904               	andlw	4
  1194     06B2  00F0               	movwf	WritePin@val
  1195     06B3  1283               	bcf	3,5	;RP0=0, select bank0
  1196     06B4  1303               	bcf	3,6	;RP1=0, select bank0
  1197     06B5  0823               	movf	_LCD_D6,w
  1198     06B6  120A  118A  266A  120A  118A  	fcall	_WritePin
  1199                           
  1200                           ;../lcd.c: 195:     WritePin( LCD_D7, (b & 0x08) );
  1201     06BB  0875               	movf	WriteNibble@b,w
  1202     06BC  3908               	andlw	8
  1203     06BD  00F0               	movwf	WritePin@val
  1204     06BE  1283               	bcf	3,5	;RP0=0, select bank0
  1205     06BF  1303               	bcf	3,6	;RP1=0, select bank0
  1206     06C0  0822               	movf	_LCD_D7,w
  1207     06C1  120A  118A  266A  120A  118A  	fcall	_WritePin
  1208                           
  1209                           ;../lcd.c: 198:     EnablePulse();
  1210     06C6  120A  118A  261D   	fcall	_EnablePulse
  1211     06C9  0008               	return
  1212     06CA                     __end_of_WriteNibble:
  1213                           
  1214                           	psect	text7
  1215     061D                     __ptext7:	
  1216 ;; *************** function _EnablePulse *****************
  1217 ;; Defined at:
  1218 ;;		line 209 in file "../lcd.c"
  1219 ;; Parameters:    Size  Location     Type
  1220 ;;		None
  1221 ;; Auto vars:     Size  Location     Type
  1222 ;;		None
  1223 ;; Return value:  Size  Location     Type
  1224 ;;                  1    wreg      void 
  1225 ;; Registers used:
  1226 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1227 ;; Tracked objects:
  1228 ;;		On entry : 0/0
  1229 ;;		On exit  : 0/0
  1230 ;;		Unchanged: 0/0
  1231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1232 ;;      Params:         0       0       0       0       0
  1233 ;;      Locals:         0       0       0       0       0
  1234 ;;      Temps:          1       0       0       0       0
  1235 ;;      Totals:         1       0       0       0       0
  1236 ;;Total ram usage:        1 bytes
  1237 ;; Hardware stack levels used: 1
  1238 ;; Hardware stack levels required when called: 1
  1239 ;; This function calls:
  1240 ;;		_WritePin
  1241 ;; This function is called by:
  1242 ;;		_WriteNibble
  1243 ;; This function uses a non-reentrant model
  1244 ;;
  1245                           
  1246     061D                     _EnablePulse:	
  1247                           ;psect for function _EnablePulse
  1248                           
  1249                           
  1250                           ;../lcd.c: 211:     WritePin(LCD_EN, 0);
  1251                           
  1252                           ;incstack = 0
  1253                           ; Regs used in _EnablePulse: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1254     061D  01F0               	clrf	WritePin@val
  1255     061E  1283               	bcf	3,5	;RP0=0, select bank0
  1256     061F  1303               	bcf	3,6	;RP1=0, select bank0
  1257     0620  0826               	movf	_LCD_EN,w
  1258     0621  120A  118A  266A  120A  118A  	fcall	_WritePin
  1259                           
  1260                           ;../lcd.c: 212:     _delay((unsigned long)((1)*(_XTAL_FREQ/4000000.0)));
  1261     0626  2E27               	nop2	;2 cycle nop
  1262                           
  1263                           ;../lcd.c: 213:     WritePin(LCD_EN, 1);
  1264     0627  01F0               	clrf	WritePin@val
  1265     0628  0AF0               	incf	WritePin@val,f
  1266     0629  1283               	bcf	3,5	;RP0=0, select bank0
  1267     062A  1303               	bcf	3,6	;RP1=0, select bank0
  1268     062B  0826               	movf	_LCD_EN,w
  1269     062C  120A  118A  266A  120A  118A  	fcall	_WritePin
  1270                           
  1271                           ;../lcd.c: 214:     _delay((unsigned long)((1)*(_XTAL_FREQ/4000000.0)));
  1272     0631  2E32               	nop2	;2 cycle nop
  1273                           
  1274                           ;../lcd.c: 215:     WritePin(LCD_EN, 0);
  1275     0632  01F0               	clrf	WritePin@val
  1276     0633  1283               	bcf	3,5	;RP0=0, select bank0
  1277     0634  1303               	bcf	3,6	;RP1=0, select bank0
  1278     0635  0826               	movf	_LCD_EN,w
  1279     0636  120A  118A  266A  120A  118A  	fcall	_WritePin
  1280                           
  1281                           ;../lcd.c: 216:     _delay((unsigned long)((100)*(_XTAL_FREQ/4000000.0)));
  1282     063B  3042               	movlw	66
  1283     063C  00F4               	movwf	??_EnablePulse
  1284     063D                     u2127:
  1285     063D  0BF4               	decfsz	??_EnablePulse,f
  1286     063E  2E3D               	goto	u2127
  1287     063F  0000               	nop
  1288     0640  0008               	return
  1289     0641                     __end_of_EnablePulse:
  1290                           
  1291                           	psect	text8
  1292     066A                     __ptext8:	
  1293 ;; *************** function _WritePin *****************
  1294 ;; Defined at:
  1295 ;;		line 220 in file "../lcd.c"
  1296 ;; Parameters:    Size  Location     Type
  1297 ;;  _pin            1    wreg     unsigned char 
  1298 ;;  val             1    0[COMMON] unsigned char 
  1299 ;; Auto vars:     Size  Location     Type
  1300 ;;  _pin            1    3[COMMON] unsigned char 
  1301 ;; Return value:  Size  Location     Type
  1302 ;;                  1    wreg      void 
  1303 ;; Registers used:
  1304 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1305 ;; Tracked objects:
  1306 ;;		On entry : 0/0
  1307 ;;		On exit  : 0/0
  1308 ;;		Unchanged: 0/0
  1309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1310 ;;      Params:         1       0       0       0       0
  1311 ;;      Locals:         1       0       0       0       0
  1312 ;;      Temps:          2       0       0       0       0
  1313 ;;      Totals:         4       0       0       0       0
  1314 ;;Total ram usage:        4 bytes
  1315 ;; Hardware stack levels used: 1
  1316 ;; This function calls:
  1317 ;;		Nothing
  1318 ;; This function is called by:
  1319 ;;		_LCD_Begin
  1320 ;;		_LCD_Goto
  1321 ;;		_LCD_Clear
  1322 ;;		_LCD_PutS
  1323 ;;		_WriteNibble
  1324 ;;		_EnablePulse
  1325 ;;		_LCD_PutC
  1326 ;;		_LCD_Display
  1327 ;;		_LCD_CursorUnderline
  1328 ;;		_LCD_CursorBlink
  1329 ;;		_LCD_ShiftLeft
  1330 ;;		_LCD_ShiftRight
  1331 ;;		_LCD_MoveCursorLeft
  1332 ;;		_LCD_MoveCursorRight
  1333 ;;		_LCD_ReturnHome
  1334 ;; This function uses a non-reentrant model
  1335 ;;
  1336                           
  1337     066A                     _WritePin:	
  1338                           ;psect for function _WritePin
  1339                           
  1340                           
  1341                           ;incstack = 0
  1342                           ; Regs used in _WritePin: [wreg-fsr0h+status,2+status,0]
  1343                           ;WritePin@_pin stored from wreg
  1344     066A  00F3               	movwf	WritePin@_pin
  1345                           
  1346                           ;../lcd.c: 220: void WritePin(uint8_t _pin, uint8_t val);../lcd.c: 221: {;../lcd.c: 222:
      +                               if (val)
  1347     066B  0870               	movf	WritePin@val,w
  1348     066C  1903               	btfsc	3,2
  1349     066D  2E83               	goto	l1278
  1350                           
  1351                           ;../lcd.c: 223:         *_port |= (1 << _pin);
  1352     066E  3001               	movlw	1
  1353     066F  00F1               	movwf	??_WritePin
  1354     0670  0A73               	incf	WritePin@_pin,w
  1355     0671  2E74               	goto	u1044
  1356     0672                     u1045:
  1357     0672  1003               	clrc
  1358     0673  0DF1               	rlf	??_WritePin,f
  1359     0674                     u1044:
  1360     0674  3EFF               	addlw	-1
  1361     0675  1D03               	skipz
  1362     0676  2E72               	goto	u1045
  1363     0677  0871               	movf	??_WritePin,w
  1364     0678  00F2               	movwf	??_WritePin+1
  1365     0679  1283               	bcf	3,5	;RP0=0, select bank0
  1366     067A  1303               	bcf	3,6	;RP1=0, select bank0
  1367     067B  0820               	movf	__port,w
  1368     067C  0084               	movwf	4
  1369     067D  1783               	bsf	3,7
  1370     067E  1C21               	btfss	__port+1,0
  1371     067F  1383               	bcf	3,7
  1372     0680  0872               	movf	??_WritePin+1,w
  1373     0681  0480               	iorwf	0,f
  1374     0682  0008               	return
  1375     0683                     l1278:
  1376                           
  1377                           ;../lcd.c: 225:         *_port &= ~(1 << _pin);
  1378     0683  3001               	movlw	1
  1379     0684  00F1               	movwf	??_WritePin
  1380     0685  0A73               	incf	WritePin@_pin,w
  1381     0686  2E89               	goto	u1054
  1382     0687                     u1055:
  1383     0687  1003               	clrc
  1384     0688  0DF1               	rlf	??_WritePin,f
  1385     0689                     u1054:
  1386     0689  3EFF               	addlw	-1
  1387     068A  1D03               	skipz
  1388     068B  2E87               	goto	u1055
  1389     068C  0871               	movf	??_WritePin,w
  1390     068D  3AFF               	xorlw	255
  1391     068E  00F2               	movwf	??_WritePin+1
  1392     068F  1283               	bcf	3,5	;RP0=0, select bank0
  1393     0690  1303               	bcf	3,6	;RP1=0, select bank0
  1394     0691  0820               	movf	__port,w
  1395     0692  0084               	movwf	4
  1396     0693  1783               	bsf	3,7
  1397     0694  1C21               	btfss	__port+1,0
  1398     0695  1383               	bcf	3,7
  1399     0696  0872               	movf	??_WritePin+1,w
  1400     0697  0580               	andwf	0,f
  1401     0698  0008               	return
  1402     0699                     __end_of_WritePin:
  1403                           
  1404                           	psect	text9
  1405     05DD                     __ptext9:	
  1406 ;; *************** function _LCD *****************
  1407 ;; Defined at:
  1408 ;;		line 19 in file "../lcd.c"
  1409 ;; Parameters:    Size  Location     Type
  1410 ;;  _p              2    0[COMMON] PTR volatile unsigned ch
  1411 ;;		 -> PORTD(1), 
  1412 ;;  rs              1    2[COMMON] unsigned char 
  1413 ;;  en              1    3[COMMON] unsigned char 
  1414 ;;  d4              1    4[COMMON] unsigned char 
  1415 ;;  d5              1    5[COMMON] unsigned char 
  1416 ;;  d6              1    6[COMMON] unsigned char 
  1417 ;;  d7              1    7[COMMON] unsigned char 
  1418 ;; Auto vars:     Size  Location     Type
  1419 ;;		None
  1420 ;; Return value:  Size  Location     Type
  1421 ;;                  1    wreg      void 
  1422 ;; Registers used:
  1423 ;;		wreg, status,2, status,0
  1424 ;; Tracked objects:
  1425 ;;		On entry : 0/0
  1426 ;;		On exit  : 0/0
  1427 ;;		Unchanged: 0/0
  1428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1429 ;;      Params:         8       0       0       0       0
  1430 ;;      Locals:         0       0       0       0       0
  1431 ;;      Temps:          0       0       0       0       0
  1432 ;;      Totals:         8       0       0       0       0
  1433 ;;Total ram usage:        8 bytes
  1434 ;; Hardware stack levels used: 1
  1435 ;; This function calls:
  1436 ;;		Nothing
  1437 ;; This function is called by:
  1438 ;;		_main
  1439 ;; This function uses a non-reentrant model
  1440 ;;
  1441                           
  1442     05DD                     _LCD:	
  1443                           ;psect for function _LCD
  1444                           
  1445                           
  1446                           ;../lcd.c: 19: void LCD(volatile unsigned char *_p, uint8_t rs, uint8_t en, uint8_t d4,;
      +                          ../lcd.c: 20:         uint8_t d5, uint8_t d6, uint8_t d7);../lcd.c: 21: {;../lcd.c: 22: 
      +                              _port = _p;
  1447                           
  1448                           ;incstack = 0
  1449                           ; Regs used in _LCD: [wreg+status,2+status,0]
  1450     05DD  0870               	movf	LCD@_p,w
  1451     05DE  1283               	bcf	3,5	;RP0=0, select bank0
  1452     05DF  1303               	bcf	3,6	;RP1=0, select bank0
  1453     05E0  00A0               	movwf	__port
  1454     05E1  0871               	movf	LCD@_p+1,w
  1455     05E2  00A1               	movwf	__port+1
  1456                           
  1457                           ;../lcd.c: 23:     LCD_RS = rs;
  1458     05E3  0872               	movf	LCD@rs,w
  1459     05E4  00A7               	movwf	_LCD_RS
  1460                           
  1461                           ;../lcd.c: 24:     LCD_EN = en;
  1462     05E5  0873               	movf	LCD@en,w
  1463     05E6  00A6               	movwf	_LCD_EN
  1464                           
  1465                           ;../lcd.c: 25:     LCD_D4 = d4;
  1466     05E7  0874               	movf	LCD@d4,w
  1467     05E8  00A5               	movwf	_LCD_D4
  1468                           
  1469                           ;../lcd.c: 26:     LCD_D5 = d5;
  1470     05E9  0875               	movf	LCD@d5,w
  1471     05EA  00A4               	movwf	_LCD_D5
  1472                           
  1473                           ;../lcd.c: 27:     LCD_D6 = d6;
  1474     05EB  0876               	movf	LCD@d6,w
  1475     05EC  00A3               	movwf	_LCD_D6
  1476                           
  1477                           ;../lcd.c: 28:     LCD_D7 = d7;
  1478     05ED  0877               	movf	LCD@d7,w
  1479     05EE  00A2               	movwf	_LCD_D7
  1480     05EF  0008               	return
  1481     05F0                     __end_of_LCD:
  1482     007E                     btemp	set	126	;btemp
  1483     007E                     wtemp0	set	126
  1484                           
  1485                           	psect	idloc
  1486                           
  1487                           ;Config register IDLOC0 @ 0x2000
  1488                           ;	unspecified, using default values
  1489     2000                     	org	8192
  1490     2000  3FFF               	dw	16383
  1491                           
  1492                           ;Config register IDLOC1 @ 0x2001
  1493                           ;	unspecified, using default values
  1494     2001                     	org	8193
  1495     2001  3FFF               	dw	16383
  1496                           
  1497                           ;Config register IDLOC2 @ 0x2002
  1498                           ;	unspecified, using default values
  1499     2002                     	org	8194
  1500     2002  3FFF               	dw	16383
  1501                           
  1502                           ;Config register IDLOC3 @ 0x2003
  1503                           ;	unspecified, using default values
  1504     2003                     	org	8195
  1505     2003  3FFF               	dw	16383
  1506                           
  1507                           	psect	config
  1508                           
  1509                           ;Config register CONFIG @ 0x2007
  1510                           ;	Oscillator Selection bits
  1511                           ;	FOSC = HS, HS oscillator
  1512                           ;	Watchdog Timer Enable bit
  1513                           ;	WDTE = OFF, WDT disabled
  1514                           ;	Power-up Timer Enable bit
  1515                           ;	PWRTE = ON, PWRT enabled
  1516                           ;	Brown-out Reset Enable bit
  1517                           ;	BOREN = OFF, BOR disabled
  1518                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1519                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1520                           ;	Data EEPROM Memory Code Protection bit
  1521                           ;	CPD = OFF, Data EEPROM code protection off
  1522                           ;	Flash Program Memory Write Enable bits
  1523                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1524                           ;	In-Circuit Debugger Mode bit
  1525                           ;	DEBUG = OFF, In-Circuit Debugger disabled, RB6 and RB7 are general purpose I/O pins
  1526                           ;	Flash Program Memory Code Protection bit
  1527                           ;	CP = OFF, Code protection off
  1528     2007                     	org	8199
  1529     2007  3F32               	dw	16178

Data Sizes:
    Strings     27
    Constant    0
    Data        4
    BSS         1
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      1      14
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_PutS@_str	PTR unsigned char  size(1) Largest target is 17
		 -> STR_2(CODE[10]), STR_1(CODE[17]), 

    LCD@_p	PTR volatile unsigned char  size(2) Largest target is 1
		 -> PORTD(SFR0[1]), 

    _port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> NULL(NULL[0]), PORTD(SFR0[1]), 


Critical Paths under _main in COMMON

    _main->_LCD_Begin
    _LCD_PutS->_WriteByte
    _LCD_Goto->_WriteByte
    _LCD_Begin->_LCD_Clear
    _LCD_Clear->_WriteByte
    _WriteByte->_WriteNibble
    _WriteNibble->_EnablePulse
    _EnablePulse->_WritePin

Critical Paths under _main in BANK0

    _main->_LCD_Begin

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   29366
                                _LCD
                          _LCD_Begin
                           _LCD_Goto
                           _LCD_PutS
 ---------------------------------------------------------------------------------
 (1) _LCD_PutS                                             3     3      0    6186
                                              8 COMMON     3     3      0
                          _WriteByte
                           _WritePin
 ---------------------------------------------------------------------------------
 (1) _LCD_Goto                                             4     3      1    6292
                                              8 COMMON     4     3      1
                          _WriteByte
                           _WritePin
 ---------------------------------------------------------------------------------
 (1) _LCD_Begin                                            6     5      1   16202
                                             10 COMMON     4     3      1
                                              0 BANK0      1     1      0
                          _LCD_Clear
                          _WriteByte
                        _WriteNibble
                           _WritePin
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            2     2      0    6030
                                              8 COMMON     2     2      0
                          _WriteByte
                           _WritePin
 ---------------------------------------------------------------------------------
 (2) _WriteByte                                            2     2      0    4064
                                              6 COMMON     2     2      0
                        _WriteNibble
 ---------------------------------------------------------------------------------
 (3) _WriteNibble                                          1     1      0    4020
                                              5 COMMON     1     1      0
                        _EnablePulse
                           _WritePin
 ---------------------------------------------------------------------------------
 (4) _EnablePulse                                          1     1      0    1966
                                              4 COMMON     1     1      0
                           _WritePin
 ---------------------------------------------------------------------------------
 (2) _WritePin                                             4     3      1    1966
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _LCD                                                  8     0      8     686
                                              0 COMMON     8     0      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD
   _LCD_Begin
     _LCD_Clear
       _WriteByte
         _WriteNibble
           _EnablePulse
             _WritePin
           _WritePin
       _WritePin
     _WriteByte
     _WriteNibble
     _WritePin
   _LCD_Goto
     _WriteByte
     _WritePin
   _LCD_PutS
     _WriteByte
     _WritePin

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      1       E       5       17.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1C      12        0.0%
ABS                  0      0      1C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Feb 15 16:26:52 2024

                      pc 0002                       l19 0742                       l68 0703  
                     fsr 0004                      _LCD 05DD                      fsr0 0004  
                    indf 0000      __end_of_EnablePulse 0641                     ?_LCD 0070  
                   l1326 078F                     l1352 06D5                     l1354 06DB  
                   l1362 06ED                     l1356 06E1                     l1278 0683  
                   l1358 06E7                     l1376 064D                     l1832 06F5  
                   STR_1 0009                     STR_2 001A                     u1044 0674  
                   u1045 0672                     u1054 0689                     u1055 0687  
                   u1065 05F4                     u2107 07DB                     u2117 0617  
                   u2127 063D                     u2057 0781                     u2067 0799  
                   u2077 07A6                     u2087 07B0                     u2097 07BB  
                   _main 0704                     btemp 007E                     start 0000  
            LCD_Goto@col 007B              LCD_Goto@row 0078                    ??_LCD 0078  
                  LCD@d4 0074                    LCD@d5 0075                    LCD@d6 0076  
                  LCD@d7 0077                    LCD@_p 0070                    LCD@en 0073  
                  LCD@rs 0072         __end_of_LCD_Goto 0704         __end_of_LCD_PutS 066A  
                  ?_main 0070                    _PORTD 0008                    _TRISD 0088  
                  __port 0020                    pclath 000A               __XTAL_FREQ 0028  
                  status 0003                    wtemp0 007E          __initialization 07E5  
           __end_of_main 0743              _EnablePulse 061D                   ??_main 007E  
      __end_of_LCD_Begin 07E5        __end_of_LCD_Clear 061D            LCD_Begin@cols 0070  
           LCD_PutS@_str 007A                   _LCD_D4 0025                   _LCD_D5 0024  
                 _LCD_D6 0023                   _LCD_D7 0022         __end_of_WritePin 0699  
                 _LCD_EN 0026                   _LCD_RS 0027  __end_of__initialization 07FC  
              ?_LCD_Goto 0078                ?_LCD_PutS 0070           __pcstackCOMMON 0070  
              LCD_PutS@i 0079             __pidataBANK0 05D9               __pbssBANK0 002C  
         LCD_Begin@lines 007A             WriteNibble@b 0075               ??_LCD_Goto 0079  
           WritePin@_pin 0073               ??_LCD_PutS 0078               WriteByte@b 0077  
             __pmaintext 0704            ??_WriteNibble 0075                ?_WritePin 0070  
      __end_of_WriteByte 0604               __stringtab 0003             ?_EnablePulse 0070  
             ??_WritePin 0071                  __ptext1 0641                  __ptext2 06CA  
                __ptext3 0743                  __ptext4 0604                  __ptext5 05F0  
                __ptext6 0699                  __ptext7 061D                  __ptext8 066A  
                __ptext9 05DD      __end_of_WriteNibble 06CA          __displaycontrol 002C  
              _LCD_Begin 0743                _LCD_Clear 0604     end_of_initialization 07FC  
             ?_LCD_Begin 007A               ?_LCD_Clear 0070              _WriteNibble 0699  
    start_initialization 07E5              __end_of_LCD 05F0              __pdataBANK0 0028  
              ___latbits 0002            __pcstackBANK0 002D              ??_LCD_Begin 007B  
            ??_LCD_Clear 0078                _WriteByte 05F0                __pnvBANK0 0020  
            WritePin@val 0070                __pstrings 0003               ?_WriteByte 0070  
               _LCD_Goto 06CA                 _LCD_PutS 0641   LCD_Begin@_function_set 002D  
            __stringbase 0008             ?_WriteNibble 0070       __end_of__stringtab 0009  
               _WritePin 066A              ??_WriteByte 0076                stringcode 0003  
          ??_EnablePulse 0074                 stringdir 0003                 stringtab 0003  
