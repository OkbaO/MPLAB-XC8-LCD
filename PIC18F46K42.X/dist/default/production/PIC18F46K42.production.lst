

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Feb 15 08:03:27 2024

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F46K42
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    37                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    38                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    39                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    40   000000                     
    41                           ; Generated 06/04/2022 GMT
    42                           ; 
    43                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution. Publication is not required when
    57                           ;        this file is used in an embedded application.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC18F46K42 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75   000000                     
    76                           	psect	idataBANK0
    77   001DC6                     __pidataBANK0:
    78                           	callstack 0
    79                           
    80                           ;initializer for __XTAL_FREQ
    81   001DC6  1200               	dw	4608
    82   001DC8  007A               	dw	122
    83                           
    84                           	psect	nvCOMRAM
    85   00005F                     __pnvCOMRAM:
    86                           	callstack 0
    87   00005F                     _LCD_RS:
    88                           	callstack 0
    89   00005F                     	ds	1
    90                           
    91                           	psect	nvBANK0
    92   000094                     __pnvBANK0:
    93                           	callstack 0
    94   000094                     __port:
    95                           	callstack 0
    96   000094                     	ds	2
    97   000096                     _LCD_D7:
    98                           	callstack 0
    99   000096                     	ds	1
   100   000097                     _LCD_D6:
   101                           	callstack 0
   102   000097                     	ds	1
   103   000098                     _LCD_D5:
   104                           	callstack 0
   105   000098                     	ds	1
   106   000099                     _LCD_D4:
   107                           	callstack 0
   108   000099                     	ds	1
   109   00009A                     _LCD_EN:
   110                           	callstack 0
   111   00009A                     	ds	1
   112   000000                     _OSCCON1	set	14809
   113   000000                     _OSCFRQ	set	14815
   114   000000                     _ANSELD	set	14960
   115   000000                     _TRISD	set	16325
   116   000000                     _ADRESL	set	16111
   117   000000                     _ADRESH	set	16112
   118   000000                     _ADPCH	set	16113
   119   000000                     _ADCON0bits	set	16120
   120   000000                     _LATD	set	16317
   121                           
   122                           	psect	smallconst
   123   001000                     __psmallconst:
   124                           	callstack 0
   125   001000  00                 	db	0
   126   001001                     STR_1:
   127   001001  50                 	db	80	;'P'
   128   001002  49                 	db	73	;'I'
   129   001003  43                 	db	67	;'C'
   130   001004  31                 	db	49	;'1'
   131   001005  38                 	db	56	;'8'
   132   001006  46                 	db	70	;'F'
   133   001007  34                 	db	52	;'4'
   134   001008  36                 	db	54	;'6'
   135   001009  4B                 	db	75	;'K'
   136   00100A  34                 	db	52	;'4'
   137   00100B  32                 	db	50	;'2'
   138   00100C  20                 	db	32
   139   00100D  4D                 	db	77	;'M'
   140   00100E  43                 	db	67	;'C'
   141   00100F  55                 	db	85	;'U'
   142   001010  20                 	db	32
   143   001011  2B                 	db	43
   144   001012  00                 	db	0
   145   001013                     STR_9:
   146   001013  50                 	db	80	;'P'
   147   001014  6F                 	db	111	;'o'
   148   001015  74                 	db	116	;'t'
   149   001016  65                 	db	101	;'e'
   150   001017  6E                 	db	110	;'n'
   151   001018  74                 	db	116	;'t'
   152   001019  69                 	db	105	;'i'
   153   00101A  6F                 	db	111	;'o'
   154   00101B  6D                 	db	109	;'m'
   155   00101C  65                 	db	101	;'e'
   156   00101D  74                 	db	116	;'t'
   157   00101E  65                 	db	101	;'e'
   158   00101F  72                 	db	114	;'r'
   159   001020  20                 	db	32
   160   001021  31                 	db	49	;'1'
   161   001022  3A                 	db	58	;':'
   162   001023  00                 	db	0
   163   001024                     STR_10:
   164   001024  50                 	db	80	;'P'
   165   001025  6F                 	db	111	;'o'
   166   001026  74                 	db	116	;'t'
   167   001027  65                 	db	101	;'e'
   168   001028  6E                 	db	110	;'n'
   169   001029  74                 	db	116	;'t'
   170   00102A  69                 	db	105	;'i'
   171   00102B  6F                 	db	111	;'o'
   172   00102C  6D                 	db	109	;'m'
   173   00102D  65                 	db	101	;'e'
   174   00102E  74                 	db	116	;'t'
   175   00102F  65                 	db	101	;'e'
   176   001030  72                 	db	114	;'r'
   177   001031  20                 	db	32
   178   001032  32                 	db	50	;'2'
   179   001033  3A                 	db	58	;':'
   180   001034  00                 	db	0
   181   001035                     STR_2:
   182   001035  32                 	db	50	;'2'
   183   001036  30                 	db	48	;'0'
   184   001037  78                 	db	120	;'x'
   185   001038  34                 	db	52	;'4'
   186   001039  20                 	db	32
   187   00103A  4C                 	db	76	;'L'
   188   00103B  43                 	db	67	;'C'
   189   00103C  44                 	db	68	;'D'
   190   00103D  20                 	db	32
   191   00103E  45                 	db	69	;'E'
   192   00103F  78                 	db	120	;'x'
   193   001040  61                 	db	97	;'a'
   194   001041  6D                 	db	109	;'m'
   195   001042  70                 	db	112	;'p'
   196   001043  6C                 	db	108	;'l'
   197   001044  65                 	db	101	;'e'
   198   001045  00                 	db	0
   199   001046                     STR_3:
   200   001046  4D                 	db	77	;'M'
   201   001047  69                 	db	105	;'i'
   202   001048  63                 	db	99	;'c'
   203   001049  72                 	db	114	;'r'
   204   00104A  6F                 	db	111	;'o'
   205   00104B  63                 	db	99	;'c'
   206   00104C  68                 	db	104	;'h'
   207   00104D  69                 	db	105	;'i'
   208   00104E  70                 	db	112	;'p'
   209   00104F  20                 	db	32
   210   001050  4D                 	db	77	;'M'
   211   001051  50                 	db	80	;'P'
   212   001052  4C                 	db	76	;'L'
   213   001053  41                 	db	65	;'A'
   214   001054  42                 	db	66	;'B'
   215   001055  00                 	db	0
   216   001056                     STR_4:
   217   001056  58                 	db	88	;'X'
   218   001057  43                 	db	67	;'C'
   219   001058  38                 	db	56	;'8'
   220   001059  20                 	db	32
   221   00105A  43                 	db	67	;'C'
   222   00105B  6F                 	db	111	;'o'
   223   00105C  6D                 	db	109	;'m'
   224   00105D  70                 	db	112	;'p'
   225   00105E  69                 	db	105	;'i'
   226   00105F  6C                 	db	108	;'l'
   227   001060  65                 	db	101	;'e'
   228   001061  72                 	db	114	;'r'
   229   001062  00                 	db	0
   230   001063                     STR_5:
   231   001063  4C                 	db	76	;'L'
   232   001064  49                 	db	73	;'I'
   233   001065  4E                 	db	78	;'N'
   234   001066  45                 	db	69	;'E'
   235   001067  20                 	db	32
   236   001068  31                 	db	49	;'1'
   237   001069  00                 	db	0
   238   00106A                     STR_6:
   239   00106A  4C                 	db	76	;'L'
   240   00106B  49                 	db	73	;'I'
   241   00106C  4E                 	db	78	;'N'
   242   00106D  45                 	db	69	;'E'
   243   00106E  20                 	db	32
   244   00106F  32                 	db	50	;'2'
   245   001070  00                 	db	0
   246   001071                     STR_7:
   247   001071  4C                 	db	76	;'L'
   248   001072  49                 	db	73	;'I'
   249   001073  4E                 	db	78	;'N'
   250   001074  45                 	db	69	;'E'
   251   001075  20                 	db	32
   252   001076  33                 	db	51	;'3'
   253   001077  00                 	db	0
   254   001078                     STR_8:
   255   001078  4C                 	db	76	;'L'
   256   001079  49                 	db	73	;'I'
   257   00107A  4E                 	db	78	;'N'
   258   00107B  45                 	db	69	;'E'
   259   00107C  20                 	db	32
   260   00107D  34                 	db	52	;'4'
   261   00107E  00                 	db	0
   262   00107F                     STR_11:
   263   00107F  25                 	db	37
   264   001080  75                 	db	117	;'u'
   265   001081  20                 	db	32
   266   001082  20                 	db	32
   267   001083  20                 	db	32
   268   001084  00                 	db	0
   269   001085  00                 	db	0	; dummy byte at the end
   270   000000                     
   271                           ; #config settings
   272                           
   273                           	psect	cinit
   274   001C90                     __pcinit:
   275                           	callstack 0
   276   001C90                     start_initialization:
   277                           	callstack 0
   278   001C90                     __initialization:
   279                           	callstack 0
   280                           
   281                           ; Initialize objects allocated to BANK0 (4 bytes)
   282                           ; load TBLPTR registers with __pidataBANK0
   283   001C90  0EC6               	movlw	low __pidataBANK0
   284   001C92  6EF6               	movwf	tblptrl,c
   285   001C94  0E1D               	movlw	high __pidataBANK0
   286   001C96  6EF7               	movwf	tblptrh,c
   287   001C98  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   288   001C9A  6EF8               	movwf	tblptru,c
   289   001C9C  EE00  F09B         	lfsr	0,__pdataBANK0
   290   001CA0  EE10 F004          	lfsr	1,4
   291   001CA4                     copy_data0:
   292   001CA4  0009               	tblrd		*+
   293   001CA6  006F FFD7 FFEE     	movff	tablat,postinc0
   294   001CAC  50E5               	movf	postdec1,w,c
   295   001CAE  50E1               	movf	fsr1l,w,c
   296   001CB0  E1F9               	bnz	copy_data0
   297                           
   298                           ; Clear objects allocated to BANK0 (38 bytes)
   299   001CB2  EE00  F060         	lfsr	0,__pbssBANK0
   300   001CB6  0E26               	movlw	38
   301   001CB8                     clear_0:
   302   001CB8  6AEE               	clrf	postinc0,c
   303   001CBA  06E8               	decf	wreg,f,c
   304   001CBC  E1FD               	bnz	clear_0
   305   001CBE                     end_of_initialization:
   306                           	callstack 0
   307   001CBE                     __end_of__initialization:
   308                           	callstack 0
   309   001CBE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   310   001CC0  6EF8               	movwf	tblptru,c
   311   001CC2  0100               	movlb	0
   312   001CC4  EF43  F008         	goto	_main	;jump to C main() function
   313                           
   314                           	psect	bssBANK0
   315   000060                     __pbssBANK0:
   316                           	callstack 0
   317   000060                     _width:
   318                           	callstack 0
   319   000060                     	ds	2
   320   000062                     _prec:
   321                           	callstack 0
   322   000062                     	ds	2
   323   000064                     _flags:
   324                           	callstack 0
   325   000064                     	ds	1
   326   000065                     __displaycontrol:
   327                           	callstack 0
   328   000065                     	ds	1
   329   000066                     _dbuf:
   330                           	callstack 0
   331   000066                     	ds	32
   332                           
   333                           	psect	dataBANK0
   334   00009B                     __pdataBANK0:
   335                           	callstack 0
   336   00009B                     __XTAL_FREQ:
   337                           	callstack 0
   338   00009B                     	ds	4
   339                           
   340                           	psect	cstackBANK0
   341   000086                     __pcstackBANK0:
   342                           	callstack 0
   343   000086                     vfprintf@cfmt:
   344                           	callstack 0
   345                           
   346                           ; 2 bytes @ 0x0
   347   000086                     	ds	2
   348   000088                     ?_printf:
   349                           	callstack 0
   350   000088                     printf@fmt:
   351                           	callstack 0
   352                           
   353                           ; 2 bytes @ 0x2
   354   000088                     	ds	4
   355   00008C                     printf@ap:
   356                           	callstack 0
   357                           
   358                           ; 2 bytes @ 0x6
   359   00008C                     	ds	2
   360   00008E                     ??_main:
   361                           
   362                           ; 1 bytes @ 0x8
   363   00008E                     	ds	2
   364   000090                     main@pot1:
   365                           	callstack 0
   366                           
   367                           ; 2 bytes @ 0xA
   368   000090                     	ds	2
   369   000092                     main@pot2:
   370                           	callstack 0
   371                           
   372                           ; 2 bytes @ 0xC
   373   000092                     	ds	2
   374                           
   375                           	psect	cstackCOMRAM
   376   000001                     __pcstackCOMRAM:
   377                           	callstack 0
   378   000001                     ?___lodiv:
   379                           	callstack 0
   380   000001                     ?___lomod:
   381                           	callstack 0
   382   000001                     WritePin@val:
   383                           	callstack 0
   384   000001                     LCD@_p:
   385                           	callstack 0
   386   000001                     ___lodiv@dividend:
   387                           	callstack 0
   388   000001                     ___lomod@dividend:
   389                           	callstack 0
   390                           
   391                           ; 8 bytes @ 0x0
   392   000001                     	ds	1
   393   000002                     ??_WritePin:
   394                           
   395                           ; 1 bytes @ 0x1
   396   000002                     	ds	1
   397   000003                     LCD@rs:
   398                           	callstack 0
   399                           
   400                           ; 1 bytes @ 0x2
   401   000003                     	ds	1
   402   000004                     LCD@en:
   403                           	callstack 0
   404                           
   405                           ; 1 bytes @ 0x3
   406   000004                     	ds	1
   407   000005                     LCD@d4:
   408                           	callstack 0
   409   000005                     WritePin@_pin:
   410                           	callstack 0
   411                           
   412                           ; 1 bytes @ 0x4
   413   000005                     	ds	1
   414   000006                     LCD@d5:
   415                           	callstack 0
   416   000006                     WriteNibble@b:
   417                           	callstack 0
   418                           
   419                           ; 1 bytes @ 0x5
   420   000006                     	ds	1
   421   000007                     LCD@d6:
   422                           	callstack 0
   423   000007                     WriteByte@b:
   424                           	callstack 0
   425                           
   426                           ; 1 bytes @ 0x6
   427   000007                     	ds	1
   428   000008                     ??_LCD_Clear:
   429   000008                     LCD@d7:
   430                           	callstack 0
   431   000008                     LCD_Goto@row:
   432                           	callstack 0
   433   000008                     LCD_PutC@c:
   434                           	callstack 0
   435   000008                     LCD_CursorBlink@__blink:
   436                           	callstack 0
   437   000008                     LCD_PutS@_str:
   438                           	callstack 0
   439                           
   440                           ; 2 bytes @ 0x7
   441   000008                     	ds	1
   442   000009                     ??_LCD_Goto:
   443   000009                     putch@c:
   444                           	callstack 0
   445   000009                     LCD_Begin@lines:
   446                           	callstack 0
   447   000009                     ___lodiv@divisor:
   448                           	callstack 0
   449   000009                     ___lomod@divisor:
   450                           	callstack 0
   451                           
   452                           ; 8 bytes @ 0x8
   453   000009                     	ds	1
   454   00000A                     ??_LCD_Begin:
   455   00000A                     ??_LCD_PutS:
   456   00000A                     fputc@c:
   457                           	callstack 0
   458                           
   459                           ; 2 bytes @ 0x9
   460   00000A                     	ds	1
   461   00000B                     LCD_Goto@col:
   462                           	callstack 0
   463                           
   464                           ; 1 bytes @ 0xA
   465   00000B                     	ds	1
   466   00000C                     LCD_Begin@_function_set:
   467                           	callstack 0
   468   00000C                     LCD_PutS@i:
   469                           	callstack 0
   470   00000C                     fputc@fp:
   471                           	callstack 0
   472                           
   473                           ; 2 bytes @ 0xB
   474   00000C                     	ds	2
   475   00000E                     ??_fputc:
   476                           
   477                           ; 1 bytes @ 0xD
   478   00000E                     	ds	3
   479   000011                     ___lomod@counter:
   480                           	callstack 0
   481   000011                     ___lodiv@quotient:
   482                           	callstack 0
   483                           
   484                           ; 8 bytes @ 0x10
   485   000011                     	ds	2
   486   000013                     fputs@s:
   487                           	callstack 0
   488                           
   489                           ; 2 bytes @ 0x12
   490   000013                     	ds	2
   491   000015                     fputs@fp:
   492                           	callstack 0
   493                           
   494                           ; 2 bytes @ 0x14
   495   000015                     	ds	2
   496   000017                     fputs@c:
   497                           	callstack 0
   498                           
   499                           ; 1 bytes @ 0x16
   500   000017                     	ds	1
   501   000018                     fputs@i:
   502                           	callstack 0
   503                           
   504                           ; 2 bytes @ 0x17
   505   000018                     	ds	1
   506   000019                     ___lodiv@counter:
   507                           	callstack 0
   508                           
   509                           ; 1 bytes @ 0x18
   510   000019                     	ds	1
   511   00001A                     pad@fp:
   512                           	callstack 0
   513                           
   514                           ; 2 bytes @ 0x19
   515   00001A                     	ds	2
   516   00001C                     pad@buf:
   517                           	callstack 0
   518                           
   519                           ; 2 bytes @ 0x1B
   520   00001C                     	ds	2
   521   00001E                     pad@p:
   522                           	callstack 0
   523                           
   524                           ; 2 bytes @ 0x1D
   525   00001E                     	ds	2
   526   000020                     ??_pad:
   527                           
   528                           ; 1 bytes @ 0x1F
   529   000020                     	ds	1
   530   000021                     pad@i:
   531                           	callstack 0
   532                           
   533                           ; 2 bytes @ 0x20
   534   000021                     	ds	2
   535   000023                     pad@w:
   536                           	callstack 0
   537                           
   538                           ; 2 bytes @ 0x22
   539   000023                     	ds	2
   540   000025                     utoa@fp:
   541                           	callstack 0
   542                           
   543                           ; 2 bytes @ 0x24
   544   000025                     	ds	2
   545   000027                     utoa@d:
   546                           	callstack 0
   547                           
   548                           ; 8 bytes @ 0x26
   549   000027                     	ds	8
   550   00002F                     ??_utoa:
   551                           
   552                           ; 1 bytes @ 0x2E
   553   00002F                     	ds	8
   554   000037                     utoa@w:
   555                           	callstack 0
   556                           
   557                           ; 2 bytes @ 0x36
   558   000037                     	ds	2
   559   000039                     utoa@p:
   560                           	callstack 0
   561                           
   562                           ; 2 bytes @ 0x38
   563   000039                     	ds	2
   564   00003B                     utoa@n:
   565                           	callstack 0
   566                           
   567                           ; 8 bytes @ 0x3A
   568   00003B                     	ds	8
   569   000043                     utoa@i:
   570                           	callstack 0
   571                           
   572                           ; 2 bytes @ 0x42
   573   000043                     	ds	2
   574   000045                     vfpfcnvrt@fp:
   575                           	callstack 0
   576                           
   577                           ; 2 bytes @ 0x44
   578   000045                     	ds	2
   579   000047                     vfpfcnvrt@fmt:
   580                           	callstack 0
   581                           
   582                           ; 2 bytes @ 0x46
   583   000047                     	ds	2
   584   000049                     vfpfcnvrt@ap:
   585                           	callstack 0
   586                           
   587                           ; 2 bytes @ 0x48
   588   000049                     	ds	2
   589   00004B                     ??_vfpfcnvrt:
   590                           
   591                           ; 1 bytes @ 0x4A
   592   00004B                     	ds	4
   593   00004F                     vfpfcnvrt@convarg:
   594                           	callstack 0
   595                           
   596                           ; 8 bytes @ 0x4E
   597   00004F                     	ds	8
   598   000057                     vfpfcnvrt@cp:
   599                           	callstack 0
   600                           
   601                           ; 2 bytes @ 0x56
   602   000057                     	ds	2
   603   000059                     ?_vfprintf:
   604                           	callstack 0
   605   000059                     vfprintf@fp:
   606                           	callstack 0
   607                           
   608                           ; 2 bytes @ 0x58
   609   000059                     	ds	2
   610   00005B                     vfprintf@fmt:
   611                           	callstack 0
   612                           
   613                           ; 2 bytes @ 0x5A
   614   00005B                     	ds	2
   615   00005D                     vfprintf@ap:
   616                           	callstack 0
   617                           
   618                           ; 2 bytes @ 0x5C
   619   00005D                     	ds	2
   620   00005F                     
   621                           ; 1 bytes @ 0x5E
   622 ;;
   623 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   624 ;;
   625 ;; *************** function _main *****************
   626 ;; Defined at:
   627 ;;		line 30 in file "main.c"
   628 ;; Parameters:    Size  Location     Type
   629 ;;		None
   630 ;; Auto vars:     Size  Location     Type
   631 ;;  pot2            2   12[BANK0 ] unsigned short 
   632 ;;  pot1            2   10[BANK0 ] unsigned short 
   633 ;; Return value:  Size  Location     Type
   634 ;;                  1    wreg      void 
   635 ;; Registers used:
   636 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   637 ;; Tracked objects:
   638 ;;		On entry : 0/0
   639 ;;		On exit  : 0/0
   640 ;;		Unchanged: 0/0
   641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   643 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   644 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   645 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   646 ;;Total ram usage:        6 bytes
   647 ;; Hardware stack levels required when called: 13
   648 ;; This function calls:
   649 ;;		_LCD
   650 ;;		_LCD_Begin
   651 ;;		_LCD_Clear
   652 ;;		_LCD_CursorBlink
   653 ;;		_LCD_Goto
   654 ;;		_LCD_PutS
   655 ;;		_printf
   656 ;; This function is called by:
   657 ;;		Startup code after reset
   658 ;; This function uses a non-reentrant model
   659 ;;
   660                           
   661                           	psect	text0
   662   001086                     __ptext0:
   663                           	callstack 0
   664   001086                     _main:
   665                           	callstack 18
   666   001086                     
   667                           ;main.c: 32:     OSCCON1 = 0x60;
   668   001086  0E60               	movlw	96
   669   001088  0139               	movlb	57	; () banked
   670   00108A  6FD9               	movwf	217,b	;volatile
   671                           
   672                           ;main.c: 33:     OSCFRQ = 0x03;
   673   00108C  0E03               	movlw	3
   674   00108E  6FDF               	movwf	223,b	;volatile
   675                           
   676                           ;main.c: 35:     TRISD = 0;
   677   001090  0E00               	movlw	0
   678   001092  6EC5               	movwf	197,c	;volatile
   679                           
   680                           ;main.c: 36:     ANSELD = 0;
   681   001094  0E00               	movlw	0
   682   001096  013A               	movlb	58	; () banked
   683   001098  6F70               	movwf	112,b	;volatile
   684   00109A                     
   685                           ; BSR set to: 58
   686                           ;main.c: 39:     LCD(&LATD, 0, 1, 2, 3, 4, 5);
   687   00109A  0EBD               	movlw	189
   688   00109C  6E01               	movwf	LCD@_p^0,c
   689   00109E  0E3F               	movlw	63
   690   0010A0  6E02               	movwf	(LCD@_p+1)^0,c
   691   0010A2  0E00               	movlw	0
   692   0010A4  6E03               	movwf	LCD@rs^0,c
   693   0010A6  0E01               	movlw	1
   694   0010A8  6E04               	movwf	LCD@en^0,c
   695   0010AA  0E02               	movlw	2
   696   0010AC  6E05               	movwf	LCD@d4^0,c
   697   0010AE  0E03               	movlw	3
   698   0010B0  6E06               	movwf	LCD@d5^0,c
   699   0010B2  0E04               	movlw	4
   700   0010B4  6E07               	movwf	LCD@d6^0,c
   701   0010B6  0E05               	movlw	5
   702   0010B8  6E08               	movwf	LCD@d7^0,c
   703   0010BA  ECBA  F00E         	call	_LCD	;wreg free
   704   0010BE                     
   705                           ;main.c: 42:     LCD_Begin(20, 4);
   706   0010BE  0E04               	movlw	4
   707   0010C0  6E09               	movwf	LCD_Begin@lines^0,c
   708   0010C2  0E14               	movlw	20
   709   0010C4  ECD7  F00B         	call	_LCD_Begin
   710   0010C8                     
   711                           ;main.c: 44:     LCD_CursorBlink(1);
   712   0010C8  0E01               	movlw	1
   713   0010CA  EC7D  F00E         	call	_LCD_CursorBlink
   714   0010CE                     
   715                           ;main.c: 47:     LCD_Goto(1, 1);
   716   0010CE  0E01               	movlw	1
   717   0010D0  6E08               	movwf	LCD_Goto@row^0,c
   718   0010D2  0E01               	movlw	1
   719   0010D4  ECFA  F00C         	call	_LCD_Goto
   720   0010D8                     
   721                           ;main.c: 48:     LCD_PutS("PIC18F46K42 MCU +");
   722   0010D8  0E01               	movlw	low STR_1
   723   0010DA  6E08               	movwf	LCD_PutS@_str^0,c
   724   0010DC  0E10               	movlw	high STR_1
   725   0010DE  6E09               	movwf	(LCD_PutS@_str+1)^0,c
   726   0010E0  ECAC  F00D         	call	_LCD_PutS	;wreg free
   727   0010E4                     
   728                           ;main.c: 49:     _delay((unsigned long)((2000)*(_XTAL_FREQ/4000.0)));
   729   0010E4  0E15               	movlw	21
   730   0010E6  0100               	movlb	0	; () banked
   731   0010E8  6F8F               	movwf	(??_main+1)& (0+255),b
   732   0010EA  0E4B               	movlw	75
   733   0010EC  6F8E               	movwf	??_main& (0+255),b
   734   0010EE  0EBE               	movlw	190
   735   0010F0                     u1817:
   736   0010F0  2EE8               	decfsz	wreg,f,c
   737   0010F2  D7FE               	bra	u1817
   738   0010F4  2F8E               	decfsz	??_main& (0+255),f,b
   739   0010F6  D7FC               	bra	u1817
   740   0010F8  2F8F               	decfsz	(??_main+1)& (0+255),f,b
   741   0010FA  D7FA               	bra	u1817
   742   0010FC  F000               	nop	
   743   0010FE                     
   744                           ;main.c: 50:     LCD_Goto(1, 2);
   745   0010FE  0E02               	movlw	2
   746   001100  6E08               	movwf	LCD_Goto@row^0,c
   747   001102  0E01               	movlw	1
   748   001104  ECFA  F00C         	call	_LCD_Goto
   749   001108                     
   750                           ;main.c: 51:     LCD_PutS("20x4 LCD Example");
   751   001108  0E35               	movlw	low STR_2
   752   00110A  6E08               	movwf	LCD_PutS@_str^0,c
   753   00110C  0E10               	movlw	high STR_2
   754   00110E  6E09               	movwf	(LCD_PutS@_str+1)^0,c
   755   001110  ECAC  F00D         	call	_LCD_PutS	;wreg free
   756   001114                     
   757                           ;main.c: 52:     _delay((unsigned long)((2000)*(_XTAL_FREQ/4000.0)));
   758   001114  0E15               	movlw	21
   759   001116  0100               	movlb	0	; () banked
   760   001118  6F8F               	movwf	(??_main+1)& (0+255),b
   761   00111A  0E4B               	movlw	75
   762   00111C  6F8E               	movwf	??_main& (0+255),b
   763   00111E  0EBE               	movlw	190
   764   001120                     u1827:
   765   001120  2EE8               	decfsz	wreg,f,c
   766   001122  D7FE               	bra	u1827
   767   001124  2F8E               	decfsz	??_main& (0+255),f,b
   768   001126  D7FC               	bra	u1827
   769   001128  2F8F               	decfsz	(??_main+1)& (0+255),f,b
   770   00112A  D7FA               	bra	u1827
   771   00112C  F000               	nop	
   772   00112E                     
   773                           ;main.c: 53:     LCD_Goto(1, 3);
   774   00112E  0E03               	movlw	3
   775   001130  6E08               	movwf	LCD_Goto@row^0,c
   776   001132  0E01               	movlw	1
   777   001134  ECFA  F00C         	call	_LCD_Goto
   778   001138                     
   779                           ;main.c: 54:     LCD_PutS("Microchip MPLAB");
   780   001138  0E46               	movlw	low STR_3
   781   00113A  6E08               	movwf	LCD_PutS@_str^0,c
   782   00113C  0E10               	movlw	high STR_3
   783   00113E  6E09               	movwf	(LCD_PutS@_str+1)^0,c
   784   001140  ECAC  F00D         	call	_LCD_PutS	;wreg free
   785   001144                     
   786                           ;main.c: 55:     _delay((unsigned long)((2000)*(_XTAL_FREQ/4000.0)));
   787   001144  0E15               	movlw	21
   788   001146  0100               	movlb	0	; () banked
   789   001148  6F8F               	movwf	(??_main+1)& (0+255),b
   790   00114A  0E4B               	movlw	75
   791   00114C  6F8E               	movwf	??_main& (0+255),b
   792   00114E  0EBE               	movlw	190
   793   001150                     u1837:
   794   001150  2EE8               	decfsz	wreg,f,c
   795   001152  D7FE               	bra	u1837
   796   001154  2F8E               	decfsz	??_main& (0+255),f,b
   797   001156  D7FC               	bra	u1837
   798   001158  2F8F               	decfsz	(??_main+1)& (0+255),f,b
   799   00115A  D7FA               	bra	u1837
   800   00115C  F000               	nop	
   801   00115E                     
   802                           ;main.c: 56:     LCD_Goto(1, 4);
   803   00115E  0E04               	movlw	4
   804   001160  6E08               	movwf	LCD_Goto@row^0,c
   805   001162  0E01               	movlw	1
   806   001164  ECFA  F00C         	call	_LCD_Goto
   807   001168                     
   808                           ;main.c: 57:     LCD_PutS("XC8 Compiler");
   809   001168  0E56               	movlw	low STR_4
   810   00116A  6E08               	movwf	LCD_PutS@_str^0,c
   811   00116C  0E10               	movlw	high STR_4
   812   00116E  6E09               	movwf	(LCD_PutS@_str+1)^0,c
   813   001170  ECAC  F00D         	call	_LCD_PutS	;wreg free
   814   001174                     
   815                           ;main.c: 59:     _delay((unsigned long)((5000)*(_XTAL_FREQ/4000.0)));
   816   001174  0E33               	movlw	51
   817   001176  0100               	movlb	0	; () banked
   818   001178  6F8F               	movwf	(??_main+1)& (0+255),b
   819   00117A  0EBB               	movlw	187
   820   00117C  6F8E               	movwf	??_main& (0+255),b
   821   00117E  0EDF               	movlw	223
   822   001180                     u1847:
   823   001180  2EE8               	decfsz	wreg,f,c
   824   001182  D7FE               	bra	u1847
   825   001184  2F8E               	decfsz	??_main& (0+255),f,b
   826   001186  D7FC               	bra	u1847
   827   001188  2F8F               	decfsz	(??_main+1)& (0+255),f,b
   828   00118A  D7FA               	bra	u1847
   829   00118C  D000               	nop2	
   830   00118E                     
   831                           ;main.c: 60:     LCD_Clear();
   832   00118E  ECA9  F00E         	call	_LCD_Clear	;wreg free
   833   001192                     
   834                           ;main.c: 62:     LCD_Goto(7, 1);
   835   001192  0E01               	movlw	1
   836   001194  6E08               	movwf	LCD_Goto@row^0,c
   837   001196  0E07               	movlw	7
   838   001198  ECFA  F00C         	call	_LCD_Goto
   839   00119C                     
   840                           ;main.c: 63:     LCD_PutS("LINE 1");
   841   00119C  0E63               	movlw	low STR_5
   842   00119E  6E08               	movwf	LCD_PutS@_str^0,c
   843   0011A0  0E10               	movlw	high STR_5
   844   0011A2  6E09               	movwf	(LCD_PutS@_str+1)^0,c
   845   0011A4  ECAC  F00D         	call	_LCD_PutS	;wreg free
   846   0011A8                     
   847                           ;main.c: 64:     _delay((unsigned long)((2000)*(_XTAL_FREQ/4000.0)));
   848   0011A8  0E15               	movlw	21
   849   0011AA  0100               	movlb	0	; () banked
   850   0011AC  6F8F               	movwf	(??_main+1)& (0+255),b
   851   0011AE  0E4B               	movlw	75
   852   0011B0  6F8E               	movwf	??_main& (0+255),b
   853   0011B2  0EBE               	movlw	190
   854   0011B4                     u1857:
   855   0011B4  2EE8               	decfsz	wreg,f,c
   856   0011B6  D7FE               	bra	u1857
   857   0011B8  2F8E               	decfsz	??_main& (0+255),f,b
   858   0011BA  D7FC               	bra	u1857
   859   0011BC  2F8F               	decfsz	(??_main+1)& (0+255),f,b
   860   0011BE  D7FA               	bra	u1857
   861   0011C0  F000               	nop	
   862   0011C2                     
   863                           ;main.c: 65:     LCD_Goto(7, 2);
   864   0011C2  0E02               	movlw	2
   865   0011C4  6E08               	movwf	LCD_Goto@row^0,c
   866   0011C6  0E07               	movlw	7
   867   0011C8  ECFA  F00C         	call	_LCD_Goto
   868   0011CC                     
   869                           ;main.c: 66:     LCD_PutS("LINE 2");
   870   0011CC  0E6A               	movlw	low STR_6
   871   0011CE  6E08               	movwf	LCD_PutS@_str^0,c
   872   0011D0  0E10               	movlw	high STR_6
   873   0011D2  6E09               	movwf	(LCD_PutS@_str+1)^0,c
   874   0011D4  ECAC  F00D         	call	_LCD_PutS	;wreg free
   875   0011D8                     
   876                           ;main.c: 67:     _delay((unsigned long)((2000)*(_XTAL_FREQ/4000.0)));
   877   0011D8  0E15               	movlw	21
   878   0011DA  0100               	movlb	0	; () banked
   879   0011DC  6F8F               	movwf	(??_main+1)& (0+255),b
   880   0011DE  0E4B               	movlw	75
   881   0011E0  6F8E               	movwf	??_main& (0+255),b
   882   0011E2  0EBE               	movlw	190
   883   0011E4                     u1867:
   884   0011E4  2EE8               	decfsz	wreg,f,c
   885   0011E6  D7FE               	bra	u1867
   886   0011E8  2F8E               	decfsz	??_main& (0+255),f,b
   887   0011EA  D7FC               	bra	u1867
   888   0011EC  2F8F               	decfsz	(??_main+1)& (0+255),f,b
   889   0011EE  D7FA               	bra	u1867
   890   0011F0  F000               	nop	
   891   0011F2                     
   892                           ;main.c: 68:     LCD_Goto(7, 3);
   893   0011F2  0E03               	movlw	3
   894   0011F4  6E08               	movwf	LCD_Goto@row^0,c
   895   0011F6  0E07               	movlw	7
   896   0011F8  ECFA  F00C         	call	_LCD_Goto
   897   0011FC                     
   898                           ;main.c: 69:     LCD_PutS("LINE 3");
   899   0011FC  0E71               	movlw	low STR_7
   900   0011FE  6E08               	movwf	LCD_PutS@_str^0,c
   901   001200  0E10               	movlw	high STR_7
   902   001202  6E09               	movwf	(LCD_PutS@_str+1)^0,c
   903   001204  ECAC  F00D         	call	_LCD_PutS	;wreg free
   904   001208                     
   905                           ;main.c: 70:     _delay((unsigned long)((2000)*(_XTAL_FREQ/4000.0)));
   906   001208  0E15               	movlw	21
   907   00120A  0100               	movlb	0	; () banked
   908   00120C  6F8F               	movwf	(??_main+1)& (0+255),b
   909   00120E  0E4B               	movlw	75
   910   001210  6F8E               	movwf	??_main& (0+255),b
   911   001212  0EBE               	movlw	190
   912   001214                     u1877:
   913   001214  2EE8               	decfsz	wreg,f,c
   914   001216  D7FE               	bra	u1877
   915   001218  2F8E               	decfsz	??_main& (0+255),f,b
   916   00121A  D7FC               	bra	u1877
   917   00121C  2F8F               	decfsz	(??_main+1)& (0+255),f,b
   918   00121E  D7FA               	bra	u1877
   919   001220  F000               	nop	
   920   001222                     
   921                           ;main.c: 71:     LCD_Goto(7, 4);
   922   001222  0E04               	movlw	4
   923   001224  6E08               	movwf	LCD_Goto@row^0,c
   924   001226  0E07               	movlw	7
   925   001228  ECFA  F00C         	call	_LCD_Goto
   926   00122C                     
   927                           ;main.c: 72:     LCD_PutS("LINE 4");
   928   00122C  0E78               	movlw	low STR_8
   929   00122E  6E08               	movwf	LCD_PutS@_str^0,c
   930   001230  0E10               	movlw	high STR_8
   931   001232  6E09               	movwf	(LCD_PutS@_str+1)^0,c
   932   001234  ECAC  F00D         	call	_LCD_PutS	;wreg free
   933   001238                     
   934                           ;main.c: 74:     _delay((unsigned long)((5000)*(_XTAL_FREQ/4000.0)));
   935   001238  0E33               	movlw	51
   936   00123A  0100               	movlb	0	; () banked
   937   00123C  6F8F               	movwf	(??_main+1)& (0+255),b
   938   00123E  0EBB               	movlw	187
   939   001240  6F8E               	movwf	??_main& (0+255),b
   940   001242  0EDF               	movlw	223
   941   001244                     u1887:
   942   001244  2EE8               	decfsz	wreg,f,c
   943   001246  D7FE               	bra	u1887
   944   001248  2F8E               	decfsz	??_main& (0+255),f,b
   945   00124A  D7FC               	bra	u1887
   946   00124C  2F8F               	decfsz	(??_main+1)& (0+255),f,b
   947   00124E  D7FA               	bra	u1887
   948   001250  D000               	nop2	
   949   001252                     
   950                           ;main.c: 75:     LCD_CursorBlink(0);
   951   001252  0E00               	movlw	0
   952   001254  EC7D  F00E         	call	_LCD_CursorBlink
   953   001258                     
   954                           ;main.c: 76:     LCD_Clear();
   955   001258  ECA9  F00E         	call	_LCD_Clear	;wreg free
   956   00125C                     
   957                           ;main.c: 79:     ADCON0bits.FM = 1;
   958   00125C  013E               	movlb	62	; () banked
   959   00125E  51F8               	movf	248,w,b	;volatile
   960   001260  0BF3               	andlw	-13
   961   001262  0904               	iorlw	4
   962   001264  6FF8               	movwf	248,b	;volatile
   963   001266                     
   964                           ; BSR set to: 62
   965                           ;main.c: 80:     ADCON0bits.CS = 1;
   966   001266  89F8               	bsf	248,4,b	;volatile
   967   001268                     
   968                           ; BSR set to: 62
   969                           ;main.c: 81:     ADCON0bits.ON = 1;
   970   001268  8FF8               	bsf	248,7,b	;volatile
   971   00126A                     
   972                           ; BSR set to: 62
   973                           ;main.c: 83:     uint16_t pot1, pot2;;main.c: 84:     LCD_Goto(1, 1);
   974   00126A  0E01               	movlw	1
   975   00126C  6E08               	movwf	LCD_Goto@row^0,c
   976   00126E  0E01               	movlw	1
   977   001270  ECFA  F00C         	call	_LCD_Goto
   978   001274                     
   979                           ;main.c: 85:     LCD_PutS("Potentiometer 1:");
   980   001274  0E13               	movlw	low STR_9
   981   001276  6E08               	movwf	LCD_PutS@_str^0,c
   982   001278  0E10               	movlw	high STR_9
   983   00127A  6E09               	movwf	(LCD_PutS@_str+1)^0,c
   984   00127C  ECAC  F00D         	call	_LCD_PutS	;wreg free
   985   001280                     
   986                           ;main.c: 86:     LCD_Goto(1, 3);
   987   001280  0E03               	movlw	3
   988   001282  6E08               	movwf	LCD_Goto@row^0,c
   989   001284  0E01               	movlw	1
   990   001286  ECFA  F00C         	call	_LCD_Goto
   991   00128A                     
   992                           ;main.c: 87:     LCD_PutS("Potentiometer 2:");
   993   00128A  0E24               	movlw	low STR_10
   994   00128C  6E08               	movwf	LCD_PutS@_str^0,c
   995   00128E  0E10               	movlw	high STR_10
   996   001290  6E09               	movwf	(LCD_PutS@_str+1)^0,c
   997   001292  ECAC  F00D         	call	_LCD_PutS	;wreg free
   998   001296                     l2078:
   999                           
  1000                           ;main.c: 90:     {;main.c: 92:         ADPCH = 0x00;
  1001   001296  0E00               	movlw	0
  1002   001298  013E               	movlb	62	; () banked
  1003   00129A  6FF1               	movwf	241,b	;volatile
  1004   00129C                     
  1005                           ; BSR set to: 62
  1006                           ;main.c: 93:         _delay((unsigned long)((10)*(_XTAL_FREQ/4000000.0)));
  1007   00129C  0E06               	movlw	6
  1008   00129E                     u1897:
  1009   00129E  2EE8               	decfsz	wreg,f,c
  1010   0012A0  D7FE               	bra	u1897
  1011   0012A2  D000               	nop2	
  1012   0012A4                     
  1013                           ;main.c: 94:         ADCON0bits.GO = 1;
  1014   0012A4  013E               	movlb	62	; () banked
  1015   0012A6  81F8               	bsf	248,0,b	;volatile
  1016   0012A8                     l47:
  1017                           
  1018                           ; BSR set to: 62
  1019   0012A8  B1F8               	btfsc	248,0,b	;volatile
  1020   0012AA  EF59  F009         	goto	u1181
  1021   0012AE  EF5B  F009         	goto	u1180
  1022   0012B2                     u1181:
  1023   0012B2  EF54  F009         	goto	l47
  1024   0012B6                     u1180:
  1025   0012B6                     
  1026                           ; BSR set to: 62
  1027                           ;main.c: 98:         pot1 = ((uint16_t)ADRESH << 8) | ADRESL;
  1028   0012B6  51F0               	movf	240,w,b	;volatile
  1029   0012B8  0100               	movlb	0	; () banked
  1030   0012BA  6F8E               	movwf	??_main& (0+255),b
  1031   0012BC  013E               	movlb	62	; () banked
  1032   0012BE  51EF               	movf	239,w,b	;volatile
  1033   0012C0  0100               	movlb	0	; () banked
  1034   0012C2  6F90               	movwf	main@pot1& (0+255),b
  1035   0012C4  C08E  F091         	movff	??_main,main@pot1+1
  1036                           
  1037                           ;main.c: 101:         ADPCH = 0x01;
  1038   0012C8  0E01               	movlw	1
  1039   0012CA  013E               	movlb	62	; () banked
  1040   0012CC  6FF1               	movwf	241,b	;volatile
  1041   0012CE                     
  1042                           ; BSR set to: 62
  1043                           ;main.c: 102:         _delay((unsigned long)((10)*(_XTAL_FREQ/4000000.0)));
  1044   0012CE  0E06               	movlw	6
  1045   0012D0                     u1907:
  1046   0012D0  2EE8               	decfsz	wreg,f,c
  1047   0012D2  D7FE               	bra	u1907
  1048   0012D4  D000               	nop2	
  1049   0012D6                     
  1050                           ;main.c: 103:         ADCON0bits.GO = 1;
  1051   0012D6  013E               	movlb	62	; () banked
  1052   0012D8  81F8               	bsf	248,0,b	;volatile
  1053   0012DA                     l50:
  1054                           
  1055                           ; BSR set to: 62
  1056   0012DA  B1F8               	btfsc	248,0,b	;volatile
  1057   0012DC  EF72  F009         	goto	u1191
  1058   0012E0  EF74  F009         	goto	u1190
  1059   0012E4                     u1191:
  1060   0012E4  EF6D  F009         	goto	l50
  1061   0012E8                     u1190:
  1062   0012E8                     
  1063                           ; BSR set to: 62
  1064                           ;main.c: 107:         pot2 = ((uint16_t)ADRESH << 8) | ADRESL;
  1065   0012E8  51F0               	movf	240,w,b	;volatile
  1066   0012EA  0100               	movlb	0	; () banked
  1067   0012EC  6F8E               	movwf	??_main& (0+255),b
  1068   0012EE  013E               	movlb	62	; () banked
  1069   0012F0  51EF               	movf	239,w,b	;volatile
  1070   0012F2  0100               	movlb	0	; () banked
  1071   0012F4  6F92               	movwf	main@pot2& (0+255),b
  1072   0012F6  C08E  F093         	movff	??_main,main@pot2+1
  1073   0012FA                     
  1074                           ; BSR set to: 0
  1075                           ;main.c: 110:         LCD_Goto(1, 2);
  1076   0012FA  0E02               	movlw	2
  1077   0012FC  6E08               	movwf	LCD_Goto@row^0,c
  1078   0012FE  0E01               	movlw	1
  1079   001300  ECFA  F00C         	call	_LCD_Goto
  1080   001304                     
  1081                           ;main.c: 111:         printf("%u   ", pot1);
  1082   001304  0E7F               	movlw	low STR_11
  1083   001306  0100               	movlb	0	; () banked
  1084   001308  6F88               	movwf	printf@fmt& (0+255),b
  1085   00130A  0E10               	movlw	high STR_11
  1086   00130C  6F89               	movwf	(printf@fmt+1)& (0+255),b
  1087   00130E  C090  F08A         	movff	main@pot1,?_printf+2
  1088   001312  C091  F08B         	movff	main@pot1+1,?_printf+3
  1089   001316  EC95  F00E         	call	_printf	;wreg free
  1090   00131A                     
  1091                           ;main.c: 112:         LCD_Goto(1, 4);
  1092   00131A  0E04               	movlw	4
  1093   00131C  6E08               	movwf	LCD_Goto@row^0,c
  1094   00131E  0E01               	movlw	1
  1095   001320  ECFA  F00C         	call	_LCD_Goto
  1096   001324                     
  1097                           ;main.c: 113:         printf("%u   ", pot2);
  1098   001324  0E7F               	movlw	low STR_11
  1099   001326  0100               	movlb	0	; () banked
  1100   001328  6F88               	movwf	printf@fmt& (0+255),b
  1101   00132A  0E10               	movlw	high STR_11
  1102   00132C  6F89               	movwf	(printf@fmt+1)& (0+255),b
  1103   00132E  C092  F08A         	movff	main@pot2,?_printf+2
  1104   001332  C093  F08B         	movff	main@pot2+1,?_printf+3
  1105   001336  EC95  F00E         	call	_printf	;wreg free
  1106   00133A                     
  1107                           ;main.c: 115:         _delay((unsigned long)((400)*(_XTAL_FREQ/4000.0)));
  1108   00133A  0E05               	movlw	5
  1109   00133C  0100               	movlb	0	; () banked
  1110   00133E  6F8F               	movwf	(??_main+1)& (0+255),b
  1111   001340  0E0F               	movlw	15
  1112   001342  6F8E               	movwf	??_main& (0+255),b
  1113   001344  0EF1               	movlw	241
  1114   001346                     u1917:
  1115   001346  2EE8               	decfsz	wreg,f,c
  1116   001348  D7FE               	bra	u1917
  1117   00134A  2F8E               	decfsz	??_main& (0+255),f,b
  1118   00134C  D7FC               	bra	u1917
  1119   00134E  2F8F               	decfsz	(??_main+1)& (0+255),f,b
  1120   001350  D7FA               	bra	u1917
  1121   001352  EF4B  F009         	goto	l2078
  1122   001356  EFFE  F07F         	goto	start
  1123   00135A                     __end_of_main:
  1124                           	callstack 0
  1125                           
  1126 ;; *************** function _printf *****************
  1127 ;; Defined at:
  1128 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\printf.c"
  1129 ;; Parameters:    Size  Location     Type
  1130 ;;  fmt             2    2[BANK0 ] PTR const unsigned char 
  1131 ;;		 -> STR_12(6), STR_11(6), 
  1132 ;; Auto vars:     Size  Location     Type
  1133 ;;  ap              2    6[BANK0 ] PTR void [1]
  1134 ;;		 -> ?_printf(2), 
  1135 ;;  ret             2    0        int 
  1136 ;; Return value:  Size  Location     Type
  1137 ;;                  2    2[BANK0 ] int 
  1138 ;; Registers used:
  1139 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1140 ;; Tracked objects:
  1141 ;;		On entry : 0/0
  1142 ;;		On exit  : 0/0
  1143 ;;		Unchanged: 0/0
  1144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1145 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1146 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1148 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1149 ;;Total ram usage:        6 bytes
  1150 ;; Hardware stack levels used: 1
  1151 ;; Hardware stack levels required when called: 12
  1152 ;; This function calls:
  1153 ;;		_vfprintf
  1154 ;; This function is called by:
  1155 ;;		_main
  1156 ;; This function uses a non-reentrant model
  1157 ;;
  1158                           
  1159                           	psect	text1
  1160   001D2A                     __ptext1:
  1161                           	callstack 0
  1162   001D2A                     _printf:
  1163                           	callstack 18
  1164   001D2A  0E8A               	movlw	low (?_printf+2)
  1165   001D2C  0100               	movlb	0	; () banked
  1166   001D2E  6F8C               	movwf	printf@ap& (0+255),b
  1167   001D30  0E00               	movlw	high (?_printf+2)
  1168   001D32  6F8D               	movwf	(printf@ap+1)& (0+255),b
  1169   001D34                     
  1170                           ; BSR set to: 0
  1171   001D34  0E00               	movlw	0
  1172   001D36  6E59               	movwf	vfprintf@fp^0,c
  1173   001D38  0E00               	movlw	0
  1174   001D3A  6E5A               	movwf	(vfprintf@fp+1)^0,c
  1175   001D3C  C088  F05B         	movff	printf@fmt,vfprintf@fmt
  1176   001D40  C089  F05C         	movff	printf@fmt+1,vfprintf@fmt+1
  1177   001D44  0E8C               	movlw	low printf@ap
  1178   001D46  6E5D               	movwf	vfprintf@ap^0,c
  1179   001D48  0E00               	movlw	high printf@ap
  1180   001D4A  6E5E               	movwf	(vfprintf@ap+1)^0,c
  1181   001D4C  ECDD  F00D         	call	_vfprintf	;wreg free
  1182   001D50  0012               	return		;funcret
  1183   001D52                     __end_of_printf:
  1184                           	callstack 0
  1185                           
  1186 ;; *************** function _vfprintf *****************
  1187 ;; Defined at:
  1188 ;;		line 1520 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1189 ;; Parameters:    Size  Location     Type
  1190 ;;  fp              2   88[COMRAM] PTR struct _IO_FILE
  1191 ;;		 -> NULL(0), 
  1192 ;;  fmt             2   90[COMRAM] PTR const unsigned char 
  1193 ;;		 -> STR_12(6), STR_11(6), 
  1194 ;;  ap              2   92[COMRAM] PTR PTR void 
  1195 ;;		 -> printf@ap(2), 
  1196 ;; Auto vars:     Size  Location     Type
  1197 ;;  cfmt            2    0[BANK0 ] PTR unsigned char 
  1198 ;;		 -> STR_12(6), STR_11(6), 
  1199 ;; Return value:  Size  Location     Type
  1200 ;;                  2   88[COMRAM] int 
  1201 ;; Registers used:
  1202 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1203 ;; Tracked objects:
  1204 ;;		On entry : 0/0
  1205 ;;		On exit  : 0/0
  1206 ;;		Unchanged: 0/0
  1207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1208 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1209 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1211 ;;      Totals:         6       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1212 ;;Total ram usage:        8 bytes
  1213 ;; Hardware stack levels used: 1
  1214 ;; Hardware stack levels required when called: 11
  1215 ;; This function calls:
  1216 ;;		_vfpfcnvrt
  1217 ;; This function is called by:
  1218 ;;		_printf
  1219 ;; This function uses a non-reentrant model
  1220 ;;
  1221                           
  1222                           	psect	text2
  1223   001BBA                     __ptext2:
  1224                           	callstack 0
  1225   001BBA                     _vfprintf:
  1226                           	callstack 18
  1227   001BBA                     
  1228                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1520: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\source
      +                          s\c99\common\doprnt.c: 1521: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\comm
      +                          on\doprnt.c: 1523:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\
      +                          common\doprnt.c: 1525:     cfmt = (char *)fmt;
  1229   001BBA  C05B  F086         	movff	vfprintf@fmt,vfprintf@cfmt
  1230   001BBE  C05C  F087         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1231                           
  1232                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1233   001BC2  EFF1  F00D         	goto	l1890
  1234   001BC6                     l1888:
  1235                           
  1236                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1533:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1237   001BC6  C059  F045         	movff	vfprintf@fp,vfpfcnvrt@fp
  1238   001BCA  C05A  F046         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1239   001BCE  0E86               	movlw	low vfprintf@cfmt
  1240   001BD0  6E47               	movwf	vfpfcnvrt@fmt^0,c
  1241   001BD2  0E00               	movlw	high vfprintf@cfmt
  1242   001BD4  6E48               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1243   001BD6  C05D  F049         	movff	vfprintf@ap,vfpfcnvrt@ap
  1244   001BDA  C05E  F04A         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1245   001BDE  EC8D  F00A         	call	_vfpfcnvrt	;wreg free
  1246   001BE2                     l1890:
  1247                           
  1248                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1529:     while (
      +                          *cfmt) {
  1249   001BE2  0060  F21B  FFF6   	movff	vfprintf@cfmt,tblptrl
  1250   001BE8  0060  F21F  FFF7   	movff	vfprintf@cfmt+1,tblptrh
  1251   001BEE                     	if	0	;tblptru may be non-zero
  1252   001BEE                     	endif
  1253   001BEE                     	if	0	;tblptru may be non-zero
  1254   001BEE                     	endif
  1255   001BEE  0008               	tblrd		*
  1256   001BF0  50F5               	movf	tablat,w,c
  1257   001BF2  0900               	iorlw	0
  1258   001BF4  A4D8               	btfss	status,2,c
  1259   001BF6  EFFF  F00D         	goto	u1141
  1260   001BFA  EF01  F00E         	goto	u1140
  1261   001BFE                     u1141:
  1262   001BFE  EFE3  F00D         	goto	l1888
  1263   001C02                     u1140:
  1264   001C02                     
  1265                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1538:  return 0;
  1266   001C02  0E00               	movlw	0
  1267   001C04  6E5A               	movwf	(?_vfprintf+1)^0,c
  1268   001C06  0E00               	movlw	0
  1269   001C08  6E59               	movwf	?_vfprintf^0,c
  1270   001C0A  0012               	return		;funcret
  1271   001C0C                     __end_of_vfprintf:
  1272                           	callstack 0
  1273                           
  1274 ;; *************** function _vfpfcnvrt *****************
  1275 ;; Defined at:
  1276 ;;		line 1007 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1277 ;; Parameters:    Size  Location     Type
  1278 ;;  fp              2   68[COMRAM] PTR struct _IO_FILE
  1279 ;;		 -> NULL(0), 
  1280 ;;  fmt             2   70[COMRAM] PTR PTR unsigned char 
  1281 ;;		 -> vfprintf@cfmt(2), 
  1282 ;;  ap              2   72[COMRAM] PTR PTR void 
  1283 ;;		 -> printf@ap(2), 
  1284 ;; Auto vars:     Size  Location     Type
  1285 ;;  convarg         8   78[COMRAM] struct .
  1286 ;;  cp              2   86[COMRAM] PTR unsigned char 
  1287 ;;		 -> STR_12(6), STR_11(6), 
  1288 ;;  i               2    0        int 
  1289 ;;  done            2    0        int 
  1290 ;;  c               1    0        unsigned char 
  1291 ;; Return value:  Size  Location     Type
  1292 ;;                  1    wreg      void 
  1293 ;; Registers used:
  1294 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1295 ;; Tracked objects:
  1296 ;;		On entry : 0/0
  1297 ;;		On exit  : 0/0
  1298 ;;		Unchanged: 0/0
  1299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1300 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1301 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1302 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1303 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1304 ;;Total ram usage:       20 bytes
  1305 ;; Hardware stack levels used: 1
  1306 ;; Hardware stack levels required when called: 10
  1307 ;; This function calls:
  1308 ;;		_fputc
  1309 ;;		_utoa
  1310 ;; This function is called by:
  1311 ;;		_vfprintf
  1312 ;; This function uses a non-reentrant model
  1313 ;;
  1314                           
  1315                           	psect	text3
  1316   00151A                     __ptext3:
  1317                           	callstack 0
  1318   00151A                     _vfpfcnvrt:
  1319                           	callstack 18
  1320   00151A                     
  1321                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1007: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1008: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\dopr
      +                          nt.c: 1009:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common
      +                          \doprnt.c: 1010:     int done, i;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1016:  } convarg;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\c
      +                          ommon\doprnt.c: 1019:     if ((*fmt)[0] == '%') {
  1322   00151A  0060  F11F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  1323   001520  0060  F123  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  1324   001526  006F FF7B FFF6     	movff	postinc2,tblptrl
  1325   00152C  006F FF77 FFF7     	movff	postdec2,tblptrh
  1326   001532                     	if	0	;tblptru may be non-zero
  1327   001532                     	endif
  1328   001532                     	if	0	;tblptru may be non-zero
  1329   001532                     	endif
  1330   001532  0008               	tblrd		*
  1331   001534  50F5               	movf	tablat,w,c
  1332   001536  0A25               	xorlw	37
  1333   001538  A4D8               	btfss	status,2,c
  1334   00153A  EFA1  F00A         	goto	u1121
  1335   00153E  EFA3  F00A         	goto	u1120
  1336   001542                     u1121:
  1337   001542  EF46  F00B         	goto	l1872
  1338   001546                     u1120:
  1339   001546                     
  1340                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1020:         ++*
      +                          fmt;
  1341   001546  0060  F11F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  1342   00154C  0060  F123  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  1343   001552  2ADE               	incf	postinc2,f,c
  1344   001554  0E00               	movlw	0
  1345   001556  22DD               	addwfc	postdec2,f,c
  1346   001558                     
  1347                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1022:         fla
      +                          gs = width = 0;
  1348   001558  0E00               	movlw	0
  1349   00155A  0100               	movlb	0	; () banked
  1350   00155C  6F61               	movwf	(_width+1)& (0+255),b
  1351   00155E  0E00               	movlw	0
  1352   001560  6F60               	movwf	_width& (0+255),b
  1353   001562  C060  F064         	movff	_width,_flags
  1354   001566                     
  1355                           ; BSR set to: 0
  1356                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1023:         pre
      +                          c = -1;
  1357   001566  6962               	setf	_prec& (0+255),b
  1358   001568  6963               	setf	(_prec+1)& (0+255),b
  1359   00156A                     
  1360                           ; BSR set to: 0
  1361                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1239:   if (0
  1362   00156A  0060  F11F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  1363   001570  0060  F123  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  1364   001576  006F FF78  F057    	movff	postinc2,vfpfcnvrt@cp
  1365   00157C  006F FF74  F058    	movff	postdec2,vfpfcnvrt@cp+1
  1366   001582                     
  1367                           ; BSR set to: 0
  1368   001582  0060  F15F  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  1369   001588  0060  F163  FFF7   	movff	vfpfcnvrt@cp+1,tblptrh
  1370   00158E                     	if	0	;tblptru may be non-zero
  1371   00158E                     	endif
  1372   00158E                     	if	0	;tblptru may be non-zero
  1373   00158E                     	endif
  1374   00158E  0008               	tblrd		*
  1375   001590  50F5               	movf	tablat,w,c
  1376   001592  0A75               	xorlw	117
  1377   001594  A4D8               	btfss	status,2,c
  1378   001596  EFCF  F00A         	goto	u1131
  1379   00159A  EFD1  F00A         	goto	u1130
  1380   00159E                     u1131:
  1381   00159E  EF3B  F00B         	goto	l1868
  1382   0015A2                     u1130:
  1383   0015A2                     
  1384                           ; BSR set to: 0
  1385                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1252:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1295:    convarg.llu 
      +                          = (unsigned long long)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (un
      +                          signed int)0));
  1386   0015A2  0060  F127  FFD9   	movff	vfpfcnvrt@ap,fsr2l
  1387   0015A8  0060  F12B  FFDA   	movff	vfpfcnvrt@ap+1,fsr2h
  1388   0015AE  006F FF7C  F04B    	movff	indf2,??_vfpfcnvrt
  1389   0015B4  0E02               	movlw	2
  1390   0015B6  26DE               	addwf	postinc2,f,c
  1391   0015B8  006F FF7C  F04C    	movff	indf2,??_vfpfcnvrt+1
  1392   0015BE  0E00               	movlw	0
  1393   0015C0  22DD               	addwfc	postdec2,f,c
  1394   0015C2  0060  F12F  FFD9   	movff	??_vfpfcnvrt,fsr2l
  1395   0015C8  0060  F133  FFDA   	movff	??_vfpfcnvrt+1,fsr2h
  1396   0015CE  006F FF78  F04D    	movff	postinc2,??_vfpfcnvrt+2
  1397   0015D4  006F FF74  F04E    	movff	postdec2,??_vfpfcnvrt+3
  1398   0015DA  C04D  F04F         	movff	??_vfpfcnvrt+2,vfpfcnvrt@convarg
  1399   0015DE  C04E  F050         	movff	??_vfpfcnvrt+3,vfpfcnvrt@convarg+1
  1400   0015E2  6A51               	clrf	(vfpfcnvrt@convarg+2)^0,c
  1401   0015E4  6A52               	clrf	(vfpfcnvrt@convarg+3)^0,c
  1402   0015E6  6A53               	clrf	(vfpfcnvrt@convarg+4)^0,c
  1403   0015E8  6A54               	clrf	(vfpfcnvrt@convarg+5)^0,c
  1404   0015EA  6A55               	clrf	(vfpfcnvrt@convarg+6)^0,c
  1405   0015EC  6A56               	clrf	(vfpfcnvrt@convarg+7)^0,c
  1406                           
  1407                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1297:    *fmt = c
      +                          p+1;
  1408   0015EE  0E01               	movlw	1
  1409   0015F0  2457               	addwf	vfpfcnvrt@cp^0,w,c
  1410   0015F2  6E4B               	movwf	??_vfpfcnvrt^0,c
  1411   0015F4  0E00               	movlw	0
  1412   0015F6  2058               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  1413   0015F8  6E4C               	movwf	(??_vfpfcnvrt+1)^0,c
  1414   0015FA  0060  F11F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  1415   001600  0060  F123  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  1416   001606  0060  F12F  FFDE   	movff	??_vfpfcnvrt,postinc2
  1417   00160C  0060  F133  FFDD   	movff	??_vfpfcnvrt+1,postdec2
  1418                           
  1419                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1298:    switch (
      +                          *cp) {
  1420   001612  EF23  F00B         	goto	l1866
  1421   001616                     l1860:
  1422                           
  1423                           ; BSR set to: 0
  1424                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1305:      return
      +                           (void) utoa(fp, convarg.llu);;	Return value of _vfpfcnvrt is never used
  1425   001616  C045  F025         	movff	vfpfcnvrt@fp,utoa@fp
  1426   00161A  C046  F026         	movff	vfpfcnvrt@fp+1,utoa@fp+1
  1427   00161E  C04F  F027         	movff	vfpfcnvrt@convarg,utoa@d
  1428   001622  C050  F028         	movff	vfpfcnvrt@convarg+1,utoa@d+1
  1429   001626  C051  F029         	movff	vfpfcnvrt@convarg+2,utoa@d+2
  1430   00162A  C052  F02A         	movff	vfpfcnvrt@convarg+3,utoa@d+3
  1431   00162E  C053  F02B         	movff	vfpfcnvrt@convarg+4,utoa@d+4
  1432   001632  C054  F02C         	movff	vfpfcnvrt@convarg+5,utoa@d+5
  1433   001636  C055  F02D         	movff	vfpfcnvrt@convarg+6,utoa@d+6
  1434   00163A  C056  F02E         	movff	vfpfcnvrt@convarg+7,utoa@d+7
  1435   00163E  ECAD  F009         	call	_utoa	;wreg free
  1436   001642  EF5E  F00B         	goto	l883
  1437   001646                     l1866:
  1438                           
  1439                           ; BSR set to: 0
  1440   001646  0060  F15F  FFF6   	movff	vfpfcnvrt@cp,tblptrl
  1441   00164C  0060  F163  FFF7   	movff	vfpfcnvrt@cp+1,tblptrh
  1442   001652                     	if	0	;tblptru may be non-zero
  1443   001652                     	endif
  1444   001652                     	if	0	;tblptru may be non-zero
  1445   001652                     	endif
  1446   001652  0008               	tblrd		*
  1447   001654  50F5               	movf	tablat,w,c
  1448   001656  6E4B               	movwf	??_vfpfcnvrt^0,c
  1449   001658  6A4C               	clrf	(??_vfpfcnvrt+1)^0,c
  1450                           
  1451                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1452                           ; Switch size 1, requested type "simple"
  1453                           ; Number of cases is 1, Range of values is 0 to 0
  1454                           ; switch strategies available:
  1455                           ; Name         Instructions Cycles
  1456                           ; simple_byte            4     3 (average)
  1457                           ;	Chosen strategy is simple_byte
  1458   00165A  504C               	movf	(??_vfpfcnvrt+1)^0,w,c
  1459   00165C  0A00               	xorlw	0	; case 0
  1460   00165E  B4D8               	btfsc	status,2,c
  1461   001660  EF34  F00B         	goto	l2532
  1462   001664  EF3B  F00B         	goto	l1868
  1463   001668                     l2532:
  1464                           
  1465                           ; BSR set to: 0
  1466                           ; Switch size 1, requested type "simple"
  1467                           ; Number of cases is 1, Range of values is 117 to 117
  1468                           ; switch strategies available:
  1469                           ; Name         Instructions Cycles
  1470                           ; simple_byte            4     3 (average)
  1471                           ;	Chosen strategy is simple_byte
  1472   001668  504B               	movf	??_vfpfcnvrt^0,w,c
  1473   00166A  0A75               	xorlw	117	; case 117
  1474   00166C  B4D8               	btfsc	status,2,c
  1475   00166E  EF0B  F00B         	goto	l1860
  1476   001672  EF3B  F00B         	goto	l1868
  1477   001676                     l1868:
  1478                           
  1479                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1509:         ++*
      +                          fmt;
  1480   001676  0060  F11F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  1481   00167C  0060  F123  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  1482   001682  2ADE               	incf	postinc2,f,c
  1483   001684  0E00               	movlw	0
  1484   001686  22DD               	addwfc	postdec2,f,c
  1485   001688  EF5E  F00B         	goto	l883
  1486   00168C                     l1872:
  1487                           
  1488                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 1514:     fputc((
      +                          int)(*fmt)[0], fp);
  1489   00168C  0060  F11F  FFD9   	movff	vfpfcnvrt@fmt,fsr2l
  1490   001692  0060  F123  FFDA   	movff	vfpfcnvrt@fmt+1,fsr2h
  1491   001698  006F FF7B FFF6     	movff	postinc2,tblptrl
  1492   00169E  006F FF77 FFF7     	movff	postdec2,tblptrh
  1493   0016A4                     	if	0	;tblptru may be non-zero
  1494   0016A4                     	endif
  1495   0016A4                     	if	0	;tblptru may be non-zero
  1496   0016A4                     	endif
  1497   0016A4  0008               	tblrd		*
  1498   0016A6  50F5               	movf	tablat,w,c
  1499   0016A8  6E0A               	movwf	fputc@c^0,c
  1500   0016AA  6A0B               	clrf	(fputc@c+1)^0,c
  1501   0016AC  C045  F00C         	movff	vfpfcnvrt@fp,fputc@fp
  1502   0016B0  C046  F00D         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1503   0016B4  ECAF  F00C         	call	_fputc	;wreg free
  1504   0016B8  EF3B  F00B         	goto	l1868
  1505   0016BC                     l883:
  1506   0016BC  0012               	return		;funcret
  1507   0016BE                     __end_of_vfpfcnvrt:
  1508                           	callstack 0
  1509                           
  1510 ;; *************** function _utoa *****************
  1511 ;; Defined at:
  1512 ;;		line 894 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1513 ;; Parameters:    Size  Location     Type
  1514 ;;  fp              2   36[COMRAM] PTR struct _IO_FILE
  1515 ;;		 -> NULL(0), 
  1516 ;;  d               8   38[COMRAM] unsigned long long 
  1517 ;; Auto vars:     Size  Location     Type
  1518 ;;  n               8   58[COMRAM] unsigned long long 
  1519 ;;  i               2   66[COMRAM] int 
  1520 ;;  p               2   56[COMRAM] int 
  1521 ;;  w               2   54[COMRAM] int 
  1522 ;; Return value:  Size  Location     Type
  1523 ;;                  1    wreg      void 
  1524 ;; Registers used:
  1525 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1526 ;; Tracked objects:
  1527 ;;		On entry : 0/0
  1528 ;;		On exit  : 0/0
  1529 ;;		Unchanged: 0/0
  1530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1531 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1532 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1533 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1534 ;;      Totals:        32       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1535 ;;Total ram usage:       32 bytes
  1536 ;; Hardware stack levels used: 1
  1537 ;; Hardware stack levels required when called: 9
  1538 ;; This function calls:
  1539 ;;		___lodiv
  1540 ;;		___lomod
  1541 ;;		_pad
  1542 ;; This function is called by:
  1543 ;;		_vfpfcnvrt
  1544 ;; This function uses a non-reentrant model
  1545 ;;
  1546                           
  1547                           	psect	text4
  1548   00135A                     __ptext4:
  1549                           	callstack 0
  1550   00135A                     _utoa:
  1551                           	callstack 18
  1552   00135A                     
  1553                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 894: static void 
      +                          utoa(FILE *fp, unsigned long long d);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c9
      +                          9\common\doprnt.c: 895: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\do
      +                          prnt.c: 896:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\commo
      +                          n\doprnt.c: 897:     unsigned long long n;;C:\Program Files\Microchip\xc8\v2.40\pic\sour
      +                          ces\c99\common\doprnt.c: 905:     p = (0 < prec) ? prec : 1;
  1554   00135A  0100               	movlb	0	; () banked
  1555   00135C  BF63               	btfsc	(_prec+1)& (0+255),7,b
  1556   00135E  EFBB  F009         	goto	u1080
  1557   001362  5163               	movf	(_prec+1)& (0+255),w,b
  1558   001364  E106               	bnz	u1081
  1559   001366  0562               	decf	_prec& (0+255),w,b
  1560   001368  B0D8               	btfsc	status,0,c
  1561   00136A  EFB9  F009         	goto	u1081
  1562   00136E  EFBB  F009         	goto	u1080
  1563   001372                     u1081:
  1564   001372  EFC1  F009         	goto	l866
  1565   001376                     u1080:
  1566   001376                     
  1567                           ; BSR set to: 0
  1568   001376  0E00               	movlw	0
  1569   001378  6E3A               	movwf	(utoa@p+1)^0,c
  1570   00137A  0E01               	movlw	1
  1571   00137C  6E39               	movwf	utoa@p^0,c
  1572   00137E  EFC5  F009         	goto	l868
  1573   001382                     l866:
  1574                           
  1575                           ; BSR set to: 0
  1576   001382  C062  F039         	movff	_prec,utoa@p
  1577   001386  C063  F03A         	movff	_prec+1,utoa@p+1
  1578   00138A                     l868:
  1579                           
  1580                           ; BSR set to: 0
  1581                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 906:     w = widt
      +                          h;
  1582   00138A  C060  F037         	movff	_width,utoa@w
  1583   00138E  C061  F038         	movff	_width+1,utoa@w+1
  1584                           
  1585                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 909:     n = d;
  1586   001392  C027  F03B         	movff	utoa@d,utoa@n
  1587   001396  C028  F03C         	movff	utoa@d+1,utoa@n+1
  1588   00139A  C029  F03D         	movff	utoa@d+2,utoa@n+2
  1589   00139E  C02A  F03E         	movff	utoa@d+3,utoa@n+3
  1590   0013A2  C02B  F03F         	movff	utoa@d+4,utoa@n+4
  1591   0013A6  C02C  F040         	movff	utoa@d+5,utoa@n+5
  1592   0013AA  C02D  F041         	movff	utoa@d+6,utoa@n+6
  1593   0013AE  C02E  F042         	movff	utoa@d+7,utoa@n+7
  1594   0013B2                     
  1595                           ; BSR set to: 0
  1596                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 910:     i = size
      +                          of(dbuf) - 1;
  1597   0013B2  0E00               	movlw	0
  1598   0013B4  6E44               	movwf	(utoa@i+1)^0,c
  1599   0013B6  0E1F               	movlw	31
  1600   0013B8  6E43               	movwf	utoa@i^0,c
  1601   0013BA                     
  1602                           ; BSR set to: 0
  1603                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 911:     dbuf[i] 
      +                          = '\0';
  1604   0013BA  0E00               	movlw	0
  1605   0013BC  6F85               	movwf	(_dbuf+31)& (0+255),b
  1606                           
  1607                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 912:     while (i
      +                           && (n || (0 < p)
  1608   0013BE  EF57  F00A         	goto	l1836
  1609   0013C2                     l1826:
  1610                           
  1611                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 916:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 917:         --i;
  1612   0013C2  0643               	decf	utoa@i^0,f,c
  1613   0013C4  A0D8               	btfss	status,0,c
  1614   0013C6  0644               	decf	(utoa@i+1)^0,f,c
  1615   0013C8                     
  1616                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 918:         dbuf
      +                          [i] = '0' + (n % 10);
  1617   0013C8  0E66               	movlw	low _dbuf
  1618   0013CA  2443               	addwf	utoa@i^0,w,c
  1619   0013CC  6ED9               	movwf	fsr2l,c
  1620   0013CE  0E00               	movlw	high _dbuf
  1621   0013D0  2044               	addwfc	(utoa@i+1)^0,w,c
  1622   0013D2  6EDA               	movwf	fsr2h,c
  1623   0013D4  C03B  F001         	movff	utoa@n,___lomod@dividend
  1624   0013D8  C03C  F002         	movff	utoa@n+1,___lomod@dividend+1
  1625   0013DC  C03D  F003         	movff	utoa@n+2,___lomod@dividend+2
  1626   0013E0  C03E  F004         	movff	utoa@n+3,___lomod@dividend+3
  1627   0013E4  C03F  F005         	movff	utoa@n+4,___lomod@dividend+4
  1628   0013E8  C040  F006         	movff	utoa@n+5,___lomod@dividend+5
  1629   0013EC  C041  F007         	movff	utoa@n+6,___lomod@dividend+6
  1630   0013F0  C042  F008         	movff	utoa@n+7,___lomod@dividend+7
  1631   0013F4  0E0A               	movlw	10
  1632   0013F6  6E09               	movwf	___lomod@divisor^0,c
  1633   0013F8  0E00               	movlw	0
  1634   0013FA  6E0A               	movwf	(___lomod@divisor+1)^0,c
  1635   0013FC  0E00               	movlw	0
  1636   0013FE  6E0B               	movwf	(___lomod@divisor+2)^0,c
  1637   001400  0E00               	movlw	0
  1638   001402  6E0C               	movwf	(___lomod@divisor+3)^0,c
  1639   001404  0E00               	movlw	0
  1640   001406  6E0D               	movwf	(___lomod@divisor+4)^0,c
  1641   001408  0E00               	movlw	0
  1642   00140A  6E0E               	movwf	(___lomod@divisor+5)^0,c
  1643   00140C  0E00               	movlw	0
  1644   00140E  6E0F               	movwf	(___lomod@divisor+6)^0,c
  1645   001410  0E00               	movlw	0
  1646   001412  6E10               	movwf	(___lomod@divisor+7)^0,c
  1647   001414  EC47  F00C         	call	___lomod	;wreg free
  1648   001418  C001  F02F         	movff	?___lomod,??_utoa
  1649   00141C  C002  F030         	movff	?___lomod+1,??_utoa+1
  1650   001420  C003  F031         	movff	?___lomod+2,??_utoa+2
  1651   001424  C004  F032         	movff	?___lomod+3,??_utoa+3
  1652   001428  C005  F033         	movff	?___lomod+4,??_utoa+4
  1653   00142C  C006  F034         	movff	?___lomod+5,??_utoa+5
  1654   001430  C007  F035         	movff	?___lomod+6,??_utoa+6
  1655   001434  C008  F036         	movff	?___lomod+7,??_utoa+7
  1656   001438  502F               	movf	??_utoa^0,w,c
  1657   00143A  0F30               	addlw	48
  1658   00143C  6EDF               	movwf	indf2,c
  1659   00143E                     
  1660                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 919:         --p;
  1661   00143E  0639               	decf	utoa@p^0,f,c
  1662   001440  A0D8               	btfss	status,0,c
  1663   001442  063A               	decf	(utoa@p+1)^0,f,c
  1664   001444                     
  1665                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 920:         --w;
  1666   001444  0637               	decf	utoa@w^0,f,c
  1667   001446  A0D8               	btfss	status,0,c
  1668   001448  0638               	decf	(utoa@w+1)^0,f,c
  1669   00144A                     
  1670                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 921:         n = 
      +                          n / 10;
  1671   00144A  C03B  F001         	movff	utoa@n,___lodiv@dividend
  1672   00144E  C03C  F002         	movff	utoa@n+1,___lodiv@dividend+1
  1673   001452  C03D  F003         	movff	utoa@n+2,___lodiv@dividend+2
  1674   001456  C03E  F004         	movff	utoa@n+3,___lodiv@dividend+3
  1675   00145A  C03F  F005         	movff	utoa@n+4,___lodiv@dividend+4
  1676   00145E  C040  F006         	movff	utoa@n+5,___lodiv@dividend+5
  1677   001462  C041  F007         	movff	utoa@n+6,___lodiv@dividend+6
  1678   001466  C042  F008         	movff	utoa@n+7,___lodiv@dividend+7
  1679   00146A  0E0A               	movlw	10
  1680   00146C  6E09               	movwf	___lodiv@divisor^0,c
  1681   00146E  0E00               	movlw	0
  1682   001470  6E0A               	movwf	(___lodiv@divisor+1)^0,c
  1683   001472  0E00               	movlw	0
  1684   001474  6E0B               	movwf	(___lodiv@divisor+2)^0,c
  1685   001476  0E00               	movlw	0
  1686   001478  6E0C               	movwf	(___lodiv@divisor+3)^0,c
  1687   00147A  0E00               	movlw	0
  1688   00147C  6E0D               	movwf	(___lodiv@divisor+4)^0,c
  1689   00147E  0E00               	movlw	0
  1690   001480  6E0E               	movwf	(___lodiv@divisor+5)^0,c
  1691   001482  0E00               	movlw	0
  1692   001484  6E0F               	movwf	(___lodiv@divisor+6)^0,c
  1693   001486  0E00               	movlw	0
  1694   001488  6E10               	movwf	(___lodiv@divisor+7)^0,c
  1695   00148A  EC5F  F00B         	call	___lodiv	;wreg free
  1696   00148E  C001  F03B         	movff	?___lodiv,utoa@n
  1697   001492  C002  F03C         	movff	?___lodiv+1,utoa@n+1
  1698   001496  C003  F03D         	movff	?___lodiv+2,utoa@n+2
  1699   00149A  C004  F03E         	movff	?___lodiv+3,utoa@n+3
  1700   00149E  C005  F03F         	movff	?___lodiv+4,utoa@n+4
  1701   0014A2  C006  F040         	movff	?___lodiv+5,utoa@n+5
  1702   0014A6  C007  F041         	movff	?___lodiv+6,utoa@n+6
  1703   0014AA  C008  F042         	movff	?___lodiv+7,utoa@n+7
  1704   0014AE                     l1836:
  1705                           
  1706                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 912:     while (i
      +                           && (n || (0 < p)
  1707   0014AE  5043               	movf	utoa@i^0,w,c
  1708   0014B0  1044               	iorwf	(utoa@i+1)^0,w,c
  1709   0014B2  B4D8               	btfsc	status,2,c
  1710   0014B4  EF5E  F00A         	goto	u1091
  1711   0014B8  EF60  F00A         	goto	u1090
  1712   0014BC                     u1091:
  1713   0014BC  EF7C  F00A         	goto	l1842
  1714   0014C0                     u1090:
  1715   0014C0  503B               	movf	utoa@n^0,w,c
  1716   0014C2  103C               	iorwf	(utoa@n+1)^0,w,c
  1717   0014C4  103D               	iorwf	(utoa@n+2)^0,w,c
  1718   0014C6  103E               	iorwf	(utoa@n+3)^0,w,c
  1719   0014C8  103F               	iorwf	(utoa@n+4)^0,w,c
  1720   0014CA  1040               	iorwf	(utoa@n+5)^0,w,c
  1721   0014CC  1041               	iorwf	(utoa@n+6)^0,w,c
  1722   0014CE  1042               	iorwf	(utoa@n+7)^0,w,c
  1723   0014D0  A4D8               	btfss	status,2,c
  1724   0014D2  EF6D  F00A         	goto	u1101
  1725   0014D6  EF6F  F00A         	goto	u1100
  1726   0014DA                     u1101:
  1727   0014DA  EFE1  F009         	goto	l1826
  1728   0014DE                     u1100:
  1729   0014DE  BE3A               	btfsc	(utoa@p+1)^0,7,c
  1730   0014E0  EF7C  F00A         	goto	u1110
  1731   0014E4  503A               	movf	(utoa@p+1)^0,w,c
  1732   0014E6  E106               	bnz	u1111
  1733   0014E8  0439               	decf	utoa@p^0,w,c
  1734   0014EA  B0D8               	btfsc	status,0,c
  1735   0014EC  EF7A  F00A         	goto	u1111
  1736   0014F0  EF7C  F00A         	goto	u1110
  1737   0014F4                     u1111:
  1738   0014F4  EFE1  F009         	goto	l1826
  1739   0014F8                     u1110:
  1740   0014F8                     l1842:
  1741                           
  1742                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 925:     return (
      +                          void) pad(fp, &dbuf[i], w);
  1743   0014F8  C025  F01A         	movff	utoa@fp,pad@fp
  1744   0014FC  C026  F01B         	movff	utoa@fp+1,pad@fp+1
  1745   001500  0E66               	movlw	low _dbuf
  1746   001502  2443               	addwf	utoa@i^0,w,c
  1747   001504  6E1C               	movwf	pad@buf^0,c
  1748   001506  0E00               	movlw	high _dbuf
  1749   001508  2044               	addwfc	(utoa@i+1)^0,w,c
  1750   00150A  6E1D               	movwf	(pad@buf+1)^0,c
  1751   00150C  C037  F01E         	movff	utoa@w,pad@p
  1752   001510  C038  F01F         	movff	utoa@w+1,pad@p+1
  1753   001514  EC38  F00D         	call	_pad	;wreg free
  1754   001518  0012               	return		;funcret
  1755   00151A                     __end_of_utoa:
  1756                           	callstack 0
  1757                           
  1758 ;; *************** function _pad *****************
  1759 ;; Defined at:
  1760 ;;		line 133 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c"
  1761 ;; Parameters:    Size  Location     Type
  1762 ;;  fp              2   25[COMRAM] PTR struct _IO_FILE
  1763 ;;		 -> NULL(0), 
  1764 ;;  buf             2   27[COMRAM] PTR unsigned char 
  1765 ;;		 -> dbuf(32), 
  1766 ;;  p               2   29[COMRAM] int 
  1767 ;; Auto vars:     Size  Location     Type
  1768 ;;  w               2   34[COMRAM] int 
  1769 ;;  i               2   32[COMRAM] int 
  1770 ;; Return value:  Size  Location     Type
  1771 ;;                  1    wreg      void 
  1772 ;; Registers used:
  1773 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1774 ;; Tracked objects:
  1775 ;;		On entry : 0/0
  1776 ;;		On exit  : 0/0
  1777 ;;		Unchanged: 0/0
  1778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1779 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1780 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1781 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1782 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1783 ;;Total ram usage:       11 bytes
  1784 ;; Hardware stack levels used: 1
  1785 ;; Hardware stack levels required when called: 8
  1786 ;; This function calls:
  1787 ;;		_fputc
  1788 ;;		_fputs
  1789 ;; This function is called by:
  1790 ;;		_utoa
  1791 ;; This function uses a non-reentrant model
  1792 ;;
  1793                           
  1794                           	psect	text5
  1795   001A70                     __ptext5:
  1796                           	callstack 0
  1797   001A70                     _pad:
  1798                           	callstack 18
  1799   001A70                     
  1800                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 133: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\com
      +                          mon\doprnt.c: 134: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.
      +                          c: 135:     int i, w;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt
      +                          .c: 145:     w = (p < 0) ? 0 : p;
  1801   001A70  BE1F               	btfsc	(pad@p+1)^0,7,c
  1802   001A72  EF3D  F00D         	goto	u1061
  1803   001A76  EF3F  F00D         	goto	u1060
  1804   001A7A                     u1061:
  1805   001A7A  EF45  F00D         	goto	l1808
  1806   001A7E                     u1060:
  1807   001A7E  C01E  F023         	movff	pad@p,pad@w
  1808   001A82  C01F  F024         	movff	pad@p+1,pad@w+1
  1809   001A86  EF49  F00D         	goto	l858
  1810   001A8A                     l1808:
  1811   001A8A  0E00               	movlw	0
  1812   001A8C  6E24               	movwf	(pad@w+1)^0,c
  1813   001A8E  0E00               	movlw	0
  1814   001A90  6E23               	movwf	pad@w^0,c
  1815   001A92                     l858:
  1816                           
  1817                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 146:     i = 0;
  1818   001A92  0E00               	movlw	0
  1819   001A94  6E22               	movwf	(pad@i+1)^0,c
  1820   001A96  0E00               	movlw	0
  1821   001A98  6E21               	movwf	pad@i^0,c
  1822                           
  1823                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  1824   001A9A  EF5B  F00D         	goto	l1814
  1825   001A9E                     l1810:
  1826                           
  1827                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 148:         fput
      +                          c(' ', fp);
  1828   001A9E  0E00               	movlw	0
  1829   001AA0  6E0B               	movwf	(fputc@c+1)^0,c
  1830   001AA2  0E20               	movlw	32
  1831   001AA4  6E0A               	movwf	fputc@c^0,c
  1832   001AA6  C01A  F00C         	movff	pad@fp,fputc@fp
  1833   001AAA  C01B  F00D         	movff	pad@fp+1,fputc@fp+1
  1834   001AAE  ECAF  F00C         	call	_fputc	;wreg free
  1835   001AB2                     
  1836                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 149:         ++i;
  1837   001AB2  4A21               	infsnz	pad@i^0,f,c
  1838   001AB4  2A22               	incf	(pad@i+1)^0,f,c
  1839   001AB6                     l1814:
  1840                           
  1841                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 147:     while (i
      +                           < w) {
  1842   001AB6  5023               	movf	pad@w^0,w,c
  1843   001AB8  5C21               	subwf	pad@i^0,w,c
  1844   001ABA  5022               	movf	(pad@i+1)^0,w,c
  1845   001ABC  0A80               	xorlw	128
  1846   001ABE  6E20               	movwf	??_pad^0,c
  1847   001AC0  5024               	movf	(pad@w+1)^0,w,c
  1848   001AC2  0A80               	xorlw	128
  1849   001AC4  5820               	subwfb	??_pad^0,w,c
  1850   001AC6  A0D8               	btfss	status,0,c
  1851   001AC8  EF68  F00D         	goto	u1071
  1852   001ACC  EF6A  F00D         	goto	u1070
  1853   001AD0                     u1071:
  1854   001AD0  EF4F  F00D         	goto	l1810
  1855   001AD4                     u1070:
  1856   001AD4                     
  1857                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\doprnt.c: 156:         fput
      +                          s((const char *)buf, fp);
  1858   001AD4  C01C  F013         	movff	pad@buf,fputs@s
  1859   001AD8  C01D  F014         	movff	pad@buf+1,fputs@s+1
  1860   001ADC  C01A  F015         	movff	pad@fp,fputs@fp
  1861   001AE0  C01B  F016         	movff	pad@fp+1,fputs@fp+1
  1862   001AE4  EC06  F00E         	call	_fputs	;wreg free
  1863   001AE8  0012               	return		;funcret
  1864   001AEA                     __end_of_pad:
  1865                           	callstack 0
  1866                           
  1867 ;; *************** function _fputs *****************
  1868 ;; Defined at:
  1869 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputs.c"
  1870 ;; Parameters:    Size  Location     Type
  1871 ;;  s               2   18[COMRAM] PTR const unsigned char 
  1872 ;;		 -> dbuf(32), 
  1873 ;;  fp              2   20[COMRAM] PTR struct _IO_FILE
  1874 ;;		 -> NULL(0), 
  1875 ;; Auto vars:     Size  Location     Type
  1876 ;;  i               2   23[COMRAM] int 
  1877 ;;  c               1   22[COMRAM] unsigned char 
  1878 ;; Return value:  Size  Location     Type
  1879 ;;                  2   18[COMRAM] int 
  1880 ;; Registers used:
  1881 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1882 ;; Tracked objects:
  1883 ;;		On entry : 0/0
  1884 ;;		On exit  : 0/0
  1885 ;;		Unchanged: 0/0
  1886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1887 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1888 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1889 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1890 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1891 ;;Total ram usage:        7 bytes
  1892 ;; Hardware stack levels used: 1
  1893 ;; Hardware stack levels required when called: 7
  1894 ;; This function calls:
  1895 ;;		_fputc
  1896 ;; This function is called by:
  1897 ;;		_pad
  1898 ;; This function uses a non-reentrant model
  1899 ;;
  1900                           
  1901                           	psect	text6
  1902   001C0C                     __ptext6:
  1903                           	callstack 0
  1904   001C0C                     _fputs:
  1905                           	callstack 18
  1906   001C0C  0E00               	movlw	0
  1907   001C0E  6E19               	movwf	(fputs@i+1)^0,c
  1908   001C10  0E00               	movlw	0
  1909   001C12  6E18               	movwf	fputs@i^0,c
  1910   001C14  EF17  F00E         	goto	l1764
  1911   001C18                     l1760:
  1912   001C18  C017  F00A         	movff	fputs@c,fputc@c
  1913   001C1C  6A0B               	clrf	(fputc@c+1)^0,c
  1914   001C1E  C015  F00C         	movff	fputs@fp,fputc@fp
  1915   001C22  C016  F00D         	movff	fputs@fp+1,fputc@fp+1
  1916   001C26  ECAF  F00C         	call	_fputc	;wreg free
  1917   001C2A  4A18               	infsnz	fputs@i^0,f,c
  1918   001C2C  2A19               	incf	(fputs@i+1)^0,f,c
  1919   001C2E                     l1764:
  1920   001C2E  5018               	movf	fputs@i^0,w,c
  1921   001C30  2413               	addwf	fputs@s^0,w,c
  1922   001C32  6ED9               	movwf	fsr2l,c
  1923   001C34  5019               	movf	(fputs@i+1)^0,w,c
  1924   001C36  2014               	addwfc	(fputs@s+1)^0,w,c
  1925   001C38  6EDA               	movwf	fsr2h,c
  1926   001C3A  50DF               	movf	indf2,w,c
  1927   001C3C  6E17               	movwf	fputs@c^0,c
  1928   001C3E  5017               	movf	fputs@c^0,w,c
  1929   001C40  A4D8               	btfss	status,2,c
  1930   001C42  EF25  F00E         	goto	u981
  1931   001C46  EF27  F00E         	goto	u980
  1932   001C4A                     u981:
  1933   001C4A  EF0C  F00E         	goto	l1760
  1934   001C4E                     u980:
  1935   001C4E  0012               	return		;funcret
  1936   001C50                     __end_of_fputs:
  1937                           	callstack 0
  1938                           
  1939 ;; *************** function _fputc *****************
  1940 ;; Defined at:
  1941 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\nf_fputc.c"
  1942 ;; Parameters:    Size  Location     Type
  1943 ;;  c               2    9[COMRAM] int 
  1944 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  1945 ;;		 -> NULL(0), 
  1946 ;; Auto vars:     Size  Location     Type
  1947 ;;		None
  1948 ;; Return value:  Size  Location     Type
  1949 ;;                  2    9[COMRAM] int 
  1950 ;; Registers used:
  1951 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1952 ;; Tracked objects:
  1953 ;;		On entry : 0/0
  1954 ;;		On exit  : 0/0
  1955 ;;		Unchanged: 0/0
  1956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1957 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1959 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1960 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1961 ;;Total ram usage:        9 bytes
  1962 ;; Hardware stack levels used: 1
  1963 ;; Hardware stack levels required when called: 6
  1964 ;; This function calls:
  1965 ;;		_putch
  1966 ;; This function is called by:
  1967 ;;		_pad
  1968 ;;		_vfpfcnvrt
  1969 ;;		_fputs
  1970 ;; This function uses a non-reentrant model
  1971 ;;
  1972                           
  1973                           	psect	text7
  1974   00195E                     __ptext7:
  1975                           	callstack 0
  1976   00195E                     _fputc:
  1977                           	callstack 18
  1978   00195E  500C               	movf	fputc@fp^0,w,c
  1979   001960  100D               	iorwf	(fputc@fp+1)^0,w,c
  1980   001962  B4D8               	btfsc	status,2,c
  1981   001964  EFB6  F00C         	goto	u941
  1982   001968  EFB8  F00C         	goto	u940
  1983   00196C                     u941:
  1984   00196C  EFC1  F00C         	goto	l1748
  1985   001970                     u940:
  1986   001970  500C               	movf	fputc@fp^0,w,c
  1987   001972  100D               	iorwf	(fputc@fp+1)^0,w,c
  1988   001974  A4D8               	btfss	status,2,c
  1989   001976  EFBF  F00C         	goto	u951
  1990   00197A  EFC1  F00C         	goto	u950
  1991   00197E                     u951:
  1992   00197E  EFC6  F00C         	goto	l1750
  1993   001982                     u950:
  1994   001982                     l1748:
  1995   001982  500A               	movf	fputc@c^0,w,c
  1996   001984  ECDE  F00E         	call	_putch
  1997   001988  EFF9  F00C         	goto	l902
  1998   00198C                     l1750:
  1999   00198C  EE20 F009          	lfsr	2,9
  2000   001990  500C               	movf	fputc@fp^0,w,c
  2001   001992  26D9               	addwf	fsr2l,f,c
  2002   001994  500D               	movf	(fputc@fp+1)^0,w,c
  2003   001996  22DA               	addwfc	fsr2h,f,c
  2004   001998  50DE               	movf	postinc2,w,c
  2005   00199A  10DE               	iorwf	postinc2,w,c
  2006   00199C  B4D8               	btfsc	status,2,c
  2007   00199E  EFD3  F00C         	goto	u961
  2008   0019A2  EFD5  F00C         	goto	u960
  2009   0019A6                     u961:
  2010   0019A6  EFF0  F00C         	goto	l1754
  2011   0019AA                     u960:
  2012   0019AA  EE20 F009          	lfsr	2,9
  2013   0019AE  500C               	movf	fputc@fp^0,w,c
  2014   0019B0  26D9               	addwf	fsr2l,f,c
  2015   0019B2  500D               	movf	(fputc@fp+1)^0,w,c
  2016   0019B4  22DA               	addwfc	fsr2h,f,c
  2017   0019B6  EE10 F003          	lfsr	1,3
  2018   0019BA  500C               	movf	fputc@fp^0,w,c
  2019   0019BC  26E1               	addwf	fsr1l,f,c
  2020   0019BE  500D               	movf	(fputc@fp+1)^0,w,c
  2021   0019C0  22E2               	addwfc	fsr1h,f,c
  2022   0019C2  50DE               	movf	postinc2,w,c
  2023   0019C4  5CE6               	subwf	postinc1,w,c
  2024   0019C6  50E6               	movf	postinc1,w,c
  2025   0019C8  0A80               	xorlw	128
  2026   0019CA  6E12               	movwf	(??_fputc+4)^0,c
  2027   0019CC  50DE               	movf	postinc2,w,c
  2028   0019CE  0A80               	xorlw	128
  2029   0019D0  5812               	subwfb	(??_fputc+4)^0,w,c
  2030   0019D2  B0D8               	btfsc	status,0,c
  2031   0019D4  EFEE  F00C         	goto	u971
  2032   0019D8  EFF0  F00C         	goto	u970
  2033   0019DC                     u971:
  2034   0019DC  EFF9  F00C         	goto	l902
  2035   0019E0                     u970:
  2036   0019E0                     l1754:
  2037   0019E0  EE20 F003          	lfsr	2,3
  2038   0019E4  500C               	movf	fputc@fp^0,w,c
  2039   0019E6  26D9               	addwf	fsr2l,f,c
  2040   0019E8  500D               	movf	(fputc@fp+1)^0,w,c
  2041   0019EA  22DA               	addwfc	fsr2h,f,c
  2042   0019EC  2ADE               	incf	postinc2,f,c
  2043   0019EE  0E00               	movlw	0
  2044   0019F0  22DD               	addwfc	postdec2,f,c
  2045   0019F2                     l902:
  2046   0019F2  0012               	return		;funcret
  2047   0019F4                     __end_of_fputc:
  2048                           	callstack 0
  2049                           
  2050 ;; *************** function _putch *****************
  2051 ;; Defined at:
  2052 ;;		line 24 in file "main.c"
  2053 ;; Parameters:    Size  Location     Type
  2054 ;;  c               1    wreg     unsigned char 
  2055 ;; Auto vars:     Size  Location     Type
  2056 ;;  c               1    8[COMRAM] unsigned char 
  2057 ;; Return value:  Size  Location     Type
  2058 ;;                  1    wreg      void 
  2059 ;; Registers used:
  2060 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2061 ;; Tracked objects:
  2062 ;;		On entry : 0/0
  2063 ;;		On exit  : 0/0
  2064 ;;		Unchanged: 0/0
  2065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2067 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2069 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2070 ;;Total ram usage:        1 bytes
  2071 ;; Hardware stack levels used: 1
  2072 ;; Hardware stack levels required when called: 5
  2073 ;; This function calls:
  2074 ;;		_LCD_PutC
  2075 ;; This function is called by:
  2076 ;;		_fputc
  2077 ;; This function uses a non-reentrant model
  2078 ;;
  2079                           
  2080                           	psect	text8
  2081   001DBC                     __ptext8:
  2082                           	callstack 0
  2083   001DBC                     _putch:
  2084                           	callstack 18
  2085                           
  2086                           ;incstack = 0
  2087                           ;putch@c stored from wreg
  2088   001DBC  6E09               	movwf	putch@c^0,c
  2089   001DBE                     
  2090                           ;main.c: 24: void putch(char c);main.c: 25: {;main.c: 26:     LCD_PutC(c);
  2091   001DBE  5009               	movf	putch@c^0,w,c
  2092   001DC0  ECCB  F00E         	call	_LCD_PutC
  2093   001DC4  0012               	return		;funcret
  2094   001DC6                     __end_of_putch:
  2095                           	callstack 0
  2096                           
  2097 ;; *************** function _LCD_PutC *****************
  2098 ;; Defined at:
  2099 ;;		line 96 in file "../lcd.c"
  2100 ;; Parameters:    Size  Location     Type
  2101 ;;  c               1    wreg     unsigned char 
  2102 ;; Auto vars:     Size  Location     Type
  2103 ;;  c               1    7[COMRAM] unsigned char 
  2104 ;; Return value:  Size  Location     Type
  2105 ;;                  1    wreg      void 
  2106 ;; Registers used:
  2107 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2108 ;; Tracked objects:
  2109 ;;		On entry : 0/0
  2110 ;;		On exit  : 0/0
  2111 ;;		Unchanged: 0/0
  2112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2114 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2116 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2117 ;;Total ram usage:        1 bytes
  2118 ;; Hardware stack levels used: 1
  2119 ;; Hardware stack levels required when called: 4
  2120 ;; This function calls:
  2121 ;;		_WriteByte
  2122 ;;		_WritePin
  2123 ;; This function is called by:
  2124 ;;		_putch
  2125 ;; This function uses a non-reentrant model
  2126 ;;
  2127                           
  2128                           	psect	text9
  2129   001D96                     __ptext9:
  2130                           	callstack 0
  2131   001D96                     _LCD_PutC:
  2132                           	callstack 18
  2133                           
  2134                           ;incstack = 0
  2135                           ;LCD_PutC@c stored from wreg
  2136   001D96  6E08               	movwf	LCD_PutC@c^0,c
  2137   001D98                     
  2138                           ;../lcd.c: 96: void LCD_PutC(char c);../lcd.c: 97: {;../lcd.c: 98:     WritePin(LCD_RS, 
      +                          1);
  2139   001D98  0E01               	movlw	1
  2140   001D9A  6E01               	movwf	WritePin@val^0,c
  2141   001D9C  505F               	movf	_LCD_RS^0,w,c
  2142   001D9E  EC75  F00D         	call	_WritePin
  2143                           
  2144                           ;../lcd.c: 99:     WriteByte(c);
  2145   001DA2  5008               	movf	LCD_PutC@c^0,w,c
  2146   001DA4  ECD5  F00E         	call	_WriteByte
  2147   001DA8  0012               	return		;funcret
  2148   001DAA                     __end_of_LCD_PutC:
  2149                           	callstack 0
  2150                           
  2151 ;; *************** function ___lomod *****************
  2152 ;; Defined at:
  2153 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lomod.c"
  2154 ;; Parameters:    Size  Location     Type
  2155 ;;  dividend        8    0[COMRAM] unsigned long long 
  2156 ;;  divisor         8    8[COMRAM] unsigned long long 
  2157 ;; Auto vars:     Size  Location     Type
  2158 ;;  counter         1   16[COMRAM] unsigned char 
  2159 ;; Return value:  Size  Location     Type
  2160 ;;                  8    0[COMRAM] unsigned long long 
  2161 ;; Registers used:
  2162 ;;		wreg, status,2, status,0
  2163 ;; Tracked objects:
  2164 ;;		On entry : 0/0
  2165 ;;		On exit  : 0/0
  2166 ;;		Unchanged: 0/0
  2167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2168 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2169 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2171 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2172 ;;Total ram usage:       17 bytes
  2173 ;; Hardware stack levels used: 1
  2174 ;; This function calls:
  2175 ;;		Nothing
  2176 ;; This function is called by:
  2177 ;;		_utoa
  2178 ;; This function uses a non-reentrant model
  2179 ;;
  2180                           
  2181                           	psect	text10
  2182   00188E                     __ptext10:
  2183                           	callstack 0
  2184   00188E                     ___lomod:
  2185                           	callstack 26
  2186   00188E  5009               	movf	___lomod@divisor^0,w,c
  2187   001890  100A               	iorwf	(___lomod@divisor+1)^0,w,c
  2188   001892  100B               	iorwf	(___lomod@divisor+2)^0,w,c
  2189   001894  100C               	iorwf	(___lomod@divisor+3)^0,w,c
  2190   001896  100D               	iorwf	(___lomod@divisor+4)^0,w,c
  2191   001898  100E               	iorwf	(___lomod@divisor+5)^0,w,c
  2192   00189A  100F               	iorwf	(___lomod@divisor+6)^0,w,c
  2193   00189C  1010               	iorwf	(___lomod@divisor+7)^0,w,c
  2194   00189E  B4D8               	btfsc	status,2,c
  2195   0018A0  EF54  F00C         	goto	u1031
  2196   0018A4  EF56  F00C         	goto	u1030
  2197   0018A8                     u1031:
  2198   0018A8  EF9E  F00C         	goto	l608
  2199   0018AC                     u1030:
  2200   0018AC  0E01               	movlw	1
  2201   0018AE  6E11               	movwf	___lomod@counter^0,c
  2202   0018B0  EF64  F00C         	goto	l1794
  2203   0018B4                     l1792:
  2204   0018B4  90D8               	bcf	status,0,c
  2205   0018B6  3609               	rlcf	___lomod@divisor^0,f,c
  2206   0018B8  360A               	rlcf	(___lomod@divisor+1)^0,f,c
  2207   0018BA  360B               	rlcf	(___lomod@divisor+2)^0,f,c
  2208   0018BC  360C               	rlcf	(___lomod@divisor+3)^0,f,c
  2209   0018BE  360D               	rlcf	(___lomod@divisor+4)^0,f,c
  2210   0018C0  360E               	rlcf	(___lomod@divisor+5)^0,f,c
  2211   0018C2  360F               	rlcf	(___lomod@divisor+6)^0,f,c
  2212   0018C4  3610               	rlcf	(___lomod@divisor+7)^0,f,c
  2213   0018C6  2A11               	incf	___lomod@counter^0,f,c
  2214   0018C8                     l1794:
  2215   0018C8  AE10               	btfss	(___lomod@divisor+7)^0,7,c
  2216   0018CA  EF69  F00C         	goto	u1041
  2217   0018CE  EF6B  F00C         	goto	u1040
  2218   0018D2                     u1041:
  2219   0018D2  EF5A  F00C         	goto	l1792
  2220   0018D6                     u1040:
  2221   0018D6                     l1796:
  2222   0018D6  5009               	movf	___lomod@divisor^0,w,c
  2223   0018D8  5C01               	subwf	___lomod@dividend^0,w,c
  2224   0018DA  500A               	movf	(___lomod@divisor+1)^0,w,c
  2225   0018DC  5802               	subwfb	(___lomod@dividend+1)^0,w,c
  2226   0018DE  500B               	movf	(___lomod@divisor+2)^0,w,c
  2227   0018E0  5803               	subwfb	(___lomod@dividend+2)^0,w,c
  2228   0018E2  500C               	movf	(___lomod@divisor+3)^0,w,c
  2229   0018E4  5804               	subwfb	(___lomod@dividend+3)^0,w,c
  2230   0018E6  500D               	movf	(___lomod@divisor+4)^0,w,c
  2231   0018E8  5805               	subwfb	(___lomod@dividend+4)^0,w,c
  2232   0018EA  500E               	movf	(___lomod@divisor+5)^0,w,c
  2233   0018EC  5806               	subwfb	(___lomod@dividend+5)^0,w,c
  2234   0018EE  500F               	movf	(___lomod@divisor+6)^0,w,c
  2235   0018F0  5807               	subwfb	(___lomod@dividend+6)^0,w,c
  2236   0018F2  5010               	movf	(___lomod@divisor+7)^0,w,c
  2237   0018F4  5808               	subwfb	(___lomod@dividend+7)^0,w,c
  2238   0018F6  A0D8               	btfss	status,0,c
  2239   0018F8  EF80  F00C         	goto	u1051
  2240   0018FC  EF82  F00C         	goto	u1050
  2241   001900                     u1051:
  2242   001900  EF92  F00C         	goto	l1800
  2243   001904                     u1050:
  2244   001904  5009               	movf	___lomod@divisor^0,w,c
  2245   001906  5E01               	subwf	___lomod@dividend^0,f,c
  2246   001908  500A               	movf	(___lomod@divisor+1)^0,w,c
  2247   00190A  5A02               	subwfb	(___lomod@dividend+1)^0,f,c
  2248   00190C  500B               	movf	(___lomod@divisor+2)^0,w,c
  2249   00190E  5A03               	subwfb	(___lomod@dividend+2)^0,f,c
  2250   001910  500C               	movf	(___lomod@divisor+3)^0,w,c
  2251   001912  5A04               	subwfb	(___lomod@dividend+3)^0,f,c
  2252   001914  500D               	movf	(___lomod@divisor+4)^0,w,c
  2253   001916  5A05               	subwfb	(___lomod@dividend+4)^0,f,c
  2254   001918  500E               	movf	(___lomod@divisor+5)^0,w,c
  2255   00191A  5A06               	subwfb	(___lomod@dividend+5)^0,f,c
  2256   00191C  500F               	movf	(___lomod@divisor+6)^0,w,c
  2257   00191E  5A07               	subwfb	(___lomod@dividend+6)^0,f,c
  2258   001920  5010               	movf	(___lomod@divisor+7)^0,w,c
  2259   001922  5A08               	subwfb	(___lomod@dividend+7)^0,f,c
  2260   001924                     l1800:
  2261   001924  90D8               	bcf	status,0,c
  2262   001926  3210               	rrcf	(___lomod@divisor+7)^0,f,c
  2263   001928  320F               	rrcf	(___lomod@divisor+6)^0,f,c
  2264   00192A  320E               	rrcf	(___lomod@divisor+5)^0,f,c
  2265   00192C  320D               	rrcf	(___lomod@divisor+4)^0,f,c
  2266   00192E  320C               	rrcf	(___lomod@divisor+3)^0,f,c
  2267   001930  320B               	rrcf	(___lomod@divisor+2)^0,f,c
  2268   001932  320A               	rrcf	(___lomod@divisor+1)^0,f,c
  2269   001934  3209               	rrcf	___lomod@divisor^0,f,c
  2270   001936  2E11               	decfsz	___lomod@counter^0,f,c
  2271   001938  EF6B  F00C         	goto	l1796
  2272   00193C                     l608:
  2273   00193C  C001  F001         	movff	___lomod@dividend,?___lomod
  2274   001940  C002  F002         	movff	___lomod@dividend+1,?___lomod+1
  2275   001944  C003  F003         	movff	___lomod@dividend+2,?___lomod+2
  2276   001948  C004  F004         	movff	___lomod@dividend+3,?___lomod+3
  2277   00194C  C005  F005         	movff	___lomod@dividend+4,?___lomod+4
  2278   001950  C006  F006         	movff	___lomod@dividend+5,?___lomod+5
  2279   001954  C007  F007         	movff	___lomod@dividend+6,?___lomod+6
  2280   001958  C008  F008         	movff	___lomod@dividend+7,?___lomod+7
  2281   00195C  0012               	return		;funcret
  2282   00195E                     __end_of___lomod:
  2283                           	callstack 0
  2284                           
  2285 ;; *************** function ___lodiv *****************
  2286 ;; Defined at:
  2287 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\lodiv.c"
  2288 ;; Parameters:    Size  Location     Type
  2289 ;;  dividend        8    0[COMRAM] unsigned long long 
  2290 ;;  divisor         8    8[COMRAM] unsigned long long 
  2291 ;; Auto vars:     Size  Location     Type
  2292 ;;  quotient        8   16[COMRAM] unsigned long long 
  2293 ;;  counter         1   24[COMRAM] unsigned char 
  2294 ;; Return value:  Size  Location     Type
  2295 ;;                  8    0[COMRAM] unsigned long long 
  2296 ;; Registers used:
  2297 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2298 ;; Tracked objects:
  2299 ;;		On entry : 0/0
  2300 ;;		On exit  : 0/0
  2301 ;;		Unchanged: 0/0
  2302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2303 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2304 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2306 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2307 ;;Total ram usage:       25 bytes
  2308 ;; Hardware stack levels used: 1
  2309 ;; This function calls:
  2310 ;;		Nothing
  2311 ;; This function is called by:
  2312 ;;		_utoa
  2313 ;; This function uses a non-reentrant model
  2314 ;;
  2315                           
  2316                           	psect	text11
  2317   0016BE                     __ptext11:
  2318                           	callstack 0
  2319   0016BE                     ___lodiv:
  2320                           	callstack 26
  2321   0016BE  EE20  F011         	lfsr	2,___lodiv@quotient
  2322   0016C2  0E07               	movlw	7
  2323   0016C4                     u991:
  2324   0016C4  6ADE               	clrf	postinc2,c
  2325   0016C6  06E8               	decf	wreg,f,c
  2326   0016C8  E2FD               	bc	u991
  2327   0016CA  5009               	movf	___lodiv@divisor^0,w,c
  2328   0016CC  100A               	iorwf	(___lodiv@divisor+1)^0,w,c
  2329   0016CE  100B               	iorwf	(___lodiv@divisor+2)^0,w,c
  2330   0016D0  100C               	iorwf	(___lodiv@divisor+3)^0,w,c
  2331   0016D2  100D               	iorwf	(___lodiv@divisor+4)^0,w,c
  2332   0016D4  100E               	iorwf	(___lodiv@divisor+5)^0,w,c
  2333   0016D6  100F               	iorwf	(___lodiv@divisor+6)^0,w,c
  2334   0016D8  1010               	iorwf	(___lodiv@divisor+7)^0,w,c
  2335   0016DA  B4D8               	btfsc	status,2,c
  2336   0016DC  EF72  F00B         	goto	u1001
  2337   0016E0  EF74  F00B         	goto	u1000
  2338   0016E4                     u1001:
  2339   0016E4  EFC6  F00B         	goto	l598
  2340   0016E8                     u1000:
  2341   0016E8  0E01               	movlw	1
  2342   0016EA  6E19               	movwf	___lodiv@counter^0,c
  2343   0016EC  EF82  F00B         	goto	l1774
  2344   0016F0                     l1772:
  2345   0016F0  90D8               	bcf	status,0,c
  2346   0016F2  3609               	rlcf	___lodiv@divisor^0,f,c
  2347   0016F4  360A               	rlcf	(___lodiv@divisor+1)^0,f,c
  2348   0016F6  360B               	rlcf	(___lodiv@divisor+2)^0,f,c
  2349   0016F8  360C               	rlcf	(___lodiv@divisor+3)^0,f,c
  2350   0016FA  360D               	rlcf	(___lodiv@divisor+4)^0,f,c
  2351   0016FC  360E               	rlcf	(___lodiv@divisor+5)^0,f,c
  2352   0016FE  360F               	rlcf	(___lodiv@divisor+6)^0,f,c
  2353   001700  3610               	rlcf	(___lodiv@divisor+7)^0,f,c
  2354   001702  2A19               	incf	___lodiv@counter^0,f,c
  2355   001704                     l1774:
  2356   001704  AE10               	btfss	(___lodiv@divisor+7)^0,7,c
  2357   001706  EF87  F00B         	goto	u1011
  2358   00170A  EF89  F00B         	goto	u1010
  2359   00170E                     u1011:
  2360   00170E  EF78  F00B         	goto	l1772
  2361   001712                     u1010:
  2362   001712                     l1776:
  2363   001712  90D8               	bcf	status,0,c
  2364   001714  3611               	rlcf	___lodiv@quotient^0,f,c
  2365   001716  3612               	rlcf	(___lodiv@quotient+1)^0,f,c
  2366   001718  3613               	rlcf	(___lodiv@quotient+2)^0,f,c
  2367   00171A  3614               	rlcf	(___lodiv@quotient+3)^0,f,c
  2368   00171C  3615               	rlcf	(___lodiv@quotient+4)^0,f,c
  2369   00171E  3616               	rlcf	(___lodiv@quotient+5)^0,f,c
  2370   001720  3617               	rlcf	(___lodiv@quotient+6)^0,f,c
  2371   001722  3618               	rlcf	(___lodiv@quotient+7)^0,f,c
  2372   001724  5009               	movf	___lodiv@divisor^0,w,c
  2373   001726  5C01               	subwf	___lodiv@dividend^0,w,c
  2374   001728  500A               	movf	(___lodiv@divisor+1)^0,w,c
  2375   00172A  5802               	subwfb	(___lodiv@dividend+1)^0,w,c
  2376   00172C  500B               	movf	(___lodiv@divisor+2)^0,w,c
  2377   00172E  5803               	subwfb	(___lodiv@dividend+2)^0,w,c
  2378   001730  500C               	movf	(___lodiv@divisor+3)^0,w,c
  2379   001732  5804               	subwfb	(___lodiv@dividend+3)^0,w,c
  2380   001734  500D               	movf	(___lodiv@divisor+4)^0,w,c
  2381   001736  5805               	subwfb	(___lodiv@dividend+4)^0,w,c
  2382   001738  500E               	movf	(___lodiv@divisor+5)^0,w,c
  2383   00173A  5806               	subwfb	(___lodiv@dividend+5)^0,w,c
  2384   00173C  500F               	movf	(___lodiv@divisor+6)^0,w,c
  2385   00173E  5807               	subwfb	(___lodiv@dividend+6)^0,w,c
  2386   001740  5010               	movf	(___lodiv@divisor+7)^0,w,c
  2387   001742  5808               	subwfb	(___lodiv@dividend+7)^0,w,c
  2388   001744  A0D8               	btfss	status,0,c
  2389   001746  EFA7  F00B         	goto	u1021
  2390   00174A  EFA9  F00B         	goto	u1020
  2391   00174E                     u1021:
  2392   00174E  EFBA  F00B         	goto	l1784
  2393   001752                     u1020:
  2394   001752  5009               	movf	___lodiv@divisor^0,w,c
  2395   001754  5E01               	subwf	___lodiv@dividend^0,f,c
  2396   001756  500A               	movf	(___lodiv@divisor+1)^0,w,c
  2397   001758  5A02               	subwfb	(___lodiv@dividend+1)^0,f,c
  2398   00175A  500B               	movf	(___lodiv@divisor+2)^0,w,c
  2399   00175C  5A03               	subwfb	(___lodiv@dividend+2)^0,f,c
  2400   00175E  500C               	movf	(___lodiv@divisor+3)^0,w,c
  2401   001760  5A04               	subwfb	(___lodiv@dividend+3)^0,f,c
  2402   001762  500D               	movf	(___lodiv@divisor+4)^0,w,c
  2403   001764  5A05               	subwfb	(___lodiv@dividend+4)^0,f,c
  2404   001766  500E               	movf	(___lodiv@divisor+5)^0,w,c
  2405   001768  5A06               	subwfb	(___lodiv@dividend+5)^0,f,c
  2406   00176A  500F               	movf	(___lodiv@divisor+6)^0,w,c
  2407   00176C  5A07               	subwfb	(___lodiv@dividend+6)^0,f,c
  2408   00176E  5010               	movf	(___lodiv@divisor+7)^0,w,c
  2409   001770  5A08               	subwfb	(___lodiv@dividend+7)^0,f,c
  2410   001772  8011               	bsf	___lodiv@quotient^0,0,c
  2411   001774                     l1784:
  2412   001774  90D8               	bcf	status,0,c
  2413   001776  3210               	rrcf	(___lodiv@divisor+7)^0,f,c
  2414   001778  320F               	rrcf	(___lodiv@divisor+6)^0,f,c
  2415   00177A  320E               	rrcf	(___lodiv@divisor+5)^0,f,c
  2416   00177C  320D               	rrcf	(___lodiv@divisor+4)^0,f,c
  2417   00177E  320C               	rrcf	(___lodiv@divisor+3)^0,f,c
  2418   001780  320B               	rrcf	(___lodiv@divisor+2)^0,f,c
  2419   001782  320A               	rrcf	(___lodiv@divisor+1)^0,f,c
  2420   001784  3209               	rrcf	___lodiv@divisor^0,f,c
  2421   001786  2E19               	decfsz	___lodiv@counter^0,f,c
  2422   001788  EF89  F00B         	goto	l1776
  2423   00178C                     l598:
  2424   00178C  C011  F001         	movff	___lodiv@quotient,?___lodiv
  2425   001790  C012  F002         	movff	___lodiv@quotient+1,?___lodiv+1
  2426   001794  C013  F003         	movff	___lodiv@quotient+2,?___lodiv+2
  2427   001798  C014  F004         	movff	___lodiv@quotient+3,?___lodiv+3
  2428   00179C  C015  F005         	movff	___lodiv@quotient+4,?___lodiv+4
  2429   0017A0  C016  F006         	movff	___lodiv@quotient+5,?___lodiv+5
  2430   0017A4  C017  F007         	movff	___lodiv@quotient+6,?___lodiv+6
  2431   0017A8  C018  F008         	movff	___lodiv@quotient+7,?___lodiv+7
  2432   0017AC  0012               	return		;funcret
  2433   0017AE                     __end_of___lodiv:
  2434                           	callstack 0
  2435                           
  2436 ;; *************** function _LCD_PutS *****************
  2437 ;; Defined at:
  2438 ;;		line 102 in file "../lcd.c"
  2439 ;; Parameters:    Size  Location     Type
  2440 ;;  _str            2    7[COMRAM] PTR unsigned char 
  2441 ;;		 -> STR_10(17), STR_9(17), STR_8(7), STR_7(7), 
  2442 ;;		 -> STR_6(7), STR_5(7), STR_4(13), STR_3(16), 
  2443 ;;		 -> STR_2(17), STR_1(18), 
  2444 ;; Auto vars:     Size  Location     Type
  2445 ;;  i               1   11[COMRAM] unsigned char 
  2446 ;; Return value:  Size  Location     Type
  2447 ;;                  1    wreg      void 
  2448 ;; Registers used:
  2449 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2450 ;; Tracked objects:
  2451 ;;		On entry : 0/0
  2452 ;;		On exit  : 0/0
  2453 ;;		Unchanged: 0/0
  2454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2455 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2456 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2457 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2458 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2459 ;;Total ram usage:        5 bytes
  2460 ;; Hardware stack levels used: 1
  2461 ;; Hardware stack levels required when called: 4
  2462 ;; This function calls:
  2463 ;;		_WriteByte
  2464 ;;		_WritePin
  2465 ;; This function is called by:
  2466 ;;		_main
  2467 ;; This function uses a non-reentrant model
  2468 ;;
  2469                           
  2470                           	psect	text12
  2471   001B58                     __ptext12:
  2472                           	callstack 0
  2473   001B58                     _LCD_PutS:
  2474                           	callstack 26
  2475   001B58                     
  2476                           ;../lcd.c: 102: void LCD_PutS(char* _str);../lcd.c: 103: {;../lcd.c: 104:   WritePin(LCD
      +                          _RS, 1);
  2477   001B58  0E01               	movlw	1
  2478   001B5A  6E01               	movwf	WritePin@val^0,c
  2479   001B5C  505F               	movf	_LCD_RS^0,w,c
  2480   001B5E  EC75  F00D         	call	_WritePin
  2481   001B62                     
  2482                           ;../lcd.c: 105:   uint8_t i = 0;
  2483   001B62  0E00               	movlw	0
  2484   001B64  6E0C               	movwf	LCD_PutS@i^0,c
  2485                           
  2486                           ;../lcd.c: 106:   while(_str[i] != '\0')
  2487   001B66  EFC6  F00D         	goto	l1994
  2488   001B6A                     l1990:
  2489                           
  2490                           ;../lcd.c: 107:       WriteByte( _str[i++] );
  2491   001B6A  500C               	movf	LCD_PutS@i^0,w,c
  2492   001B6C  2408               	addwf	LCD_PutS@_str^0,w,c
  2493   001B6E  6E0A               	movwf	??_LCD_PutS^0,c
  2494   001B70  0E00               	movlw	0
  2495   001B72  2009               	addwfc	(LCD_PutS@_str+1)^0,w,c
  2496   001B74  6E0B               	movwf	(??_LCD_PutS+1)^0,c
  2497   001B76  0060  F02B  FFF6   	movff	??_LCD_PutS,tblptrl
  2498   001B7C  0060  F02F  FFF7   	movff	??_LCD_PutS+1,tblptrh
  2499   001B82                     	if	0	;tblptru may be non-zero
  2500   001B82                     	endif
  2501   001B82                     	if	0	;tblptru may be non-zero
  2502   001B82                     	endif
  2503   001B82  0008               	tblrd		*
  2504   001B84  50F5               	movf	tablat,w,c
  2505   001B86  ECD5  F00E         	call	_WriteByte
  2506   001B8A  2A0C               	incf	LCD_PutS@i^0,f,c
  2507   001B8C                     l1994:
  2508                           
  2509                           ;../lcd.c: 106:   while(_str[i] != '\0')
  2510   001B8C  500C               	movf	LCD_PutS@i^0,w,c
  2511   001B8E  2408               	addwf	LCD_PutS@_str^0,w,c
  2512   001B90  6E0A               	movwf	??_LCD_PutS^0,c
  2513   001B92  0E00               	movlw	0
  2514   001B94  2009               	addwfc	(LCD_PutS@_str+1)^0,w,c
  2515   001B96  6E0B               	movwf	(??_LCD_PutS+1)^0,c
  2516   001B98  0060  F02B  FFF6   	movff	??_LCD_PutS,tblptrl
  2517   001B9E  0060  F02F  FFF7   	movff	??_LCD_PutS+1,tblptrh
  2518   001BA4                     	if	0	;tblptru may be non-zero
  2519   001BA4                     	endif
  2520   001BA4                     	if	0	;tblptru may be non-zero
  2521   001BA4                     	endif
  2522   001BA4  0008               	tblrd		*
  2523   001BA6  50F5               	movf	tablat,w,c
  2524   001BA8  0900               	iorlw	0
  2525   001BAA  A4D8               	btfss	status,2,c
  2526   001BAC  EFDA  F00D         	goto	u1171
  2527   001BB0  EFDC  F00D         	goto	u1170
  2528   001BB4                     u1171:
  2529   001BB4  EFB5  F00D         	goto	l1990
  2530   001BB8                     u1170:
  2531   001BB8  0012               	return		;funcret
  2532   001BBA                     __end_of_LCD_PutS:
  2533                           	callstack 0
  2534                           
  2535 ;; *************** function _LCD_Goto *****************
  2536 ;; Defined at:
  2537 ;;		line 75 in file "../lcd.c"
  2538 ;; Parameters:    Size  Location     Type
  2539 ;;  col             1    wreg     unsigned char 
  2540 ;;  row             1    7[COMRAM] unsigned char 
  2541 ;; Auto vars:     Size  Location     Type
  2542 ;;  col             1   10[COMRAM] unsigned char 
  2543 ;; Return value:  Size  Location     Type
  2544 ;;                  1    wreg      void 
  2545 ;; Registers used:
  2546 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2547 ;; Tracked objects:
  2548 ;;		On entry : 0/0
  2549 ;;		On exit  : 0/0
  2550 ;;		Unchanged: 0/0
  2551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2552 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2553 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2554 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2555 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2556 ;;Total ram usage:        4 bytes
  2557 ;; Hardware stack levels used: 1
  2558 ;; Hardware stack levels required when called: 4
  2559 ;; This function calls:
  2560 ;;		_WriteByte
  2561 ;;		_WritePin
  2562 ;; This function is called by:
  2563 ;;		_main
  2564 ;; This function uses a non-reentrant model
  2565 ;;
  2566                           
  2567                           	psect	text13
  2568   0019F4                     __ptext13:
  2569                           	callstack 0
  2570   0019F4                     _LCD_Goto:
  2571                           	callstack 26
  2572                           
  2573                           ;incstack = 0
  2574                           ;LCD_Goto@col stored from wreg
  2575   0019F4  6E0B               	movwf	LCD_Goto@col^0,c
  2576   0019F6                     
  2577                           ;../lcd.c: 75: void LCD_Goto(uint8_t col, uint8_t row);../lcd.c: 76: {;../lcd.c: 77:    
      +                           WritePin(LCD_RS, 0);
  2578   0019F6  0E00               	movlw	0
  2579   0019F8  6E01               	movwf	WritePin@val^0,c
  2580   0019FA  505F               	movf	_LCD_RS^0,w,c
  2581   0019FC  EC75  F00D         	call	_WritePin
  2582                           
  2583                           ;../lcd.c: 78:     switch (row)
  2584   001A00  EF1A  F00D         	goto	l1980
  2585   001A04                     l1970:
  2586   001A04  500B               	movf	LCD_Goto@col^0,w,c
  2587   001A06  0F7F               	addlw	127
  2588   001A08  ECD5  F00E         	call	_WriteByte
  2589   001A0C  EF37  F00D         	goto	l101
  2590   001A10                     l1972:
  2591   001A10  500B               	movf	LCD_Goto@col^0,w,c
  2592   001A12  0FBF               	addlw	191
  2593   001A14  ECD5  F00E         	call	_WriteByte
  2594   001A18  EF37  F00D         	goto	l101
  2595   001A1C                     l1974:
  2596   001A1C  500B               	movf	LCD_Goto@col^0,w,c
  2597   001A1E  0F93               	addlw	147
  2598   001A20  ECD5  F00E         	call	_WriteByte
  2599   001A24  EF37  F00D         	goto	l101
  2600   001A28                     l1976:
  2601   001A28  500B               	movf	LCD_Goto@col^0,w,c
  2602   001A2A  0FD3               	addlw	211
  2603   001A2C  ECD5  F00E         	call	_WriteByte
  2604   001A30  EF37  F00D         	goto	l101
  2605   001A34                     l1980:
  2606   001A34  5008               	movf	LCD_Goto@row^0,w,c
  2607   001A36  6E09               	movwf	??_LCD_Goto^0,c
  2608   001A38  6A0A               	clrf	(??_LCD_Goto+1)^0,c
  2609                           
  2610                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2611                           ; Switch size 1, requested type "simple"
  2612                           ; Number of cases is 1, Range of values is 0 to 0
  2613                           ; switch strategies available:
  2614                           ; Name         Instructions Cycles
  2615                           ; simple_byte            4     3 (average)
  2616                           ;	Chosen strategy is simple_byte
  2617   001A3A  500A               	movf	(??_LCD_Goto+1)^0,w,c
  2618   001A3C  0A00               	xorlw	0	; case 0
  2619   001A3E  B4D8               	btfsc	status,2,c
  2620   001A40  EF24  F00D         	goto	l2534
  2621   001A44  EF37  F00D         	goto	l101
  2622   001A48                     l2534:
  2623                           
  2624                           ; Switch size 1, requested type "simple"
  2625                           ; Number of cases is 4, Range of values is 1 to 4
  2626                           ; switch strategies available:
  2627                           ; Name         Instructions Cycles
  2628                           ; simple_byte           13     7 (average)
  2629                           ;	Chosen strategy is simple_byte
  2630   001A48  5009               	movf	??_LCD_Goto^0,w,c
  2631   001A4A  0A01               	xorlw	1	; case 1
  2632   001A4C  B4D8               	btfsc	status,2,c
  2633   001A4E  EF02  F00D         	goto	l1970
  2634   001A52  0A03               	xorlw	3	; case 2
  2635   001A54  B4D8               	btfsc	status,2,c
  2636   001A56  EF08  F00D         	goto	l1972
  2637   001A5A  0A01               	xorlw	1	; case 3
  2638   001A5C  B4D8               	btfsc	status,2,c
  2639   001A5E  EF0E  F00D         	goto	l1974
  2640   001A62  0A07               	xorlw	7	; case 4
  2641   001A64  B4D8               	btfsc	status,2,c
  2642   001A66  EF14  F00D         	goto	l1976
  2643   001A6A  EF37  F00D         	goto	l101
  2644   001A6E                     l101:
  2645   001A6E  0012               	return		;funcret
  2646   001A70                     __end_of_LCD_Goto:
  2647                           	callstack 0
  2648                           
  2649 ;; *************** function _LCD_CursorBlink *****************
  2650 ;; Defined at:
  2651 ;;		line 141 in file "../lcd.c"
  2652 ;; Parameters:    Size  Location     Type
  2653 ;;  __blink         1    wreg     _Bool 
  2654 ;; Auto vars:     Size  Location     Type
  2655 ;;  __blink         1    7[COMRAM] _Bool 
  2656 ;; Return value:  Size  Location     Type
  2657 ;;                  1    wreg      void 
  2658 ;; Registers used:
  2659 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2660 ;; Tracked objects:
  2661 ;;		On entry : 0/0
  2662 ;;		On exit  : 0/0
  2663 ;;		Unchanged: 0/0
  2664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2666 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2668 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2669 ;;Total ram usage:        1 bytes
  2670 ;; Hardware stack levels used: 1
  2671 ;; Hardware stack levels required when called: 4
  2672 ;; This function calls:
  2673 ;;		_WriteByte
  2674 ;;		_WritePin
  2675 ;; This function is called by:
  2676 ;;		_main
  2677 ;; This function uses a non-reentrant model
  2678 ;;
  2679                           
  2680                           	psect	text14
  2681   001CFA                     __ptext14:
  2682                           	callstack 0
  2683   001CFA                     _LCD_CursorBlink:
  2684                           	callstack 26
  2685                           
  2686                           ;incstack = 0
  2687                           ;LCD_CursorBlink@__blink stored from wreg
  2688   001CFA  6E08               	movwf	LCD_CursorBlink@__blink^0,c
  2689   001CFC                     
  2690                           ;../lcd.c: 141: void LCD_CursorBlink(_Bool __blink);../lcd.c: 142: {;../lcd.c: 143:     
      +                          WritePin(LCD_RS, 0);
  2691   001CFC  0E00               	movlw	0
  2692   001CFE  6E01               	movwf	WritePin@val^0,c
  2693   001D00  505F               	movf	_LCD_RS^0,w,c
  2694   001D02  EC75  F00D         	call	_WritePin
  2695   001D06                     
  2696                           ;../lcd.c: 144:     if (__blink)
  2697   001D06  5008               	movf	LCD_CursorBlink@__blink^0,w,c
  2698   001D08  B4D8               	btfsc	status,2,c
  2699   001D0A  EF89  F00E         	goto	u1161
  2700   001D0E  EF8B  F00E         	goto	u1160
  2701   001D12                     u1161:
  2702   001D12  EF8F  F00E         	goto	l1964
  2703   001D16                     u1160:
  2704   001D16                     
  2705                           ;../lcd.c: 145:         _displaycontrol |= 0x01;
  2706   001D16  0100               	movlb	0	; () banked
  2707   001D18  8165               	bsf	__displaycontrol& (0+255),0,b
  2708   001D1A  EF91  F00E         	goto	l1966
  2709   001D1E                     l1964:
  2710                           
  2711                           ;../lcd.c: 147:         _displaycontrol &= ~0x01;
  2712   001D1E  0100               	movlb	0	; () banked
  2713   001D20  9165               	bcf	__displaycontrol& (0+255),0,b
  2714   001D22                     l1966:
  2715                           
  2716                           ; BSR set to: 0
  2717                           ;../lcd.c: 149:     WriteByte( _displaycontrol );
  2718   001D22  5165               	movf	__displaycontrol& (0+255),w,b
  2719   001D24  ECD5  F00E         	call	_WriteByte
  2720   001D28  0012               	return		;funcret
  2721   001D2A                     __end_of_LCD_CursorBlink:
  2722                           	callstack 0
  2723                           
  2724 ;; *************** function _LCD_Begin *****************
  2725 ;; Defined at:
  2726 ;;		line 32 in file "../lcd.c"
  2727 ;; Parameters:    Size  Location     Type
  2728 ;;  cols            1    wreg     unsigned char 
  2729 ;;  lines           1    8[COMRAM] unsigned char 
  2730 ;; Auto vars:     Size  Location     Type
  2731 ;;  cols            1    0[COMRAM] unsigned char 
  2732 ;;  _function_se    1   11[COMRAM] unsigned char 
  2733 ;; Return value:  Size  Location     Type
  2734 ;;                  1    wreg      void 
  2735 ;; Registers used:
  2736 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2737 ;; Tracked objects:
  2738 ;;		On entry : 0/0
  2739 ;;		On exit  : 0/0
  2740 ;;		Unchanged: 0/0
  2741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2742 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2743 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2744 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2745 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2746 ;;Total ram usage:        4 bytes
  2747 ;; Hardware stack levels used: 1
  2748 ;; Hardware stack levels required when called: 5
  2749 ;; This function calls:
  2750 ;;		_LCD_Clear
  2751 ;;		_WriteByte
  2752 ;;		_WriteNibble
  2753 ;;		_WritePin
  2754 ;; This function is called by:
  2755 ;;		_main
  2756 ;; This function uses a non-reentrant model
  2757 ;;
  2758                           
  2759                           	psect	text15
  2760   0017AE                     __ptext15:
  2761                           	callstack 0
  2762   0017AE                     _LCD_Begin:
  2763                           	callstack 25
  2764   0017AE                     
  2765                           ;../lcd.c: 32: void LCD_Begin(uint8_t cols, uint8_t lines);../lcd.c: 33: {;../lcd.c: 34:
      +                               uint8_t _function_set = 0x20;
  2766   0017AE  0E20               	movlw	32
  2767   0017B0  6E0C               	movwf	LCD_Begin@_function_set^0,c
  2768   0017B2                     
  2769                           ;../lcd.c: 36:     WritePin(LCD_RS, 0);
  2770   0017B2  0E00               	movlw	0
  2771   0017B4  6E01               	movwf	WritePin@val^0,c
  2772   0017B6  505F               	movf	_LCD_RS^0,w,c
  2773   0017B8  EC75  F00D         	call	_WritePin
  2774   0017BC                     
  2775                           ;../lcd.c: 37:     WritePin(LCD_EN, 0);
  2776   0017BC  0E00               	movlw	0
  2777   0017BE  6E01               	movwf	WritePin@val^0,c
  2778   0017C0  0100               	movlb	0	; () banked
  2779   0017C2  519A               	movf	_LCD_EN& (0+255),w,b
  2780   0017C4  EC75  F00D         	call	_WritePin
  2781   0017C8                     
  2782                           ;../lcd.c: 38:     WritePin(LCD_D4, 0);
  2783   0017C8  0E00               	movlw	0
  2784   0017CA  6E01               	movwf	WritePin@val^0,c
  2785   0017CC  0100               	movlb	0	; () banked
  2786   0017CE  5199               	movf	_LCD_D4& (0+255),w,b
  2787   0017D0  EC75  F00D         	call	_WritePin
  2788   0017D4                     
  2789                           ;../lcd.c: 39:     WritePin(LCD_D5, 0);
  2790   0017D4  0E00               	movlw	0
  2791   0017D6  6E01               	movwf	WritePin@val^0,c
  2792   0017D8  0100               	movlb	0	; () banked
  2793   0017DA  5198               	movf	_LCD_D5& (0+255),w,b
  2794   0017DC  EC75  F00D         	call	_WritePin
  2795   0017E0                     
  2796                           ;../lcd.c: 40:     WritePin(LCD_D6, 0);
  2797   0017E0  0E00               	movlw	0
  2798   0017E2  6E01               	movwf	WritePin@val^0,c
  2799   0017E4  0100               	movlb	0	; () banked
  2800   0017E6  5197               	movf	_LCD_D6& (0+255),w,b
  2801   0017E8  EC75  F00D         	call	_WritePin
  2802   0017EC                     
  2803                           ;../lcd.c: 41:     WritePin(LCD_D7, 0);
  2804   0017EC  0E00               	movlw	0
  2805   0017EE  6E01               	movwf	WritePin@val^0,c
  2806   0017F0  0100               	movlb	0	; () banked
  2807   0017F2  5196               	movf	_LCD_D7& (0+255),w,b
  2808   0017F4  EC75  F00D         	call	_WritePin
  2809   0017F8                     
  2810                           ;../lcd.c: 43:     _delay((unsigned long)((2000)*(_XTAL_FREQ/4000.0)));
  2811   0017F8  0E15               	movlw	21
  2812   0017FA  6E0B               	movwf	(??_LCD_Begin+1)^0,c
  2813   0017FC  0E4B               	movlw	75
  2814   0017FE  6E0A               	movwf	??_LCD_Begin^0,c
  2815   001800  0EBE               	movlw	190
  2816   001802                     u1927:
  2817   001802  2EE8               	decfsz	wreg,f,c
  2818   001804  D7FE               	bra	u1927
  2819   001806  2E0A               	decfsz	??_LCD_Begin^0,f,c
  2820   001808  D7FC               	bra	u1927
  2821   00180A  2E0B               	decfsz	(??_LCD_Begin+1)^0,f,c
  2822   00180C  D7FA               	bra	u1927
  2823   00180E  D000               	nop2	
  2824   001810                     
  2825                           ;../lcd.c: 45:     if (lines > 1) {
  2826   001810  0E01               	movlw	1
  2827   001812  6409               	cpfsgt	LCD_Begin@lines^0,c
  2828   001814  EF0E  F00C         	goto	u1151
  2829   001818  EF10  F00C         	goto	u1150
  2830   00181C                     u1151:
  2831   00181C  EF11  F00C         	goto	l1930
  2832   001820                     u1150:
  2833   001820                     
  2834                           ;../lcd.c: 46:         _function_set |= 0x08;
  2835   001820  860C               	bsf	LCD_Begin@_function_set^0,3,c
  2836   001822                     l1930:
  2837                           
  2838                           ;../lcd.c: 52:     WriteNibble(0x03);
  2839   001822  0E03               	movlw	3
  2840   001824  EC28  F00E         	call	_WriteNibble
  2841   001828                     
  2842                           ;../lcd.c: 53:     _delay((unsigned long)((5)*(_XTAL_FREQ/4000.0)));
  2843   001828  0E0D               	movlw	13
  2844   00182A  6E0A               	movwf	??_LCD_Begin^0,c
  2845   00182C  0EFC               	movlw	252
  2846   00182E                     u1937:
  2847   00182E  2EE8               	decfsz	wreg,f,c
  2848   001830  D7FE               	bra	u1937
  2849   001832  2E0A               	decfsz	??_LCD_Begin^0,f,c
  2850   001834  D7FC               	bra	u1937
  2851   001836                     
  2852                           ;../lcd.c: 54:     WriteNibble(0x03);
  2853   001836  0E03               	movlw	3
  2854   001838  EC28  F00E         	call	_WriteNibble
  2855   00183C                     
  2856                           ;../lcd.c: 55:     _delay((unsigned long)((200)*(_XTAL_FREQ/4000000.0)));
  2857   00183C  0E85               	movlw	133
  2858   00183E                     u1947:
  2859   00183E  2EE8               	decfsz	wreg,f,c
  2860   001840  D7FE               	bra	u1947
  2861   001842  F000               	nop	
  2862   001844                     
  2863                           ;../lcd.c: 56:     WriteNibble(0x03);
  2864   001844  0E03               	movlw	3
  2865   001846  EC28  F00E         	call	_WriteNibble
  2866   00184A                     
  2867                           ;../lcd.c: 57:     _delay((unsigned long)((100)*(_XTAL_FREQ/4000000.0)));
  2868   00184A  0E42               	movlw	66
  2869   00184C                     u1957:
  2870   00184C  2EE8               	decfsz	wreg,f,c
  2871   00184E  D7FE               	bra	u1957
  2872   001850  D000               	nop2	
  2873   001852                     
  2874                           ;../lcd.c: 58:     WriteNibble(0x02);
  2875   001852  0E02               	movlw	2
  2876   001854  EC28  F00E         	call	_WriteNibble
  2877   001858                     
  2878                           ;../lcd.c: 59:     _delay((unsigned long)((100)*(_XTAL_FREQ/4000000.0)));
  2879   001858  0E42               	movlw	66
  2880   00185A                     u1967:
  2881   00185A  2EE8               	decfsz	wreg,f,c
  2882   00185C  D7FE               	bra	u1967
  2883   00185E  D000               	nop2	
  2884   001860                     
  2885                           ;../lcd.c: 61:     WriteByte( _function_set );
  2886   001860  500C               	movf	LCD_Begin@_function_set^0,w,c
  2887   001862  ECD5  F00E         	call	_WriteByte
  2888   001866                     
  2889                           ;../lcd.c: 64:     WriteByte( 0x08 | 0x04 );
  2890   001866  0E0C               	movlw	12
  2891   001868  ECD5  F00E         	call	_WriteByte
  2892   00186C                     
  2893                           ;../lcd.c: 67:     LCD_Clear();
  2894   00186C  ECA9  F00E         	call	_LCD_Clear	;wreg free
  2895   001870                     
  2896                           ;../lcd.c: 69:     WriteByte( 0x04 | 0x02 );
  2897   001870  0E06               	movlw	6
  2898   001872  ECD5  F00E         	call	_WriteByte
  2899   001876                     
  2900                           ;../lcd.c: 70:     _delay((unsigned long)((2)*(_XTAL_FREQ/4000.0)));
  2901   001876  0E06               	movlw	6
  2902   001878  6E0A               	movwf	??_LCD_Begin^0,c
  2903   00187A  0E30               	movlw	48
  2904   00187C                     u1977:
  2905   00187C  2EE8               	decfsz	wreg,f,c
  2906   00187E  D7FE               	bra	u1977
  2907   001880  2E0A               	decfsz	??_LCD_Begin^0,f,c
  2908   001882  D7FC               	bra	u1977
  2909   001884  D000               	nop2	
  2910   001886                     
  2911                           ;../lcd.c: 71:     _displaycontrol = 0x08 | 0x04;
  2912   001886  0E0C               	movlw	12
  2913   001888  0100               	movlb	0	; () banked
  2914   00188A  6F65               	movwf	__displaycontrol& (0+255),b
  2915   00188C                     
  2916                           ; BSR set to: 0
  2917   00188C  0012               	return		;funcret
  2918   00188E                     __end_of_LCD_Begin:
  2919                           	callstack 0
  2920                           
  2921 ;; *************** function _LCD_Clear *****************
  2922 ;; Defined at:
  2923 ;;		line 88 in file "../lcd.c"
  2924 ;; Parameters:    Size  Location     Type
  2925 ;;		None
  2926 ;; Auto vars:     Size  Location     Type
  2927 ;;		None
  2928 ;; Return value:  Size  Location     Type
  2929 ;;                  1    wreg      void 
  2930 ;; Registers used:
  2931 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2932 ;; Tracked objects:
  2933 ;;		On entry : 0/0
  2934 ;;		On exit  : 0/0
  2935 ;;		Unchanged: 0/0
  2936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2939 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2940 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2941 ;;Total ram usage:        1 bytes
  2942 ;; Hardware stack levels used: 1
  2943 ;; Hardware stack levels required when called: 4
  2944 ;; This function calls:
  2945 ;;		_WriteByte
  2946 ;;		_WritePin
  2947 ;; This function is called by:
  2948 ;;		_main
  2949 ;;		_LCD_Begin
  2950 ;; This function uses a non-reentrant model
  2951 ;;
  2952                           
  2953                           	psect	text16
  2954   001D52                     __ptext16:
  2955                           	callstack 0
  2956   001D52                     _LCD_Clear:
  2957                           	callstack 26
  2958   001D52                     
  2959                           ;../lcd.c: 90:     WritePin(LCD_RS, 0);
  2960   001D52  0E00               	movlw	0
  2961   001D54  6E01               	movwf	WritePin@val^0,c
  2962   001D56  505F               	movf	_LCD_RS^0,w,c
  2963   001D58  EC75  F00D         	call	_WritePin
  2964                           
  2965                           ;../lcd.c: 91:     WriteByte( 0x01 );
  2966   001D5C  0E01               	movlw	1
  2967   001D5E  ECD5  F00E         	call	_WriteByte
  2968   001D62                     
  2969                           ;../lcd.c: 92:     _delay((unsigned long)((2)*(_XTAL_FREQ/4000.0)));
  2970   001D62  0E06               	movlw	6
  2971   001D64  6E08               	movwf	??_LCD_Clear^0,c
  2972   001D66  0E30               	movlw	48
  2973   001D68                     u1987:
  2974   001D68  2EE8               	decfsz	wreg,f,c
  2975   001D6A  D7FE               	bra	u1987
  2976   001D6C  2E08               	decfsz	??_LCD_Clear^0,f,c
  2977   001D6E  D7FC               	bra	u1987
  2978   001D70  D000               	nop2	
  2979   001D72  0012               	return		;funcret
  2980   001D74                     __end_of_LCD_Clear:
  2981                           	callstack 0
  2982                           
  2983 ;; *************** function _WriteByte *****************
  2984 ;; Defined at:
  2985 ;;		line 202 in file "../lcd.c"
  2986 ;; Parameters:    Size  Location     Type
  2987 ;;  b               1    wreg     unsigned char 
  2988 ;; Auto vars:     Size  Location     Type
  2989 ;;  b               1    6[COMRAM] unsigned char 
  2990 ;; Return value:  Size  Location     Type
  2991 ;;                  1    wreg      void 
  2992 ;; Registers used:
  2993 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2994 ;; Tracked objects:
  2995 ;;		On entry : 0/0
  2996 ;;		On exit  : 0/0
  2997 ;;		Unchanged: 0/0
  2998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3000 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3002 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3003 ;;Total ram usage:        1 bytes
  3004 ;; Hardware stack levels used: 1
  3005 ;; Hardware stack levels required when called: 3
  3006 ;; This function calls:
  3007 ;;		_WriteNibble
  3008 ;; This function is called by:
  3009 ;;		_LCD_Begin
  3010 ;;		_LCD_Goto
  3011 ;;		_LCD_Clear
  3012 ;;		_LCD_PutC
  3013 ;;		_LCD_PutS
  3014 ;;		_LCD_CursorBlink
  3015 ;;		_LCD_Display
  3016 ;;		_LCD_CursorUnderline
  3017 ;;		_LCD_ShiftLeft
  3018 ;;		_LCD_ShiftRight
  3019 ;;		_LCD_MoveCursorLeft
  3020 ;;		_LCD_MoveCursorRight
  3021 ;;		_LCD_ReturnHome
  3022 ;; This function uses a non-reentrant model
  3023 ;;
  3024                           
  3025                           	psect	text17
  3026   001DAA                     __ptext17:
  3027                           	callstack 0
  3028   001DAA                     _WriteByte:
  3029                           	callstack 18
  3030                           
  3031                           ;incstack = 0
  3032                           ;WriteByte@b stored from wreg
  3033   001DAA  6E07               	movwf	WriteByte@b^0,c
  3034   001DAC                     
  3035                           ;../lcd.c: 202: void WriteByte(uint8_t b);../lcd.c: 203: {;../lcd.c: 204:     WriteNibbl
      +                          e( b >> 4);
  3036   001DAC  3807               	swapf	WriteByte@b^0,w,c
  3037   001DAE  0B0F               	andlw	15
  3038   001DB0  EC28  F00E         	call	_WriteNibble
  3039                           
  3040                           ;../lcd.c: 205:     WriteNibble(b);
  3041   001DB4  5007               	movf	WriteByte@b^0,w,c
  3042   001DB6  EC28  F00E         	call	_WriteNibble
  3043   001DBA  0012               	return		;funcret
  3044   001DBC                     __end_of_WriteByte:
  3045                           	callstack 0
  3046                           
  3047 ;; *************** function _WriteNibble *****************
  3048 ;; Defined at:
  3049 ;;		line 190 in file "../lcd.c"
  3050 ;; Parameters:    Size  Location     Type
  3051 ;;  b               1    wreg     unsigned char 
  3052 ;; Auto vars:     Size  Location     Type
  3053 ;;  b               1    5[COMRAM] unsigned char 
  3054 ;; Return value:  Size  Location     Type
  3055 ;;                  1    wreg      void 
  3056 ;; Registers used:
  3057 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3058 ;; Tracked objects:
  3059 ;;		On entry : 0/0
  3060 ;;		On exit  : 0/0
  3061 ;;		Unchanged: 0/0
  3062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3064 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3066 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3067 ;;Total ram usage:        1 bytes
  3068 ;; Hardware stack levels used: 1
  3069 ;; Hardware stack levels required when called: 2
  3070 ;; This function calls:
  3071 ;;		_EnablePulse
  3072 ;;		_WritePin
  3073 ;; This function is called by:
  3074 ;;		_LCD_Begin
  3075 ;;		_WriteByte
  3076 ;; This function uses a non-reentrant model
  3077 ;;
  3078                           
  3079                           	psect	text18
  3080   001C50                     __ptext18:
  3081                           	callstack 0
  3082   001C50                     _WriteNibble:
  3083                           	callstack 18
  3084                           
  3085                           ;incstack = 0
  3086                           ;WriteNibble@b stored from wreg
  3087   001C50  6E06               	movwf	WriteNibble@b^0,c
  3088   001C52                     
  3089                           ;../lcd.c: 190: void WriteNibble(uint8_t b);../lcd.c: 191: {;../lcd.c: 192:     WritePin
      +                          ( LCD_D4, (b & 0x01) );
  3090   001C52  5006               	movf	WriteNibble@b^0,w,c
  3091   001C54  0B01               	andlw	1
  3092   001C56  6E01               	movwf	WritePin@val^0,c
  3093   001C58  0100               	movlb	0	; () banked
  3094   001C5A  5199               	movf	_LCD_D4& (0+255),w,b
  3095   001C5C  EC75  F00D         	call	_WritePin
  3096                           
  3097                           ;../lcd.c: 193:     WritePin( LCD_D5, (b & 0x02) );
  3098   001C60  5006               	movf	WriteNibble@b^0,w,c
  3099   001C62  0B02               	andlw	2
  3100   001C64  6E01               	movwf	WritePin@val^0,c
  3101   001C66  0100               	movlb	0	; () banked
  3102   001C68  5198               	movf	_LCD_D5& (0+255),w,b
  3103   001C6A  EC75  F00D         	call	_WritePin
  3104                           
  3105                           ;../lcd.c: 194:     WritePin( LCD_D6, (b & 0x04) );
  3106   001C6E  5006               	movf	WriteNibble@b^0,w,c
  3107   001C70  0B04               	andlw	4
  3108   001C72  6E01               	movwf	WritePin@val^0,c
  3109   001C74  0100               	movlb	0	; () banked
  3110   001C76  5197               	movf	_LCD_D6& (0+255),w,b
  3111   001C78  EC75  F00D         	call	_WritePin
  3112                           
  3113                           ;../lcd.c: 195:     WritePin( LCD_D7, (b & 0x08) );
  3114   001C7C  5006               	movf	WriteNibble@b^0,w,c
  3115   001C7E  0B08               	andlw	8
  3116   001C80  6E01               	movwf	WritePin@val^0,c
  3117   001C82  0100               	movlb	0	; () banked
  3118   001C84  5196               	movf	_LCD_D7& (0+255),w,b
  3119   001C86  EC75  F00D         	call	_WritePin
  3120                           
  3121                           ;../lcd.c: 198:     EnablePulse();
  3122   001C8A  EC64  F00E         	call	_EnablePulse	;wreg free
  3123   001C8E  0012               	return		;funcret
  3124   001C90                     __end_of_WriteNibble:
  3125                           	callstack 0
  3126                           
  3127 ;; *************** function _EnablePulse *****************
  3128 ;; Defined at:
  3129 ;;		line 209 in file "../lcd.c"
  3130 ;; Parameters:    Size  Location     Type
  3131 ;;		None
  3132 ;; Auto vars:     Size  Location     Type
  3133 ;;		None
  3134 ;; Return value:  Size  Location     Type
  3135 ;;                  1    wreg      void 
  3136 ;; Registers used:
  3137 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3138 ;; Tracked objects:
  3139 ;;		On entry : 0/0
  3140 ;;		On exit  : 0/0
  3141 ;;		Unchanged: 0/0
  3142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3147 ;;Total ram usage:        0 bytes
  3148 ;; Hardware stack levels used: 1
  3149 ;; Hardware stack levels required when called: 1
  3150 ;; This function calls:
  3151 ;;		_WritePin
  3152 ;; This function is called by:
  3153 ;;		_WriteNibble
  3154 ;; This function uses a non-reentrant model
  3155 ;;
  3156                           
  3157                           	psect	text19
  3158   001CC8                     __ptext19:
  3159                           	callstack 0
  3160   001CC8                     _EnablePulse:
  3161                           	callstack 18
  3162   001CC8                     
  3163                           ;../lcd.c: 211:     WritePin(LCD_EN, 0);
  3164   001CC8  0E00               	movlw	0
  3165   001CCA  6E01               	movwf	WritePin@val^0,c
  3166   001CCC  0100               	movlb	0	; () banked
  3167   001CCE  519A               	movf	_LCD_EN& (0+255),w,b
  3168   001CD0  EC75  F00D         	call	_WritePin
  3169   001CD4                     
  3170                           ;../lcd.c: 212:     _delay((unsigned long)((1)*(_XTAL_FREQ/4000000.0)));
  3171   001CD4  D000               	nop2		;2 cycle nop
  3172                           
  3173                           ;../lcd.c: 213:     WritePin(LCD_EN, 1);
  3174   001CD6  0E01               	movlw	1
  3175   001CD8  6E01               	movwf	WritePin@val^0,c
  3176   001CDA  0100               	movlb	0	; () banked
  3177   001CDC  519A               	movf	_LCD_EN& (0+255),w,b
  3178   001CDE  EC75  F00D         	call	_WritePin
  3179   001CE2                     
  3180                           ;../lcd.c: 214:     _delay((unsigned long)((1)*(_XTAL_FREQ/4000000.0)));
  3181   001CE2  D000               	nop2		;2 cycle nop
  3182                           
  3183                           ;../lcd.c: 215:     WritePin(LCD_EN, 0);
  3184   001CE4  0E00               	movlw	0
  3185   001CE6  6E01               	movwf	WritePin@val^0,c
  3186   001CE8  0100               	movlb	0	; () banked
  3187   001CEA  519A               	movf	_LCD_EN& (0+255),w,b
  3188   001CEC  EC75  F00D         	call	_WritePin
  3189   001CF0                     
  3190                           ;../lcd.c: 216:     _delay((unsigned long)((100)*(_XTAL_FREQ/4000000.0)));
  3191   001CF0  0E42               	movlw	66
  3192   001CF2                     u1997:
  3193   001CF2  2EE8               	decfsz	wreg,f,c
  3194   001CF4  D7FE               	bra	u1997
  3195   001CF6  D000               	nop2	
  3196   001CF8  0012               	return		;funcret
  3197   001CFA                     __end_of_EnablePulse:
  3198                           	callstack 0
  3199                           
  3200 ;; *************** function _WritePin *****************
  3201 ;; Defined at:
  3202 ;;		line 220 in file "../lcd.c"
  3203 ;; Parameters:    Size  Location     Type
  3204 ;;  _pin            1    wreg     unsigned char 
  3205 ;;  val             1    0[COMRAM] unsigned char 
  3206 ;; Auto vars:     Size  Location     Type
  3207 ;;  _pin            1    4[COMRAM] unsigned char 
  3208 ;; Return value:  Size  Location     Type
  3209 ;;                  1    wreg      void 
  3210 ;; Registers used:
  3211 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3212 ;; Tracked objects:
  3213 ;;		On entry : 0/0
  3214 ;;		On exit  : 0/0
  3215 ;;		Unchanged: 0/0
  3216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3217 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3218 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3219 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3220 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3221 ;;Total ram usage:        5 bytes
  3222 ;; Hardware stack levels used: 1
  3223 ;; This function calls:
  3224 ;;		Nothing
  3225 ;; This function is called by:
  3226 ;;		_LCD_Begin
  3227 ;;		_LCD_Goto
  3228 ;;		_LCD_Clear
  3229 ;;		_LCD_PutC
  3230 ;;		_LCD_PutS
  3231 ;;		_LCD_CursorBlink
  3232 ;;		_WriteNibble
  3233 ;;		_EnablePulse
  3234 ;;		_LCD_Display
  3235 ;;		_LCD_CursorUnderline
  3236 ;;		_LCD_ShiftLeft
  3237 ;;		_LCD_ShiftRight
  3238 ;;		_LCD_MoveCursorLeft
  3239 ;;		_LCD_MoveCursorRight
  3240 ;;		_LCD_ReturnHome
  3241 ;; This function uses a non-reentrant model
  3242 ;;
  3243                           
  3244                           	psect	text20
  3245   001AEA                     __ptext20:
  3246                           	callstack 0
  3247   001AEA                     _WritePin:
  3248                           	callstack 21
  3249                           
  3250                           ;incstack = 0
  3251                           ;WritePin@_pin stored from wreg
  3252   001AEA  6E05               	movwf	WritePin@_pin^0,c
  3253   001AEC                     
  3254                           ;../lcd.c: 220: void WritePin(uint8_t _pin, uint8_t val);../lcd.c: 221: {;../lcd.c: 222:
      +                               if (val)
  3255   001AEC  5001               	movf	WritePin@val^0,w,c
  3256   001AEE  B4D8               	btfsc	status,2,c
  3257   001AF0  EF7C  F00D         	goto	u911
  3258   001AF4  EF7E  F00D         	goto	u910
  3259   001AF8                     u911:
  3260   001AF8  EF94  F00D         	goto	l1726
  3261   001AFC                     u910:
  3262   001AFC                     
  3263                           ;../lcd.c: 223:         *_port |= (1 << _pin);
  3264   001AFC  C005  F002         	movff	WritePin@_pin,??_WritePin
  3265   001B00  0E01               	movlw	1
  3266   001B02  6E03               	movwf	(??_WritePin+1)^0,c
  3267   001B04  2A02               	incf	??_WritePin^0,f,c
  3268   001B06  EF87  F00D         	goto	u924
  3269   001B0A                     u925:
  3270   001B0A  90D8               	bcf	status,0,c
  3271   001B0C  3603               	rlcf	(??_WritePin+1)^0,f,c
  3272   001B0E                     u924:
  3273   001B0E  2E02               	decfsz	??_WritePin^0,f,c
  3274   001B10  EF85  F00D         	goto	u925
  3275   001B14  0060  F253  FFD9   	movff	__port,fsr2l
  3276   001B1A  0060  F257  FFDA   	movff	__port+1,fsr2h
  3277   001B20  5003               	movf	(??_WritePin+1)^0,w,c
  3278   001B22  12DF               	iorwf	indf2,f,c
  3279   001B24  EFAB  F00D         	goto	l157
  3280   001B28                     l1726:
  3281                           
  3282                           ;../lcd.c: 225:         *_port &= ~(1 << _pin);
  3283   001B28  C005  F002         	movff	WritePin@_pin,??_WritePin
  3284   001B2C  0E01               	movlw	1
  3285   001B2E  6E03               	movwf	(??_WritePin+1)^0,c
  3286   001B30  2A02               	incf	??_WritePin^0,f,c
  3287   001B32  EF9D  F00D         	goto	u934
  3288   001B36                     u935:
  3289   001B36  90D8               	bcf	status,0,c
  3290   001B38  3603               	rlcf	(??_WritePin+1)^0,f,c
  3291   001B3A                     u934:
  3292   001B3A  2E02               	decfsz	??_WritePin^0,f,c
  3293   001B3C  EF9B  F00D         	goto	u935
  3294   001B40  5003               	movf	(??_WritePin+1)^0,w,c
  3295   001B42  0AFF               	xorlw	255
  3296   001B44  6E04               	movwf	(??_WritePin+2)^0,c
  3297   001B46  0060  F253  FFD9   	movff	__port,fsr2l
  3298   001B4C  0060  F257  FFDA   	movff	__port+1,fsr2h
  3299   001B52  5004               	movf	(??_WritePin+2)^0,w,c
  3300   001B54  16DF               	andwf	indf2,f,c
  3301   001B56                     l157:
  3302   001B56  0012               	return		;funcret
  3303   001B58                     __end_of_WritePin:
  3304                           	callstack 0
  3305                           
  3306 ;; *************** function _LCD *****************
  3307 ;; Defined at:
  3308 ;;		line 19 in file "../lcd.c"
  3309 ;; Parameters:    Size  Location     Type
  3310 ;;  _p              2    0[COMRAM] PTR volatile unsigned ch
  3311 ;;		 -> LATD(1), 
  3312 ;;  rs              1    2[COMRAM] unsigned char 
  3313 ;;  en              1    3[COMRAM] unsigned char 
  3314 ;;  d4              1    4[COMRAM] unsigned char 
  3315 ;;  d5              1    5[COMRAM] unsigned char 
  3316 ;;  d6              1    6[COMRAM] unsigned char 
  3317 ;;  d7              1    7[COMRAM] unsigned char 
  3318 ;; Auto vars:     Size  Location     Type
  3319 ;;		None
  3320 ;; Return value:  Size  Location     Type
  3321 ;;                  1    wreg      void 
  3322 ;; Registers used:
  3323 ;;		wreg, status,2, status,0
  3324 ;; Tracked objects:
  3325 ;;		On entry : 0/0
  3326 ;;		On exit  : 0/0
  3327 ;;		Unchanged: 0/0
  3328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3329 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3332 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3333 ;;Total ram usage:        8 bytes
  3334 ;; Hardware stack levels used: 1
  3335 ;; This function calls:
  3336 ;;		Nothing
  3337 ;; This function is called by:
  3338 ;;		_main
  3339 ;; This function uses a non-reentrant model
  3340 ;;
  3341                           
  3342                           	psect	text21
  3343   001D74                     __ptext21:
  3344                           	callstack 0
  3345   001D74                     _LCD:
  3346                           	callstack 30
  3347   001D74                     
  3348                           ;../lcd.c: 19: void LCD(volatile unsigned char *_p, uint8_t rs, uint8_t en, uint8_t d4,;
      +                          ../lcd.c: 20:         uint8_t d5, uint8_t d6, uint8_t d7);../lcd.c: 21: {;../lcd.c: 22: 
      +                              _port = _p;
  3349   001D74  C001  F094         	movff	LCD@_p,__port
  3350   001D78  C002  F095         	movff	LCD@_p+1,__port+1
  3351   001D7C                     
  3352                           ;../lcd.c: 23:     LCD_RS = rs;
  3353   001D7C  C003  F05F         	movff	LCD@rs,_LCD_RS
  3354   001D80                     
  3355                           ;../lcd.c: 24:     LCD_EN = en;
  3356   001D80  C004  F09A         	movff	LCD@en,_LCD_EN
  3357   001D84                     
  3358                           ;../lcd.c: 25:     LCD_D4 = d4;
  3359   001D84  C005  F099         	movff	LCD@d4,_LCD_D4
  3360   001D88                     
  3361                           ;../lcd.c: 26:     LCD_D5 = d5;
  3362   001D88  C006  F098         	movff	LCD@d5,_LCD_D5
  3363   001D8C                     
  3364                           ;../lcd.c: 27:     LCD_D6 = d6;
  3365   001D8C  C007  F097         	movff	LCD@d6,_LCD_D6
  3366   001D90                     
  3367                           ;../lcd.c: 28:     LCD_D7 = d7;
  3368   001D90  C008  F096         	movff	LCD@d7,_LCD_D7
  3369   001D94  0012               	return		;funcret
  3370   001D96                     __end_of_LCD:
  3371                           	callstack 0
  3372                           
  3373                           	psect	rparam
  3374   000000                     
  3375                           	psect	idloc
  3376                           
  3377                           ;Config register IDLOC0 @ 0x200000
  3378                           ;	unspecified, using default values
  3379   200000                     	org	2097152
  3380   200000  0FFF               	dw	4095
  3381                           
  3382                           ;Config register IDLOC1 @ 0x200002
  3383                           ;	unspecified, using default values
  3384   200002                     	org	2097154
  3385   200002  0FFF               	dw	4095
  3386                           
  3387                           ;Config register IDLOC2 @ 0x200004
  3388                           ;	unspecified, using default values
  3389   200004                     	org	2097156
  3390   200004  0FFF               	dw	4095
  3391                           
  3392                           ;Config register IDLOC3 @ 0x200006
  3393                           ;	unspecified, using default values
  3394   200006                     	org	2097158
  3395   200006  0FFF               	dw	4095
  3396                           
  3397                           ;Config register IDLOC4 @ 0x200008
  3398                           ;	unspecified, using default values
  3399   200008                     	org	2097160
  3400   200008  0FFF               	dw	4095
  3401                           
  3402                           ;Config register IDLOC5 @ 0x20000A
  3403                           ;	unspecified, using default values
  3404   20000A                     	org	2097162
  3405   20000A  0FFF               	dw	4095
  3406                           
  3407                           ;Config register IDLOC6 @ 0x20000C
  3408                           ;	unspecified, using default values
  3409   20000C                     	org	2097164
  3410   20000C  0FFF               	dw	4095
  3411                           
  3412                           ;Config register IDLOC7 @ 0x20000E
  3413                           ;	unspecified, using default values
  3414   20000E                     	org	2097166
  3415   20000E  0FFF               	dw	4095
  3416                           
  3417                           	psect	config
  3418                           
  3419                           ;Config register CONFIG1L @ 0x300000
  3420                           ;	External Oscillator Selection
  3421                           ;	FEXTOSC = OFF, Oscillator not enabled
  3422                           ;	Reset Oscillator Selection
  3423                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
  3424   300000                     	org	3145728
  3425   300000  8C                 	db	140
  3426                           
  3427                           ;Config register CONFIG1H @ 0x300001
  3428                           ;	Clock out Enable bit
  3429                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  3430                           ;	PRLOCKED One-Way Set Enable bit
  3431                           ;	PR1WAY = OFF, PRLOCK bit can be set and cleared repeatedly
  3432                           ;	Clock Switch Enable bit
  3433                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  3434                           ;	Fail-Safe Clock Monitor Enable bit
  3435                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3436   300001                     	org	3145729
  3437   300001  DD                 	db	221
  3438                           
  3439                           ;Config register CONFIG2L @ 0x300002
  3440                           ;	MCLR Enable bit
  3441                           ;	MCLRE = INTMCLR, If LVP = 0, MCLR pin function is port defined function; If LVP =1, RE
      +                          3 pin fuction is MCLR
  3442                           ;	Power-up timer selection bits
  3443                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  3444                           ;	Multi-vector enable bit
  3445                           ;	MVECEN = OFF, Interrupt contoller does not use vector table to prioritze interrupts
  3446                           ;	IVTLOCK bit One-way set enable bit
  3447                           ;	IVT1WAY = OFF, IVTLOCK bit can be cleared and set repeatedly
  3448                           ;	Low Power BOR Enable bit
  3449                           ;	LPBOREN = OFF, ULPBOR disabled
  3450                           ;	Brown-out Reset Enable bits
  3451                           ;	BOREN = OFF, Brown-out Reset disabled
  3452   300002                     	org	3145730
  3453   300002  26                 	db	38
  3454                           
  3455                           ;Config register CONFIG2H @ 0x300003
  3456                           ;	Brown-out Reset Voltage Selection bits
  3457                           ;	BORV = VBOR_2P45, Brown-out Reset Voltage (VBOR) set to 2.45V
  3458                           ;	ZCD Disable bit
  3459                           ;	ZCD = OFF, ZCD disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCDCON
  3460                           ;	PPSLOCK bit One-Way Set Enable bit
  3461                           ;	PPS1WAY = OFF, PPSLOCK bit can be set and cleared repeatedly (subject to the unlock se
      +                          quence)
  3462                           ;	Stack Full/Underflow Reset Enable bit
  3463                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  3464                           ;	Debugger Enable bit
  3465                           ;	DEBUG = OFF, Background debugger disabled
  3466                           ;	Extended Instruction Set Enable bit
  3467                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  3468   300003                     	org	3145731
  3469   300003  E7                 	db	231
  3470                           
  3471                           ;Config register CONFIG3L @ 0x300004
  3472                           ;	WDT Period selection bits
  3473                           ;	WDTCPS = WDTCPS_0, Divider ratio 1:32
  3474                           ;	WDT operating mode
  3475                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  3476   300004                     	org	3145732
  3477   300004  80                 	db	128
  3478                           
  3479                           ;Config register CONFIG3H @ 0x300005
  3480                           ;	WDT Window Select bits
  3481                           ;	WDTCWS = WDTCWS_0, window delay = 87.5; no software control; keyed access required
  3482                           ;	WDT input clock selector
  3483                           ;	WDTCCS = LFINTOSC, WDT reference clock is the 31.0 kHz LFINTOSC
  3484   300005                     	org	3145733
  3485   300005  C0                 	db	192
  3486                           
  3487                           ;Config register CONFIG4L @ 0x300006
  3488                           ;	Boot Block Size selection bits
  3489                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  3490                           ;	Boot Block enable bit
  3491                           ;	BBEN = OFF, Boot block disabled
  3492                           ;	Storage Area Flash enable bit
  3493                           ;	SAFEN = OFF, SAF disabled
  3494                           ;	Application Block write protection bit
  3495                           ;	WRTAPP = OFF, Application Block not write protected
  3496   300006                     	org	3145734
  3497   300006  FF                 	db	255
  3498                           
  3499                           ;Config register CONFIG4H @ 0x300007
  3500                           ;	Boot Block Write Protection bit
  3501                           ;	WRTB = OFF, Boot Block not write-protected
  3502                           ;	Configuration Register Write Protection bit
  3503                           ;	WRTC = OFF, Configuration registers not write-protected
  3504                           ;	Data EEPROM Write Protection bit
  3505                           ;	WRTD = OFF, Data EEPROM not write-protected
  3506                           ;	SAF Write protection bit
  3507                           ;	WRTSAF = OFF, SAF not Write Protected
  3508                           ;	Low Voltage Programming Enable bit
  3509                           ;	LVP = OFF, HV on MCLR/VPP must be used for programming
  3510   300007                     	org	3145735
  3511   300007  DF                 	db	223
  3512                           
  3513                           ;Config register CONFIG5L @ 0x300008
  3514                           ;	PFM and Data EEPROM Code Protection bit
  3515                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  3516   300008                     	org	3145736
  3517   300008  FF                 	db	255
  3518                           
  3519                           ;Config register CONFIG5H @ 0x300009
  3520                           ;	unspecified, using default values
  3521   300009                     	org	3145737
  3522   300009  FF                 	db	255
  3523                           tosu	equ	0x3FFF
  3524                           tosh	equ	0x3FFE
  3525                           tosl	equ	0x3FFD
  3526                           stkptr	equ	0x3FFC
  3527                           pclatu	equ	0x3FFB
  3528                           pclath	equ	0x3FFA
  3529                           pcl	equ	0x3FF9
  3530                           tblptru	equ	0x3FF8
  3531                           tblptrh	equ	0x3FF7
  3532                           tblptrl	equ	0x3FF6
  3533                           tablat	equ	0x3FF5
  3534                           prodh	equ	0x3FF4
  3535                           prodl	equ	0x3FF3
  3536                           indf0	equ	0x3FEF
  3537                           postinc0	equ	0x3FEE
  3538                           postdec0	equ	0x3FED
  3539                           preinc0	equ	0x3FEC
  3540                           plusw0	equ	0x3FEB
  3541                           fsr0h	equ	0x3FEA
  3542                           fsr0l	equ	0x3FE9
  3543                           wreg	equ	0x3FE8
  3544                           indf1	equ	0x3FE7
  3545                           postinc1	equ	0x3FE6
  3546                           postdec1	equ	0x3FE5
  3547                           preinc1	equ	0x3FE4
  3548                           plusw1	equ	0x3FE3
  3549                           fsr1h	equ	0x3FE2
  3550                           fsr1l	equ	0x3FE1
  3551                           bsr	equ	0x3FE0
  3552                           indf2	equ	0x3FDF
  3553                           postinc2	equ	0x3FDE
  3554                           postdec2	equ	0x3FDD
  3555                           preinc2	equ	0x3FDC
  3556                           plusw2	equ	0x3FDB
  3557                           fsr2h	equ	0x3FDA
  3558                           fsr2l	equ	0x3FD9
  3559                           status	equ	0x3FD8

Data Sizes:
    Strings     132
    Constant    0
    Data        4
    BSS         38
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      95
    BANK0           160     14      63
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0

Pointer List with Targets:

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S686$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    S686$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_12(CODE[6]), STR_11(CODE[6]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 6
		 -> STR_12(CODE[6]), STR_11(CODE[6]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK0[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 6
		 -> STR_12(CODE[6]), STR_11(CODE[6]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    S721$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    utoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_12(CODE[6]), STR_11(CODE[6]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    LCD_PutS@_str	PTR unsigned char  size(2) Largest target is 18
		 -> STR_10(CODE[17]), STR_9(CODE[17]), STR_8(CODE[7]), STR_7(CODE[7]), 
		 -> STR_6(CODE[7]), STR_5(CODE[7]), STR_4(CODE[13]), STR_3(CODE[16]), 
		 -> STR_2(CODE[17]), STR_1(CODE[18]), 

    LCD@_p	PTR volatile unsigned char  size(2) Largest target is 1
		 -> LATD(BITBIGSFRhhlhlll[1]), 

    _port	PTR volatile unsigned char  size(2) Largest target is 1
		 -> NULL(NULL[0]), LATD(BITBIGSFRhhlhlll[1]), 


Critical Paths under _main in COMRAM

    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_LCD_PutC
    _LCD_PutC->_WriteByte
    _LCD_PutS->_WriteByte
    _LCD_Goto->_WriteByte
    _LCD_CursorBlink->_WriteByte
    _LCD_Begin->_LCD_Clear
    _LCD_Clear->_WriteByte
    _WriteByte->_WriteNibble
    _WriteNibble->_WritePin
    _EnablePulse->_WritePin

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0   65775
                                              8 BANK0      6     6      0
                                _LCD
                          _LCD_Begin
                          _LCD_Clear
                    _LCD_CursorBlink
                           _LCD_Goto
                           _LCD_PutS
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4   22827
                                              2 BANK0      6     2      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   22621
                                             88 COMRAM     6     0      6
                                              0 BANK0      2     2      0
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           25    19      6   22271
                                             68 COMRAM    20    14      6
                              _fputc
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                32    22     10   15043
                                             36 COMRAM    32    22     10
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6   14015
                                             25 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    6939
                                             18 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4    6690
                                              9 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0    6074
                                              8 COMRAM     1     1      0
                           _LCD_PutC
 ---------------------------------------------------------------------------------
 (9) _LCD_PutC                                             1     1      0    6052
                                              7 COMRAM     1     1      0
                          _WriteByte
                           _WritePin
 ---------------------------------------------------------------------------------
 (5) ___lomod                                             17     1     16     311
                                              0 COMRAM    17     1     16
 ---------------------------------------------------------------------------------
 (5) ___lodiv                                             25     9     16     314
                                              0 COMRAM    25     9     16
 ---------------------------------------------------------------------------------
 (1) _LCD_PutS                                             5     3      2    6880
                                              7 COMRAM     5     3      2
                          _WriteByte
                           _WritePin
 ---------------------------------------------------------------------------------
 (1) _LCD_Goto                                             4     3      1    7052
                                              7 COMRAM     4     3      1
                          _WriteByte
                           _WritePin
 ---------------------------------------------------------------------------------
 (1) _LCD_CursorBlink                                      1     1      0    6052
                                              7 COMRAM     1     1      0
                          _WriteByte
                           _WritePin
 ---------------------------------------------------------------------------------
 (1) _LCD_Begin                                            5     4      1   16202
                                              8 COMRAM     4     3      1
                          _LCD_Clear
                          _WriteByte
                        _WriteNibble
                           _WritePin
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            1     1      0    6030
                                              7 COMRAM     1     1      0
                          _WriteByte
                           _WritePin
 ---------------------------------------------------------------------------------
 (10) _WriteByte                                           1     1      0    4064
                                              6 COMRAM     1     1      0
                        _WriteNibble
 ---------------------------------------------------------------------------------
 (11) _WriteNibble                                         1     1      0    4020
                                              5 COMRAM     1     1      0
                        _EnablePulse
                           _WritePin
 ---------------------------------------------------------------------------------
 (12) _EnablePulse                                         0     0      0    1966
                           _WritePin
 ---------------------------------------------------------------------------------
 (10) _WritePin                                            5     4      1    1966
                                              0 COMRAM     5     4      1
 ---------------------------------------------------------------------------------
 (1) _LCD                                                  8     0      8     686
                                              0 COMRAM     8     0      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD
   _LCD_Begin
     _LCD_Clear
       _WriteByte
         _WriteNibble
           _EnablePulse
             _WritePin
           _WritePin
       _WritePin
     _WriteByte
     _WriteNibble
     _WritePin
   _LCD_Clear
   _LCD_CursorBlink
     _WriteByte
     _WritePin
   _LCD_Goto
     _WriteByte
     _WritePin
   _LCD_PutS
     _WriteByte
     _WritePin
   _printf
     _vfprintf
       _vfpfcnvrt
         _fputc
           _putch
             _LCD_PutC
               _WriteByte
               _WritePin
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
             _fputs
               _fputc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0       0      45        0.0%
BITBIGSFRhhlhll    47E      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRl         1D9      0       0      43        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBIGSFRhhlhlh     C4      0       0      38        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      E      3F       5       39.4%
BITBIGSFRhhll       90      0       0      41        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5F       1      100.0%
BITBIGSFRhhh        3A      0       0      36        0.0%
BITBIGSFRhhlhh       7      0       0      37        0.0%
BITBIGSFRhhlhll      6      0       0      39        0.0%
BITBIGSFRhl          5      0       0      42        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      9E      44        0.0%
DATA                 0      0      9E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Feb 15 08:03:27 2024

        _LCD_CursorBlink 1CFA                       l41 1DC4                       l50 12DA  
                     l47 12A8                       l92 188C                       l88 1D94  
                    l101 1A6E                      l104 1D72                      l113 1BB8  
                    l107 1DA8                      l152 1CF8                      l128 1D28  
                    l146 1C8E                      l157 1B56                      l149 1DBA  
                    l605 17AC                      l615 195C                      l608 193C  
                    l902 19F2                      l910 1C4E                      l598 178C  
                    l862 1AE8                      l838 1D50                      l858 1A92  
                    l874 1518                      l866 1382                      l890 1C0A  
                    l883 16BC                      l868 138A                      _LCD 1D74  
                    u910 1AFC                      u911 1AF8                      u924 1B0E  
                    u940 1970                      u925 1B0A                      u941 196C  
                    u934 1B3A                      u950 1982                      u935 1B36  
                    u951 197E                      u960 19AA                      u961 19A6  
                    u970 19E0                      u971 19DC                      u980 1C4E  
                    u981 1C4A                      u991 16C4                      _pad 1A70  
                    wreg 003FE8      __end_of_EnablePulse 1CFA                     ?_LCD 0001  
                   l2010 10CE                     l2002 1086                     l2100 133A  
                   l2020 1114                     l2012 10D8                     l2004 109A  
                   l2030 1168                     l2022 112E                     l2014 10E4  
                   l2006 10BE                     l2040 11A8                     l2032 1174  
                   l2024 1138                     l2016 10FE                     l2008 10C8  
                   l2050 11FC                     l2042 11C2                     l2034 118E  
                   l2026 1144                     l2018 1108                     l2060 1252  
                   l2052 1208                     l2044 11CC                     l2036 1192  
                   l2028 115E                     l2070 126A                     l2062 1258  
                   l2054 1222                     l2046 11D8                     l2038 119C  
                   l2080 129C                     l2072 1274                     l2064 125C  
                   l2056 122C                     l2048 11F2                     l2090 12E8  
                   l2082 12A4                     l2074 1280                     l2066 1266  
                   l2058 1238                     l2092 12FA                     l2084 12B6  
                   l2076 128A                     l2068 1268                     l2094 1304  
                   l2086 12CE                     l2078 1296                     l1800 1924  
                   l2096 131A                     l2088 12D6                     l1722 1AEC  
                   l1730 1CD4                     l1802 1936                     l1810 1A9E  
                   l2098 1324                     l1900 1D80                     l1724 1AFC  
                   l1732 1CE2                     l1740 1D98                     l1812 1AB2  
                   l1804 1A70                     l1820 1376                     l2532 1668  
                   l1902 1D84                     l1726 1B28                     l1734 1CF0  
                   l1910 17AE                     l2534 1A48                     l1742 1DBE  
                   l1750 198C                     l1814 1AB6                     l1806 1A7E  
                   l1830 143E                     l1822 13B2                     l1904 1D88  
                   l1728 1CC8                     l1736 1C52                     l1920 17E0  
                   l1912 17B2                     l1752 19AA                     l1744 195E  
                   l1760 1C18                     l1816 1AD4                     l1808 1A8A  
                   l1840 14DE                     l1832 1444                     l1824 13BA  
                   l1906 1D8C                     l1738 1DAC                     l1930 1822  
                   l1922 17EC                     l1914 17BC                     l1770 16E8  
                   l1754 19E0                     l1746 1970                     l1762 1C2A  
                   l1842 14F8                     l1834 144A                     l1826 13C2  
                   l1818 135A                     l1850 1558                     l1908 1D90  
                   l1940 184A                     l1932 1828                     l1924 17F8  
                   l1916 17C8                     l1780 1752                     l1772 16F0  
                   l1748 1982                     l1764 1C2E                     l1828 13C8  
                   l1836 14AE                     l1860 1616                     l1852 1566  
                   l1950 186C                     l1942 1852                     l1934 1836  
                   l1926 1810                     l1918 17D4                     l1782 1772  
                   l1774 1704                     l1766 16BE                     l1790 18AC  
                   l1758 1C0C                     l1838 14C0                     l1854 156A  
                   l1846 151A                     l1952 1870                     l1944 1858  
                   l1936 183C                     l1928 1820                     l1960 1D06  
                   l1784 1774                     l1776 1712                     l1768 16CA  
                   l1792 18B4                     l1856 1582                     l1848 1546  
                   l1872 168C                     l1882 1D52                     l1954 1876  
                   l1946 1860                     l1938 1844                     l1962 1D16  
                   l1970 1A04                     l1786 1786                     l1778 1724  
                   l1794 18C8                     l1866 1646                     l1858 15A2  
                   l1890 1BE2                     l1884 1D62                     l1956 1886  
                   l1948 1866                     l1964 1D1E                     l1972 1A10  
                   l1980 1A34                     l1796 18D6                     l1788 188E  
                   l1868 1676                     l1892 1C02                     l1966 1D22  
                   l1958 1CFC                     l1974 1A1C                     l1990 1B6A  
                   l1798 1904                     l1886 1BBA                     ?_pad 001A  
                   l1896 1D74                     l1976 1A28                     l1968 19F6  
                   l1992 1B8A                     l1888 1BC6                     l1898 1D7C  
                   l1994 1B8C                     l1986 1B58                     l1988 1B62  
                   l1996 1D2A                     l1998 1D34                     STR_1 1001  
                   STR_2 1035                     STR_3 1046                     STR_4 1056  
                   STR_5 1063                     STR_6 106A                     STR_7 1071  
                   STR_8 1078                     STR_9 1013                     u1000 16E8  
                   u1001 16E4                     u1010 1712                     u1011 170E  
                   u1020 1752                     u1100 14DE                     u1021 174E  
                   u1101 14DA                     u1030 18AC                     u1110 14F8  
                   u1031 18A8                     u1111 14F4                     u1040 18D6  
                   u1120 1546                     u1041 18D2                     u1121 1542  
                   u1050 1904                     u1130 15A2                     u1051 1900  
                   u1131 159E                     u1060 1A7E                     u1140 1C02  
                   u1061 1A7A                     u1141 1BFE                     u1150 1820  
                   u1070 1AD4                     u1151 181C                     u1071 1AD0  
                   u1160 1D16                     u1080 1376                     u1161 1D12  
                   u1081 1372                     u1170 1BB8                     u1090 14C0  
                   u1171 1BB4                     u1091 14BC                     u1180 12B6  
                   u1181 12B2                     u1190 12E8                     u1191 12E4  
                   _LATD 003FBD                     u1817 10F0                     u1907 12D0  
                   u1827 1120                     u1917 1346                     u1837 1150  
                   u1927 1802                     u1847 1180                     u1937 182E  
                   u1857 11B4                     u1947 183E                     u1867 11E4  
                   u1957 184C                     u1877 1214                     u1967 185A  
                   u1887 1244                     u1977 187C                     u1897 129E  
                   u1987 1D68                     u1997 1CF2                     _dbuf 0066  
                   _main 1086                     _prec 0062                     pad@i 0021  
                   pad@p 001E                     fsr1h 003FE2                     fsr2h 003FDA  
                   indf2 003FDF                     fsr1l 003FE1                     pad@w 0023  
                   fsr2l 003FD9   LCD_CursorBlink@__blink 0008                     _utoa 135A  
                   start FFFC              LCD_Goto@col 000B              LCD_Goto@row 0008  
           ___param_bank 000000                    ??_LCD 0009                    ??_pad 0020  
                  LCD@d4 0005                    LCD@d5 0006                    LCD@d6 0007  
                  LCD@d7 0008                    LCD@_p 0001                    LCD@en 0004  
                  LCD@rs 0003         __end_of_LCD_Goto 1A70         __end_of_LCD_PutC 1DAA  
       __end_of_LCD_PutS 1BBA                    ?_main 0001                    _ADPCH 003EF1  
                  STR_10 1024                    STR_11 107F                    STR_12 107F  
                  ?_utoa 0025          __end_of___lodiv 17AE          __end_of___lomod 195E  
           vfpfcnvrt@fmt 0047                    _TRISD 003FC5                    __port 0094  
                  _flags 0064                    _fputc 195E                    _fputs 1C0C  
                  pad@fp 001A                    _width 0060                    _putch 1DBC  
                  tablat 003FF5               __XTAL_FREQ 009B                    utoa@d 0027  
                  utoa@i 0043                    utoa@n 003B                    utoa@p 0039  
                  utoa@w 0037                    status 003FD8         ___lodiv@dividend 0001  
__end_of_LCD_CursorBlink 1D2A          __initialization 1C90             __end_of_main 135A  
           __end_of_utoa 151A              _EnablePulse 1CC8                   ??_main 008E  
      __end_of_LCD_Begin 188E                   ??_utoa 002F        __end_of_LCD_Clear 1D74  
          __activetblptr 000002            LCD_Begin@cols 0001         ___lodiv@quotient 0011  
           LCD_PutS@_str 0008                   ?_fputc 000A                   ?_fputs 0013  
                 _ADRESH 003EF0                   _ADRESL 003EEF                   ?_putch 0001  
                 _ANSELD 003A70                   _LCD_D4 0099                   _LCD_D5 0098  
                 _LCD_D6 0097                   _LCD_D7 0096         __end_of_WritePin 1B58  
                 _LCD_EN 009A                   _LCD_RS 005F                   _OSCFRQ 0039DF  
           vfprintf@cfmt 0086                ??___lodiv 0011                ??___lomod 0011  
                 clear_0 1CB8                   isa$std 000001                   _printf 1D2A  
                 pad@buf 001C                   fputc@c 000A                   fputs@c 0017  
                 fputs@i 0018                   fputs@s 0013             __mediumconst 0000  
                 tblptrh 003FF7                   tblptrl 003FF6                   tblptru 003FF8  
                 putch@c 0009         __end_of_vfprintf 1C0C                   utoa@fp 0025  
             __accesstop 0060  __end_of__initialization 1CBE                ?_LCD_Goto 0008  
              ?_LCD_PutC 0001                ?_LCD_PutS 0008            ___rparam_used 000001  
       ?_LCD_CursorBlink 0001           __pcstackCOMRAM 0001                LCD_PutC@c 0008  
              LCD_PutS@i 000C             __pidataBANK0 1DC6            __end_of_fputc 19F4  
          __end_of_fputs 1C50            __end_of_putch 1DC6                  ??_fputc 000E  
                ??_fputs 0017                  ??_putch 0009               __pbssBANK0 0060  
         LCD_Begin@lines 0009             WriteNibble@b 0006               ??_LCD_Goto 0009  
           WritePin@_pin 0005               ??_LCD_PutC 0008               ??_LCD_PutS 000A  
             __pnvCOMRAM 005F               WriteByte@b 0007            ??_WriteNibble 0006  
                ?_printf 0088                ?_WritePin 0001        __end_of_WriteByte 1DBC  
                _OSCCON1 0039D9         ___lomod@dividend 0001                  __Hparam 0000  
                __Lparam 0000                  ___lodiv 16BE                  ___lomod 188E  
              ?_vfprintf 0059             __psmallconst 1000                  __pcinit 1C90  
                __ramtop 1000             ?_EnablePulse 0001               ??_WritePin 0002  
                __ptext0 1086                  __ptext1 1D2A                  __ptext2 1BBA  
                __ptext3 151A                  __ptext4 135A                  __ptext5 1A70  
                __ptext6 1C0C                  __ptext7 195E                  __ptext8 1DBC  
                __ptext9 1D96      __end_of_WriteNibble 1C90          __displaycontrol 0065  
              _LCD_Begin 17AE                _LCD_Clear 1D52     end_of_initialization 1CBE  
                fputc@fp 000C            __Lmediumconst 0000                  fputs@fp 0015  
      __end_of_vfpfcnvrt 16BE                  postdec1 003FE5                  postdec2 003FDD  
                postinc0 003FEE                  postinc1 003FE6                  postinc2 003FDE  
       vfpfcnvrt@convarg 004F               ??_vfprintf 005F               ?_LCD_Begin 0009  
             ?_LCD_Clear 0001              vfpfcnvrt@ap 0049              _WriteNibble 1C50  
            vfpfcnvrt@cp 0057              vfpfcnvrt@fp 0045           __end_of_printf 1D52  
    start_initialization 1C90          ___lodiv@divisor 0009              __end_of_LCD 1D96  
        ___lodiv@counter 0019              __end_of_pad 1AEA              vfprintf@fmt 005B  
            __pdataBANK0 009B                 ??_printf 005F            __pcstackBANK0 0086  
            ??_LCD_Begin 000A              ??_LCD_Clear 0008                _WriteByte 1DAA  
              __pnvBANK0 0094              WritePin@val 0001                 ?___lodiv 0001  
               ?___lomod 0001          ___lomod@divisor 0009              __smallconst 1000  
        ___lomod@counter 0011               ?_WriteByte 0001                 _LCD_Goto 19F4  
               _LCD_PutC 1D96                 _LCD_PutS 1B58   LCD_Begin@_function_set 000C  
              _vfpfcnvrt 151A               _ADCON0bits 003EF8        ??_LCD_CursorBlink 0008  
              copy_data0 1CA4                 __Hrparam 0000               vfprintf@ap 005D  
               __Lrparam 0000               vfprintf@fp 0059             ?_WriteNibble 0001  
             ?_vfpfcnvrt 0045                 _WritePin 1AEA              ??_WriteByte 0007  
               __ptext10 188E                 __ptext11 16BE                 __ptext20 1AEA  
               __ptext12 1B58                 __ptext21 1D74                 __ptext13 19F4  
               __ptext14 1CFA                 __ptext15 17AE                 __ptext16 1D52  
               __ptext17 1DAA                 __ptext18 1C50                 __ptext19 1CC8  
               isa$xinst 000000                 _vfprintf 1BBA                printf@fmt 0088  
               main@pot1 0090                 main@pot2 0092                 printf@ap 008C  
            ??_vfpfcnvrt 004B            ??_EnablePulse 0006  
